swagger: '2.0'
info:
  title: Configuration Service API
  version: 0.1.0
basePath: /v1
schemes:
  - http

definitions:

  error:
    type: object
    required:
      - message
    properties: 
      code:
        type: integer
        format: int64
        description: Error code
      message:
        type: string
        description: Error message

  version:
    type: object
    properties:
      version:
        type: string
        description: Version identifier

  project:
    type: object
    properties:
      projectName:
        type: string
        description: Project name

  stage:
    type: object
    properties:
      stageName:
        type: string
        description: Stage name

  service:
    type: object
    properties:
      serviceName:
        type: string
        description: Service name

  resource:
    type: object
    properties:
      resourceURI:
        type: string
        description: Resource URI
      resourceContent:
        type: string
        format: byte
        description: Resource content

  projects:
    type: object
    properties:
      nextPageKey: 
        type: string
        description: Pointer to next page, base64 encoded
      totalCount: 
        type: number
        description: Total number of projects
      pageSize: 
        type: number
        description: Size of returned page
      projects:
        type: array
        items:
          $ref: '#/definitions/project'

  stages:
    type: object
    properties:
      nextPageKey: 
        type: string
        description: Pointer to next page, base64 encoded
      totalCount: 
        type: number
        description: Total number of stages
      pageSize: 
        type: number
        description: Size of returned page
      stages:
        type: array
        items:
          $ref: '#/definitions/stage'

  services:
    type: object
    properties:
      nextPageKey: 
        type: string
        description: Pointer to next page, base64 encoded
      totalCount: 
        type: number
        description: Total number of services
      pageSize: 
        type: number
        description: Size of returned page
      services:
        type: array
        items:
          $ref: '#/definitions/service'

  resources:
    type: object
    properties:
      nextPageKey: 
        type: string
        description: Pointer to next page, base64 encoded
      totalCount: 
        type: number
        description: Total number of resources
      pageSize: 
        type: number
        description: Size of returned page
      resources:
        type: array
        items:
          $ref: '#/definitions/resource'

parameters:
  projectName:
    in: path
    name: projectName
    required: true
    type: string
    description: Name of the project
  stageName:
    in: path
    name: stageName
    required: true
    type: string
    description: Name of the stage
  serviceName:
    in: path
    name: serviceName
    required: true
    type: string
    description: Name of the service
  resource:
    in: path
    name: resource
    required: true
    type: string
    description: Resource URI
  pageSize:
    in: query
    name: pageSize
    type: integer
    minimum: 1
    maximum: 100
    default: 20
    description: The numbers of items to return
  nextPageKey:
    in: query
    name: nextPageKey
    type: string
    description: Pointer to the next page
  resourceContents:
    in: formData
    name: resourceContents
    type: array
    items: 
      type: string
    description: Array of resource contents
  resourceURIs:
    in: formData
    name: resourceURIs
    type: array
    items:
      type: string
    description: Array of resource URIs
paths:

  '/project':
    post:
      tags:
        - Project
      summary: Create a new project by project name
      parameters:
        - name: body
          in: body
          schema: 
            $ref: '#/definitions/project'
      responses:
        '204':
          description: Success. Project has been created. Response does not have a body.
        '400':
          description: Failed. Project could not be created.
          schema:
            $ref: '#/definitions/error'
    get:
      tags:
        - Project
      parameters:
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextPageKey'
      summary: Get list of projects
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/projects'

  '/project/{projectName}':
    parameters:
      - $ref: '#/parameters/projectName'
    get:
      tags:
        - Project
      summary: Get the specified project
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/project'
    put:
      tags:
        - Project
      summary: Update the specified project
      parameters:
        - name: body
          in: body
          schema: 
            $ref: '#/definitions/project'      
      responses:
        '204':
          description: Success. Project has been updated. Response does not have a body.
        '400':
          description: Failed. Project could not be updated.
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
        - Project
      summary: Delete the specified project
      responses:
        '204':
          description: Success. Project has been deleted. Response does not have a body.
        '400':
          description: Failed. Project could not be deleted.
          schema:
            $ref: '#/definitions/error'

  '/project/{projectName}/resource':
    parameters:
      - $ref: '#/parameters/projectName'
    post:
      tags:
        - Project Resource
      summary: Create a list of resources for the project
      consumes:
        - multipart/form-data
      parameters:
         - $ref: '#/parameters/resourceContents'
         - $ref: '#/parameters/resourceURIs'         
      responses:
        '201':
          description: Success. Project resource has been created. The version of the new configuration is returned.
          schema:
            $ref: '#/definitions/version'
        '400':
          description: Failed. Project resource could not be created.
          schema:
            $ref: '#/definitions/error'
    get:
      tags:
        - Project Resource
      parameters:
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextPageKey'
      summary: Get list of project resources
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/resources'

  '/project/{projectName}/resource/{resource}':
    parameters:
      - $ref: '#/parameters/projectName'
      - $ref: '#/parameters/resource'
    get:
      tags:
        - Project Resource
      summary: Get the specified resource
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/resource'
    put:
      tags:
        - Project Resource
      summary: Update the specified resource
      responses:
        '201':
          description: Success. Project resource has been updated. The version of the new configuration is returned.
          schema:
            $ref: '#/definitions/version'
        '400':
          description: Failed. Project resource could not be updated.
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
        - Project Resource
      summary: Delete the specified resource
      responses:
        '204':
          description: Success. Project resource has been deleted. Response does not have a body.
        '400':
          description: Failed. Project resource could not be deleted.
          schema:
            $ref: '#/definitions/error'
          
  '/project/{projectName}/stage':
    parameters:
      - $ref: '#/parameters/projectName'
    post:
      tags:
        - Stage
      summary: Create a new stage by stage name
      parameters:
        - name: body
          in: body
          schema: 
            $ref: '#/definitions/stage'
      responses:
        '204':
          description: Success. Stage has been created. Response does not have a body.
        '400':
          description: Failed. Stage could not be created.
          schema:
            $ref: '#/definitions/error'
    get:
      tags:
        - Stage
      parameters:
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextPageKey'
      summary: Get list of stages
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/stages'

  '/project/{projectName}/stage/{stageName}':
    parameters:
      - $ref: '#/parameters/projectName'
      - $ref: '#/parameters/stageName'
    get:
      tags:
        - Stage
      summary: Get the specified stage
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/stage'
    put:
      tags:
        - Stage
      summary: Update the specified stage
      parameters:
        - name: body
          in: body
          schema: 
            $ref: '#/definitions/stage'
      responses:
        '204':
          description: Success. Stage has been updated. Response does not have a body.
        '400':
          description: Failed. Stage could not be updated.
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
        - Stage
      summary: Delete the specified stage
      responses:
        '204':
          description: Success. Stage has been deleted. Response does not have a body.
        '400':
          description: Failed. Stage could not be deleted.
          schema:
            $ref: '#/definitions/error'

  '/project/{projectName}/stage/{stageName}/resource':
    parameters:
      - $ref: '#/parameters/projectName'
      - $ref: '#/parameters/stageName'
    post:
      tags:
        - Stage Resource
      summary: Create a list of new resources for the stage
      consumes:
        - multipart/form-data
      parameters:
         - $ref: '#/parameters/resourceContents'
         - $ref: '#/parameters/resourceURIs'  
      responses:
        '201':
          description: Success. Stage resource has been created. The version of the new configuration is returned.
          schema:
            $ref: '#/definitions/version'
        '400':
          description: Failed. Stage resource could not be created.
          schema:
            $ref: '#/definitions/error'
    get:
      tags:
        - Stage Resource
      parameters:
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextPageKey'
      summary: Get list of stage resources
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/resources'

  '/project/{projectName}/stage/{stageName}/resource/{resource}':
    parameters:
      - $ref: '#/parameters/projectName'
      - $ref: '#/parameters/stageName'
      - $ref: '#/parameters/resource'
    get:
      tags:
        - Stage Resource
      summary: Get the specified resource
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/resource'
    put:
      tags:
        - Stage Resource
      summary: Update the specified resource
      responses:
        '201':
          description: Success. Stage resource has been updated. The version of the new configuration is returned.
          schema:
            $ref: '#/definitions/version'
        '400':
          description: Failed. Stage resource could not be updated.
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
        - Stage Resource
      summary: Delete the specified resource
      responses:
        '204':
          description: Success. Stage resource has been deleted. Response does not have a body.
        '400':
          description: Failed. Stage resource could not be deleted.
          schema:
            $ref: '#/definitions/error'

  '/project/{projectName}/stage/{stageName}/service':
    parameters:
      - $ref: '#/parameters/projectName'
      - $ref: '#/parameters/stageName'
    post:
      tags:
        - Service
      summary: Create a new service by service name
      parameters:
        - name: body
          in: body
          schema: 
            $ref: '#/definitions/service'
      responses:
        '201':
          description: Success. Service has been created. The version of the new configuration is returned.
          schema:
            $ref: '#/definitions/version'
        '400':
          description: Failed. Service could not be created.
          schema:
            $ref: '#/definitions/error'
    get:
      tags:
        - Service
      parameters:
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextPageKey'
      summary: Get list of services
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/services'

  '/project/{projectName}/stage/{stageName}/service/{serviceName}':
    parameters:
      - $ref: '#/parameters/projectName'
      - $ref: '#/parameters/stageName'
      - $ref: '#/parameters/serviceName'      
    get:
      tags:
        - Service
      summary: Get the specified service
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/service'
    put:
      tags:
        - Service
      summary: Update the specified service
      parameters:
        - name: body
          in: body
          schema: 
            $ref: '#/definitions/service'
      responses:
        '204':
          description: Success. Service has been updated. Response does not have a body.
        '400':
          description: Failed. Service could not be updated.
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
        - Service
      summary: Delete the specified service
      responses:
        '204':
          description: Success. Service has been deleted. Response does not have a body.
        '400':
          description: Failed. Service could not be deleted.
          schema:
            $ref: '#/definitions/error'

  '/project/{projectName}/stage/{stageName}/service/{serviceName}/resource':
    parameters:
      - $ref: '#/parameters/projectName'
      - $ref: '#/parameters/stageName'
      - $ref: '#/parameters/serviceName'
    post:
      tags:
        - Service Resource
      summary: Create a list of resources for the service
      consumes:
        - multipart/form-data
      parameters:
         - $ref: '#/parameters/resourceContents'
         - $ref: '#/parameters/resourceURIs'  
      responses:
        '201':
          description: Success. Service resource has been created. The version of the new configuration is returned.
          schema:
            $ref: '#/definitions/version'
        '400':
          description: Failed. Service resource could not be created.
          schema:
            $ref: '#/definitions/error'
    get:
      tags:
        - Service Resource
      parameters:
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextPageKey'
      summary: Get list of service resources
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/resources'

  '/project/{projectName}/stage/{stageName}/service/{serviceName}/resource/{resource}':
    parameters:
      - $ref: '#/parameters/projectName'
      - $ref: '#/parameters/stageName'
      - $ref: '#/parameters/serviceName'
      - $ref: '#/parameters/resource'
    get:
      tags:
        - Service Resource
      summary: Get the specified resource
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/resource'
    put:
      tags:
        - Service Resource
      summary: Update the specified resource
      responses:
        '201':
          description: Success. Service resource has been updated. The version of the new configuration is returned.
          schema:
            $ref: '#/definitions/version'
        '400':
          description: Failed. Service resource could not be updated.
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
        - Service Resource
      summary: Delete the specified resource
      responses:
        '204':
          description: Success. Service resource has been deleted. Response does not have a body.
        '400':
          description: Failed. Service resource could not be deleted.
          schema:
            $ref: '#/definitions/error'

  '/project/{projectName}/service/{serviceName}/resource':
    parameters:
      - $ref: '#/parameters/projectName'
      - $ref: '#/parameters/serviceName'
    post:
      tags:
        - Service Default Resource 
      summary: Create a list of default resources for the service used in all stages
      consumes:
        - multipart/form-data
      parameters:
         - $ref: '#/parameters/resourceContents'
         - $ref: '#/parameters/resourceURIs' 
      responses:
        '201':
          description: Success. Service default resource has been created. The version of the new configuration is returned.
          schema:
            $ref: '#/definitions/version'
        '400':
          description: Failed. Service default resource could not be created.
          schema:
            $ref: '#/definitions/error'
    get:
      tags:
        - Service Default Resource 
      parameters:
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/nextPageKey'
      summary: Get list of default resources for the service used in all stages
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/resources'

  '/project/{projectName}/service/{serviceName}/resource/{resource}':
    parameters:
      - $ref: '#/parameters/projectName'
      - $ref: '#/parameters/stageName'
      - $ref: '#/parameters/serviceName'
      - $ref: '#/parameters/resource'
    get:
      tags:
        - Service Default Resource
      summary: Get the specified default resource for the service
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/resource'
    put:
      tags:
        - Service Default Resource
      summary: Update the specified default resource for the service
      responses:
        '201':
          description: Success. Service default resource has been updated. The version of the new configuration is returned.
          schema:
            $ref: '#/definitions/version'
        '400':
          description: Failed. Service default resource could not be updated.
          schema:
            $ref: '#/definitions/error'
    delete:
      tags:
        - Service Default Resource
      summary: Delete the specified default resource for the service
      responses:
        '204':
          description: Success. Service default resource has been deleted. Response does not have a body.
        '400':
          description: Failed. Service default resource could not be deleted.
          schema:
            $ref: '#/definitions/error'
