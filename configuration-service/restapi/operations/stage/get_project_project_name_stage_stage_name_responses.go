// Code generated by go-swagger; DO NOT EDIT.

package stage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/keptn/keptn/configuration-service/models"
)

// GetProjectProjectNameStageStageNameOKCode is the HTTP code returned for type GetProjectProjectNameStageStageNameOK
const GetProjectProjectNameStageStageNameOKCode int = 200

/*GetProjectProjectNameStageStageNameOK Success

swagger:response getProjectProjectNameStageStageNameOK
*/
type GetProjectProjectNameStageStageNameOK struct {

	/*
	  In: Body
	*/
	Payload *models.ExpandedStage `json:"body,omitempty"`
}

// NewGetProjectProjectNameStageStageNameOK creates GetProjectProjectNameStageStageNameOK with default headers values
func NewGetProjectProjectNameStageStageNameOK() *GetProjectProjectNameStageStageNameOK {

	return &GetProjectProjectNameStageStageNameOK{}
}

// WithPayload adds the payload to the get project project name stage stage name o k response
func (o *GetProjectProjectNameStageStageNameOK) WithPayload(payload *models.ExpandedStage) *GetProjectProjectNameStageStageNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get project project name stage stage name o k response
func (o *GetProjectProjectNameStageStageNameOK) SetPayload(payload *models.ExpandedStage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProjectProjectNameStageStageNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetProjectProjectNameStageStageNameNotFoundCode is the HTTP code returned for type GetProjectProjectNameStageStageNameNotFound
const GetProjectProjectNameStageStageNameNotFoundCode int = 404

/*GetProjectProjectNameStageStageNameNotFound Failed. Project resource could not be found.

swagger:response getProjectProjectNameStageStageNameNotFound
*/
type GetProjectProjectNameStageStageNameNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetProjectProjectNameStageStageNameNotFound creates GetProjectProjectNameStageStageNameNotFound with default headers values
func NewGetProjectProjectNameStageStageNameNotFound() *GetProjectProjectNameStageStageNameNotFound {

	return &GetProjectProjectNameStageStageNameNotFound{}
}

// WithPayload adds the payload to the get project project name stage stage name not found response
func (o *GetProjectProjectNameStageStageNameNotFound) WithPayload(payload *models.Error) *GetProjectProjectNameStageStageNameNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get project project name stage stage name not found response
func (o *GetProjectProjectNameStageStageNameNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProjectProjectNameStageStageNameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetProjectProjectNameStageStageNameDefault Error

swagger:response getProjectProjectNameStageStageNameDefault
*/
type GetProjectProjectNameStageStageNameDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetProjectProjectNameStageStageNameDefault creates GetProjectProjectNameStageStageNameDefault with default headers values
func NewGetProjectProjectNameStageStageNameDefault(code int) *GetProjectProjectNameStageStageNameDefault {
	if code <= 0 {
		code = 500
	}

	return &GetProjectProjectNameStageStageNameDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get project project name stage stage name default response
func (o *GetProjectProjectNameStageStageNameDefault) WithStatusCode(code int) *GetProjectProjectNameStageStageNameDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get project project name stage stage name default response
func (o *GetProjectProjectNameStageStageNameDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get project project name stage stage name default response
func (o *GetProjectProjectNameStageStageNameDefault) WithPayload(payload *models.Error) *GetProjectProjectNameStageStageNameDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get project project name stage stage name default response
func (o *GetProjectProjectNameStageStageNameDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProjectProjectNameStageStageNameDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
