// Code generated by go-swagger; DO NOT EDIT.

package service_resource

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/keptn/keptn/configuration-service/models"
)

// DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURINoContentCode is the HTTP code returned for type DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURINoContent
const DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURINoContentCode int = 204

/*DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURINoContent Success. Service resource has been deleted.

swagger:response deleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceUriNoContent
*/
type DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURINoContent struct {

	/*
	  In: Body
	*/
	Payload *models.Version `json:"body,omitempty"`
}

// NewDeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURINoContent creates DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURINoContent with default headers values
func NewDeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURINoContent() *DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURINoContent {

	return &DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURINoContent{}
}

// WithPayload adds the payload to the delete project project name stage stage name service service name resource resource Uri no content response
func (o *DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURINoContent) WithPayload(payload *models.Version) *DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURINoContent {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete project project name stage stage name service service name resource resource Uri no content response
func (o *DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURINoContent) SetPayload(payload *models.Version) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURINoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(204)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIBadRequestCode is the HTTP code returned for type DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIBadRequest
const DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIBadRequestCode int = 400

/*DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIBadRequest Failed. Service resource could not be deleted.

swagger:response deleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceUriBadRequest
*/
type DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIBadRequest creates DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIBadRequest with default headers values
func NewDeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIBadRequest() *DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIBadRequest {

	return &DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIBadRequest{}
}

// WithPayload adds the payload to the delete project project name stage stage name service service name resource resource Uri bad request response
func (o *DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIBadRequest) WithPayload(payload *models.Error) *DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete project project name stage stage name service service name resource resource Uri bad request response
func (o *DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIDefault Error

swagger:response deleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceUriDefault
*/
type DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIDefault creates DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIDefault with default headers values
func NewDeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIDefault(code int) *DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete project project name stage stage name service service name resource resource URI default response
func (o *DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIDefault) WithStatusCode(code int) *DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete project project name stage stage name service service name resource resource URI default response
func (o *DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete project project name stage stage name service service name resource resource URI default response
func (o *DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIDefault) WithPayload(payload *models.Error) *DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete project project name stage stage name service service name resource resource URI default response
func (o *DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteProjectProjectNameStageStageNameServiceServiceNameResourceResourceURIDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
