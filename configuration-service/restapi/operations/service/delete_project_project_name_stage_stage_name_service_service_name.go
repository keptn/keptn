// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteProjectProjectNameStageStageNameServiceServiceNameHandlerFunc turns a function with the right signature into a delete project project name stage stage name service service name handler
type DeleteProjectProjectNameStageStageNameServiceServiceNameHandlerFunc func(DeleteProjectProjectNameStageStageNameServiceServiceNameParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteProjectProjectNameStageStageNameServiceServiceNameHandlerFunc) Handle(params DeleteProjectProjectNameStageStageNameServiceServiceNameParams) middleware.Responder {
	return fn(params)
}

// DeleteProjectProjectNameStageStageNameServiceServiceNameHandler interface for that can handle valid delete project project name stage stage name service service name params
type DeleteProjectProjectNameStageStageNameServiceServiceNameHandler interface {
	Handle(DeleteProjectProjectNameStageStageNameServiceServiceNameParams) middleware.Responder
}

// NewDeleteProjectProjectNameStageStageNameServiceServiceName creates a new http.Handler for the delete project project name stage stage name service service name operation
func NewDeleteProjectProjectNameStageStageNameServiceServiceName(ctx *middleware.Context, handler DeleteProjectProjectNameStageStageNameServiceServiceNameHandler) *DeleteProjectProjectNameStageStageNameServiceServiceName {
	return &DeleteProjectProjectNameStageStageNameServiceServiceName{Context: ctx, Handler: handler}
}

/*DeleteProjectProjectNameStageStageNameServiceServiceName swagger:route DELETE /project/{projectName}/stage/{stageName}/service/{serviceName} Service deleteProjectProjectNameStageStageNameServiceServiceName

INTERNAL Endpoint: Delete the specified service

*/
type DeleteProjectProjectNameStageStageNameServiceServiceName struct {
	Context *middleware.Context
	Handler DeleteProjectProjectNameStageStageNameServiceServiceNameHandler
}

func (o *DeleteProjectProjectNameStageStageNameServiceServiceName) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteProjectProjectNameStageStageNameServiceServiceNameParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
