// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/keptn/keptn/configuration-service/models"
)

// PutProjectProjectNameStageStageNameServiceServiceNameNoContentCode is the HTTP code returned for type PutProjectProjectNameStageStageNameServiceServiceNameNoContent
const PutProjectProjectNameStageStageNameServiceServiceNameNoContentCode int = 204

/*PutProjectProjectNameStageStageNameServiceServiceNameNoContent Success. Service has been updated. Response does not have a body.

swagger:response putProjectProjectNameStageStageNameServiceServiceNameNoContent
*/
type PutProjectProjectNameStageStageNameServiceServiceNameNoContent struct {
}

// NewPutProjectProjectNameStageStageNameServiceServiceNameNoContent creates PutProjectProjectNameStageStageNameServiceServiceNameNoContent with default headers values
func NewPutProjectProjectNameStageStageNameServiceServiceNameNoContent() *PutProjectProjectNameStageStageNameServiceServiceNameNoContent {

	return &PutProjectProjectNameStageStageNameServiceServiceNameNoContent{}
}

// WriteResponse to the client
func (o *PutProjectProjectNameStageStageNameServiceServiceNameNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// PutProjectProjectNameStageStageNameServiceServiceNameBadRequestCode is the HTTP code returned for type PutProjectProjectNameStageStageNameServiceServiceNameBadRequest
const PutProjectProjectNameStageStageNameServiceServiceNameBadRequestCode int = 400

/*PutProjectProjectNameStageStageNameServiceServiceNameBadRequest Failed. Service could not be updated.

swagger:response putProjectProjectNameStageStageNameServiceServiceNameBadRequest
*/
type PutProjectProjectNameStageStageNameServiceServiceNameBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutProjectProjectNameStageStageNameServiceServiceNameBadRequest creates PutProjectProjectNameStageStageNameServiceServiceNameBadRequest with default headers values
func NewPutProjectProjectNameStageStageNameServiceServiceNameBadRequest() *PutProjectProjectNameStageStageNameServiceServiceNameBadRequest {

	return &PutProjectProjectNameStageStageNameServiceServiceNameBadRequest{}
}

// WithPayload adds the payload to the put project project name stage stage name service service name bad request response
func (o *PutProjectProjectNameStageStageNameServiceServiceNameBadRequest) WithPayload(payload *models.Error) *PutProjectProjectNameStageStageNameServiceServiceNameBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put project project name stage stage name service service name bad request response
func (o *PutProjectProjectNameStageStageNameServiceServiceNameBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutProjectProjectNameStageStageNameServiceServiceNameBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PutProjectProjectNameStageStageNameServiceServiceNameDefault Error

swagger:response putProjectProjectNameStageStageNameServiceServiceNameDefault
*/
type PutProjectProjectNameStageStageNameServiceServiceNameDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutProjectProjectNameStageStageNameServiceServiceNameDefault creates PutProjectProjectNameStageStageNameServiceServiceNameDefault with default headers values
func NewPutProjectProjectNameStageStageNameServiceServiceNameDefault(code int) *PutProjectProjectNameStageStageNameServiceServiceNameDefault {
	if code <= 0 {
		code = 500
	}

	return &PutProjectProjectNameStageStageNameServiceServiceNameDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put project project name stage stage name service service name default response
func (o *PutProjectProjectNameStageStageNameServiceServiceNameDefault) WithStatusCode(code int) *PutProjectProjectNameStageStageNameServiceServiceNameDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put project project name stage stage name service service name default response
func (o *PutProjectProjectNameStageStageNameServiceServiceNameDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put project project name stage stage name service service name default response
func (o *PutProjectProjectNameStageStageNameServiceServiceNameDefault) WithPayload(payload *models.Error) *PutProjectProjectNameStageStageNameServiceServiceNameDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put project project name stage stage name service service name default response
func (o *PutProjectProjectNameStageStageNameServiceServiceNameDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutProjectProjectNameStageStageNameServiceServiceNameDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
