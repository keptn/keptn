// Code generated by go-swagger; DO NOT EDIT.

package stage_resource

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteProjectProjectNameStageStageNameResourceResourceURIHandlerFunc turns a function with the right signature into a delete project project name stage stage name resource resource URI handler
type DeleteProjectProjectNameStageStageNameResourceResourceURIHandlerFunc func(DeleteProjectProjectNameStageStageNameResourceResourceURIParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteProjectProjectNameStageStageNameResourceResourceURIHandlerFunc) Handle(params DeleteProjectProjectNameStageStageNameResourceResourceURIParams) middleware.Responder {
	return fn(params)
}

// DeleteProjectProjectNameStageStageNameResourceResourceURIHandler interface for that can handle valid delete project project name stage stage name resource resource URI params
type DeleteProjectProjectNameStageStageNameResourceResourceURIHandler interface {
	Handle(DeleteProjectProjectNameStageStageNameResourceResourceURIParams) middleware.Responder
}

// NewDeleteProjectProjectNameStageStageNameResourceResourceURI creates a new http.Handler for the delete project project name stage stage name resource resource URI operation
func NewDeleteProjectProjectNameStageStageNameResourceResourceURI(ctx *middleware.Context, handler DeleteProjectProjectNameStageStageNameResourceResourceURIHandler) *DeleteProjectProjectNameStageStageNameResourceResourceURI {
	return &DeleteProjectProjectNameStageStageNameResourceResourceURI{Context: ctx, Handler: handler}
}

/*DeleteProjectProjectNameStageStageNameResourceResourceURI swagger:route DELETE /project/{projectName}/stage/{stageName}/resource/{resourceURI} Stage Resource deleteProjectProjectNameStageStageNameResourceResourceUri

Delete the specified resource

*/
type DeleteProjectProjectNameStageStageNameResourceResourceURI struct {
	Context *middleware.Context
	Handler DeleteProjectProjectNameStageStageNameResourceResourceURIHandler
}

func (o *DeleteProjectProjectNameStageStageNameResourceResourceURI) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteProjectProjectNameStageStageNameResourceResourceURIParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
