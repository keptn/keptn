// Code generated by go-swagger; DO NOT EDIT.

package stage_resource

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/keptn/keptn/configuration-service/models"
)

// GetProjectProjectNameStageStageNameResourceOKCode is the HTTP code returned for type GetProjectProjectNameStageStageNameResourceOK
const GetProjectProjectNameStageStageNameResourceOKCode int = 200

/*GetProjectProjectNameStageStageNameResourceOK Success

swagger:response getProjectProjectNameStageStageNameResourceOK
*/
type GetProjectProjectNameStageStageNameResourceOK struct {

	/*
	  In: Body
	*/
	Payload *models.Resources `json:"body,omitempty"`
}

// NewGetProjectProjectNameStageStageNameResourceOK creates GetProjectProjectNameStageStageNameResourceOK with default headers values
func NewGetProjectProjectNameStageStageNameResourceOK() *GetProjectProjectNameStageStageNameResourceOK {

	return &GetProjectProjectNameStageStageNameResourceOK{}
}

// WithPayload adds the payload to the get project project name stage stage name resource o k response
func (o *GetProjectProjectNameStageStageNameResourceOK) WithPayload(payload *models.Resources) *GetProjectProjectNameStageStageNameResourceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get project project name stage stage name resource o k response
func (o *GetProjectProjectNameStageStageNameResourceOK) SetPayload(payload *models.Resources) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProjectProjectNameStageStageNameResourceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
