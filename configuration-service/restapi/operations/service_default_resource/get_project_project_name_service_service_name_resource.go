// Code generated by go-swagger; DO NOT EDIT.

package service_default_resource

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetProjectProjectNameServiceServiceNameResourceHandlerFunc turns a function with the right signature into a get project project name service service name resource handler
type GetProjectProjectNameServiceServiceNameResourceHandlerFunc func(GetProjectProjectNameServiceServiceNameResourceParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetProjectProjectNameServiceServiceNameResourceHandlerFunc) Handle(params GetProjectProjectNameServiceServiceNameResourceParams) middleware.Responder {
	return fn(params)
}

// GetProjectProjectNameServiceServiceNameResourceHandler interface for that can handle valid get project project name service service name resource params
type GetProjectProjectNameServiceServiceNameResourceHandler interface {
	Handle(GetProjectProjectNameServiceServiceNameResourceParams) middleware.Responder
}

// NewGetProjectProjectNameServiceServiceNameResource creates a new http.Handler for the get project project name service service name resource operation
func NewGetProjectProjectNameServiceServiceNameResource(ctx *middleware.Context, handler GetProjectProjectNameServiceServiceNameResourceHandler) *GetProjectProjectNameServiceServiceNameResource {
	return &GetProjectProjectNameServiceServiceNameResource{Context: ctx, Handler: handler}
}

/*GetProjectProjectNameServiceServiceNameResource swagger:route GET /project/{projectName}/service/{serviceName}/resource Service Default Resource getProjectProjectNameServiceServiceNameResource

Get list of default resources for the service used in all stages

*/
type GetProjectProjectNameServiceServiceNameResource struct {
	Context *middleware.Context
	Handler GetProjectProjectNameServiceServiceNameResourceHandler
}

func (o *GetProjectProjectNameServiceServiceNameResource) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetProjectProjectNameServiceServiceNameResourceParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
