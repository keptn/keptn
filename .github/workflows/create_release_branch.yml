name: Create Release Branch
# this action helps for release automating by creating a release branch and resp. PRs
# based on https://riggaroo.dev/using-github-actions-to-automate-our-release-process/
on:
  workflow_dispatch:
    inputs:
      versionName:
        description: 'Semantic Version (e.g., 0.8.0, 0.8.0-hotfix1)'
        required: true
      baseBranch:
        description: 'Which branch to create the release from (e.g., master, release-0.8.0)'
        default: 'master'
        required: true
env:
  KEPTN_BOT_USER: "keptn-bot <86361500+keptn-bot@users.noreply.github.com>"
jobs:
  createrelease:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0 # need to checkout "all commits" for certain features to work (e.g., get all changed files)
          submodules: 'true'

      - name: Verify version is semantic
        env:
          VERSION: ${{ github.event.inputs.versionName }}
        run: |
          SEMVER_REGEX="^(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)(\\-[0-9A-Za-z-]+(\\.[0-9A-Za-z-]+)*)?(\\+[0-9A-Za-z-]+(\\.[0-9A-Za-z-]+)*)?$"

          if [[ "$VERSION" =~ $SEMVER_REGEX ]]; then
            echo "Version $VERSION matches the semver scheme 'X.Y.Z(-PRERELEASE)(+BUILD)'"
          else
            echo "::error::Version $VERSION does not match the semver scheme 'X.Y.Z(-PRERELEASE)(+BUILD)'"
            exit 1
          fi

      - name: Export branch name
        id: export_branch_name
        run: |
          RELEASE_BRANCH_NAME=release-${{ github.event.inputs.versionName }}
          echo "##[set-output name=RELEASE_BRANCH_NAME;]$(echo ${RELEASE_BRANCH_NAME})"

      - name: Check if branch name already exists
        env:
          RELEASE_BRANCH_NAME: ${{ steps.export_branch_name.outputs.RELEASE_BRANCH_NAME }}
        run: |
          BRANCH_EXISTS_IN_REMOTE=$(git ls-remote --heads origin ${RELEASE_BRANCH_NAME})

          if [[ -z ${BRANCH_EXISTS_IN_REMOTE} ]]; then
            echo "Branch does not exist, continuing..."
          else
            echo "::error::Branch ${RELEASE_BRANCH_NAME} already exists, exiting..."
            exit 1
          fi

      - name: Create release branch
        env:
          RELEASE_BRANCH_NAME: ${{ steps.export_branch_name.outputs.RELEASE_BRANCH_NAME }}
          BASE_BRANCH: ${{ github.event.inputs.baseBranch }}
        run: |
          git checkout ${BASE_BRANCH}
          git pull
          git checkout -b ${RELEASE_BRANCH_NAME}

      - name: Copy release notes develop
        run: cp releasenotes/releasenotes_develop.md releasenotes/releasenotes_V${{ github.event.inputs.versionName }}.md

      - name: List changed files
        run: git status

      - name: Create PR into master
        uses: peter-evans/create-pull-request@v3
        env:
          VERSION: ${{ github.event.inputs.versionName }}
          RELEASE_BRANCH_NAME: ${{ steps.export_branch_name.outputs.RELEASE_BRANCH_NAME }}
        with:
          token: ${{ secrets.KEPTN_BOT_TOKEN }}
          commit-message: "Prepare release ${{ github.event.inputs.versionName }}"
          committer: ${{ secrets.KEPTN_BOT_USER }}
          author: ${{ secrets.KEPTN_BOT_USER }}
          signoff: true
          branch: ${{ env.RELEASE_BRANCH_NAME }}
          delete-branch: true
          draft: true
          base: master
          title: "Version ${{ env.VERSION }} into master"
          body: |
            :robot: **This is an automated PR!**

            This is an automatically created PR for version ${{ env.VERSION }} to merge changes from ${RELEASE_BRANCH_NAME} to ${TARGET_BRANCH}.\n
            Next steps for release process:\n
            - Run CI to build Container images and CLI and Helm Charts\n
            - Run Integration Tests to verify everything works and publish the release\n
