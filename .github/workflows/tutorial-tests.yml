name: "Tutorial Tests"
on:
#  schedule:
#    - cron: '0 4 * * 1'
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - 'master'
  workflow_dispatch:
defaults:
  run:
    shell: bash
env:
  GO_VERSION: 1.16
jobs:
  tutorial-tests:
    runs-on: ubuntu-20.04
    name: "Preparations"
    steps:
      - name: "Set up Go 1.x"
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: "Check out code"
        uses: actions/checkout@v2.3.4

      - name: "Check out tutorials"
        uses: actions/checkout@v2.3.4
        with:
          repository: "keptn/tutorials"
          ref: "feature/add-automation"
          path: "tutorials"

      - name: "Extract tutorial commands"
        env:
          CMD_FILE: "tutorial-cmds.sh"
        run: |
          go get github.com/keptn-sandbox/tutorial-testing-automation@prod-readiness
          tutorial-testing-automation -f tutorials/site/tutorials/keptn-quality-gates-prometheus-08.md -o "$CMD_FILE"

      - name: "Upload test script as artifact"
        uses: actions/upload-artifact@v2.2.4
        with:
          name: tutorial-cmds
          path: tutorial-cmds.sh

      - name: "Set up GCloud SDK"
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          version: 355.0.0
          project_id: ${{ secrets.GCLOUD_PROJECT_NAME }}
          service_account_key: ${{ secrets.GCLOUD_SERVICE_KEY }}

      - name: "Install and start GCP VM instance"
        env:
          GCLOUD_PROJECT_NAME: ${{ secrets.GCLOUD_PROJECT_NAME }}
          CLOUDSDK_COMPUTE_ZONE: "us-east1-b"
          CLOUDSDK_REGION: "us-east1"
          BRANCH: "master"
          VM_INSTANCE_NAME: "gh-nightly-tutorial-runner"
        run: |
          BRANCH_SLUG=$(echo $BRANCH | iconv -t ascii//TRANSLIT | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z)
          export VM_INSTANCE_NAME=${VM_INSTANCE_NAME}-${BRANCH_SLUG:0:15}
          echo "$VM_INSTANCE_NAME"
          gcloud --quiet components update
          ./test/utils/gcp-create-vm.sh

          echo "##[set-output name=CLUSTER_NAME_NIGHTLY;]$(echo ${CLUSTER_NAME_NIGHTLY})"

      - name: "Execute test script"
        run: |
          ./tutorial-cmds.sh
