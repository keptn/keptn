name: Build Docker Images
on:
  workflow_call:
    inputs:
      artifact:
        type: string
        required: true
      working-dir:
        type: string
        required: true
      tags:
        type: string
        required: true
      version:
        type: string
        required: true
      datetime:
        type: string
        required: false
        default: ''
      gitSha: 
        type: string
        required: true
        default: ''
      should-push-image:
        type: boolean
        required: false
        default: false
      should-run:
        type: boolean
        required: false
        default: false
      build-everything:
        type: boolean
        required: false
        default: false
defaults:
  run:
    shell: bash
jobs:
  build_and_push_image:
    name: Build and Push Docker images
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
      with:
          install: true

    - name: Set up Cosign
      uses: sigstore/cosign-installer@v2.5.1

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: "ghcr.io"
        username: "keptn-bot"
        password: ${{ secrets.KEPTN_BOT_TOKEN }}

    - name: Login to Quay.io
      uses: docker/login-action@v2
      with:
        registry: "quay.io"
        username: ${{ secrets.QUAY_USER }}
        password: ${{ secrets.QUAY_TOKEN }}
    
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        # Key is named differently to avoid collision
        key: ${{ runner.os }}-multi-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-multi-buildx

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      # only run docker login on pushes; also for PRs, but only if this is not a fork
      if: ( github.actor != 'renovate[bot]' && github.actor != 'dependabot[bot]' ) && (inputs.should-push-image == 'true' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event.pull_request.head.repo.full_name == github.repository))
      # note: GH does not allow to access secrets for PRs from a forked repositories due to security reasons
      # that's fine, but it means we can't push images to dockerhub
      with:
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: "Docker Build keptn/${{ inputs.artifact }}"
      id: docker_build_image
      if: inputs.should-push-image == 'true' && ( inputs.should-run == 'true' || inputs.build-everything == 'true' )
      uses: docker/build-push-action@v3
      with:
        context: ${{ inputs.working-dir }}
        tags: ${{ fromJson(inputs.tags) }}
        build-args: |
          version=${{ inputs.version }}
          buildTime=${{ inputs.datetime }}
          gitSha=${{ inputs.gitSha }}
        push: ${{ inputs.should-push-image == 'true' && (( github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository ) || ( github.event_name == 'push' )) && github.actor != 'renovate[bot]' && github.actor != 'dependabot[bot]' }}
        pull: true
        builder: ${{ steps.buildx.outputs.name }}
        cache-from: type=gha, scope=${{ github.workflow }}
        cache-to: type=gha, scope=${{ github.workflow }}