apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm-service.fullname" . }}
  labels: {{- include "keptn.common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/name: helm-service
spec:
  replicas: 1
  selector:
    matchLabels: {{- include "keptn.common.labels.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/name: helm-service
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels: {{- include "keptn.common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/name: helm-service
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "helm-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: helm-service
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if .Values.image }}
          image: {{ .Values.image }} # use image from .Values.image (e.g., when starting via skaffold)
          {{- else }}
          image: "{{ .Values.helmservice.image.repository }}:{{ .Values.helmservice.image.tag | default .Chart.AppVersion }}"
          {{ end }}
          imagePullPolicy: {{ .Values.helmservice.image.pullPolicy }}
          ports:
            - containerPort: 80
          env:
          - name: CONFIGURATION_SERVICE
            value: "http://localhost:8081/configuration-service"
          - name: SHIPYARD_CONTROLLER
            value: 'http://localhost:8081/controlPlane'
          - name: ENVIRONMENT
            value: 'production'
          - name: INGRESS_HOSTNAME_SUFFIX
            valueFrom:
              configMapKeyRef:
                name: ingress-config
                key: ingress_hostname_suffix
                optional: true
          - name: INGRESS_PROTOCOL
            valueFrom:
              configMapKeyRef:
                name: ingress-config
                key: ingress_protocol
                optional: true
          - name: INGRESS_PORT
            valueFrom:
              configMapKeyRef:
                name: ingress-config
                key: ingress_port
                optional: true
          - name: ISTIO_GATEWAY
            valueFrom:
              configMapKeyRef:
                name: ingress-config
                key: istio_gateway
                optional: true
          - name: HOSTNAME_TEMPLATE
            valueFrom:
              configMapKeyRef:
                name: ingress-config
                key: hostname_template
                optional: true
          - name: LOG_LEVEL
            value: {{ .Values.logLevel | default "info" }}
          - name: USE_COMMITID
            value: {{ .Values.useCommitID | default false | quote }}
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 0
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.helmservice.resources | nindent 12 }}
        - name: distributor
          image: "{{ .Values.distributor.image.repository }}:{{ .Values.distributor.image.tag | default .Chart.AppVersion }}"
          {{- include "helm-service.prestop" . | nindent 10 }}
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 0
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          resources:
            {{- toYaml .Values.distributor.resources | nindent 12 }}
          env:
            - name: PUBSUB_TOPIC
              value: 'sh.keptn.event.deployment.triggered,sh.keptn.event.rollback.triggered,sh.keptn.event.release.triggered,sh.keptn.event.action.triggered,sh.keptn.event.service.delete.finished'
            - name: PUBSUB_RECIPIENT
              value: '127.0.0.1'
            - name: STAGE_FILTER
              value: "{{ .Values.distributor.stageFilter }}"
            - name: PROJECT_FILTER
              value: "{{ .Values.distributor.projectFilter }}"
            - name: SERVICE_FILTER
              value: "{{ .Values.distributor.serviceFilter }}"
            - name: VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/version']
            - name: DISTRIBUTOR_VERSION
              value: {{ .Values.distributor.image.tag | default .Chart.AppVersion }}
            - name: LOCATION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/component']
            - name: K8S_DEPLOYMENT_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/name']
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            {{- if .Values.remoteControlPlane.enabled }}
            - name: KEPTN_API_ENDPOINT
              value: "{{ .Values.remoteControlPlane.api.protocol }}://{{ .Values.remoteControlPlane.api.hostname }}/api"
            {{- if not .Values.remoteControlPlane.api.tokenSecretName }}
            - name: KEPTN_API_TOKEN
              value: "{{ .Values.remoteControlPlane.api.token }}"
            {{- else }}
            - name: KEPTN_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.remoteControlPlane.api.tokenSecretName }}
                  key: keptn-api-token
            {{- end }}
            - name: HTTP_SSL_VERIFY
              {{- $apiValidateTls := .Values.remoteControlPlane.api.apiValidateTls | ternary "true" "false" }}
              value: "{{ $apiValidateTls }}"
            {{- end }}
            {{- if (((.Values.distributor).config).queueGroup).enabled | default true }}
            - name: PUBSUB_GROUP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/name']
            {{- end }}
            - name: OAUTH_CLIENT_ID
              value: "{{ (((.Values.distributor).config).oauth).clientID }}"
            - name: OAUTH_CLIENT_SECRET
              value: "{{ (((.Values.distributor).config).oauth).clientSecret }}"
            - name: OAUTH_DISCOVERY
              value: "{{ (((.Values.distributor).config).oauth).discovery }}"
            - name: OAUTH_TOKEN_URL
              value: "{{ (((.Values.distributor).config).oauth).tokenURL }}"
            - name: OAUTH_SCOPES
              value: "{{ (((.Values.distributor).config).oauth).scopes }}"

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.helmservice.gracePeriod | default 90 }}
