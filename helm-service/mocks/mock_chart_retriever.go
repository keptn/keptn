// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/keptn/keptn/helm-service/pkg/types (interfaces: IChartRetriever)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	"github.com/keptn/keptn/helm-service/pkg/common"
	chart "helm.sh/helm/v3/pkg/chart"
)

// MockIChartRetriever is a mock of IChartRetriever interface.
type MockIChartRetriever struct {
	ctrl     *gomock.Controller
	recorder *MockIChartRetrieverMockRecorder
}

// MockIChartRetrieverMockRecorder is the mock recorder for MockIChartRetriever.
type MockIChartRetrieverMockRecorder struct {
	mock *MockIChartRetriever
}

// NewMockIChartRetriever creates a new mock instance.
func NewMockIChartRetriever(ctrl *gomock.Controller) *MockIChartRetriever {
	mock := &MockIChartRetriever{ctrl: ctrl}
	mock.recorder = &MockIChartRetrieverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIChartRetriever) EXPECT() *MockIChartRetrieverMockRecorder {
	return m.recorder
}

// Retrieve mocks base method.
func (m *MockIChartRetriever) Retrieve(arg0 common.RetrieveChartOptions) (*chart.Chart, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Retrieve", arg0)
	ret0, _ := ret[0].(*chart.Chart)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Retrieve indicates an expected call of Retrieve.
func (mr *MockIChartRetrieverMockRecorder) Retrieve(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Retrieve", reflect.TypeOf((*MockIChartRetriever)(nil).Retrieve), arg0)
}
