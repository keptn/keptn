// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/keptn/keptn/api/models"
)

// ProjectCreatedCode is the HTTP code returned for type ProjectCreated
const ProjectCreatedCode int = 201

/*ProjectCreated Project created

swagger:response projectCreated
*/
type ProjectCreated struct {

	/*
	  In: Body
	*/
	Payload *models.ChannelInfo `json:"body,omitempty"`
}

// NewProjectCreated creates ProjectCreated with default headers values
func NewProjectCreated() *ProjectCreated {

	return &ProjectCreated{}
}

// WithPayload adds the payload to the project created response
func (o *ProjectCreated) WithPayload(payload *models.ChannelInfo) *ProjectCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the project created response
func (o *ProjectCreated) SetPayload(payload *models.ChannelInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProjectCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProjectNoContentCode is the HTTP code returned for type ProjectNoContent
const ProjectNoContentCode int = 204

/*ProjectNoContent Project deleted

swagger:response projectNoContent
*/
type ProjectNoContent struct {

	/*
	  In: Body
	*/
	Payload *models.ChannelInfo `json:"body,omitempty"`
}

// NewProjectNoContent creates ProjectNoContent with default headers values
func NewProjectNoContent() *ProjectNoContent {

	return &ProjectNoContent{}
}

// WithPayload adds the payload to the project no content response
func (o *ProjectNoContent) WithPayload(payload *models.ChannelInfo) *ProjectNoContent {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the project no content response
func (o *ProjectNoContent) SetPayload(payload *models.ChannelInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProjectNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(204)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ProjectDefault error

swagger:response projectDefault
*/
type ProjectDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewProjectDefault creates ProjectDefault with default headers values
func NewProjectDefault(code int) *ProjectDefault {
	if code <= 0 {
		code = 500
	}

	return &ProjectDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the project default response
func (o *ProjectDefault) WithStatusCode(code int) *ProjectDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the project default response
func (o *ProjectDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the project default response
func (o *ProjectDefault) WithPayload(payload *models.Error) *ProjectDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the project default response
func (o *ProjectDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProjectDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
