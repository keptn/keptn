// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/keptn/keptn/api/models"
)

// DeleteProjectProjectNameServiceServiceNameOKCode is the HTTP code returned for type DeleteProjectProjectNameServiceServiceNameOK
const DeleteProjectProjectNameServiceServiceNameOKCode int = 200

/*DeleteProjectProjectNameServiceServiceNameOK Deletion of service triggered

swagger:response deleteProjectProjectNameServiceServiceNameOK
*/
type DeleteProjectProjectNameServiceServiceNameOK struct {

	/*
	  In: Body
	*/
	Payload *models.EventContext `json:"body,omitempty"`
}

// NewDeleteProjectProjectNameServiceServiceNameOK creates DeleteProjectProjectNameServiceServiceNameOK with default headers values
func NewDeleteProjectProjectNameServiceServiceNameOK() *DeleteProjectProjectNameServiceServiceNameOK {

	return &DeleteProjectProjectNameServiceServiceNameOK{}
}

// WithPayload adds the payload to the delete project project name service service name o k response
func (o *DeleteProjectProjectNameServiceServiceNameOK) WithPayload(payload *models.EventContext) *DeleteProjectProjectNameServiceServiceNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete project project name service service name o k response
func (o *DeleteProjectProjectNameServiceServiceNameOK) SetPayload(payload *models.EventContext) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteProjectProjectNameServiceServiceNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteProjectProjectNameServiceServiceNameBadRequestCode is the HTTP code returned for type DeleteProjectProjectNameServiceServiceNameBadRequest
const DeleteProjectProjectNameServiceServiceNameBadRequestCode int = 400

/*DeleteProjectProjectNameServiceServiceNameBadRequest Failed. Service could not be deleted

swagger:response deleteProjectProjectNameServiceServiceNameBadRequest
*/
type DeleteProjectProjectNameServiceServiceNameBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteProjectProjectNameServiceServiceNameBadRequest creates DeleteProjectProjectNameServiceServiceNameBadRequest with default headers values
func NewDeleteProjectProjectNameServiceServiceNameBadRequest() *DeleteProjectProjectNameServiceServiceNameBadRequest {

	return &DeleteProjectProjectNameServiceServiceNameBadRequest{}
}

// WithPayload adds the payload to the delete project project name service service name bad request response
func (o *DeleteProjectProjectNameServiceServiceNameBadRequest) WithPayload(payload *models.Error) *DeleteProjectProjectNameServiceServiceNameBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete project project name service service name bad request response
func (o *DeleteProjectProjectNameServiceServiceNameBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteProjectProjectNameServiceServiceNameBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DeleteProjectProjectNameServiceServiceNameDefault Error

swagger:response deleteProjectProjectNameServiceServiceNameDefault
*/
type DeleteProjectProjectNameServiceServiceNameDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteProjectProjectNameServiceServiceNameDefault creates DeleteProjectProjectNameServiceServiceNameDefault with default headers values
func NewDeleteProjectProjectNameServiceServiceNameDefault(code int) *DeleteProjectProjectNameServiceServiceNameDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteProjectProjectNameServiceServiceNameDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete project project name service service name default response
func (o *DeleteProjectProjectNameServiceServiceNameDefault) WithStatusCode(code int) *DeleteProjectProjectNameServiceServiceNameDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete project project name service service name default response
func (o *DeleteProjectProjectNameServiceServiceNameDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete project project name service service name default response
func (o *DeleteProjectProjectNameServiceServiceNameDefault) WithPayload(payload *models.Error) *DeleteProjectProjectNameServiceServiceNameDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete project project name service service name default response
func (o *DeleteProjectProjectNameServiceServiceNameDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteProjectProjectNameServiceServiceNameDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
