// Code generated by go-swagger; DO NOT EDIT.

package configure

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// ConfigureCreatedCode is the HTTP code returned for type ConfigureCreated
const ConfigureCreatedCode int = 201

/*ConfigureCreated configured

swagger:response configureCreated
*/
type ConfigureCreated struct {

	/*
	  In: Body
	*/
	Payload *ConfigureCreatedBody `json:"body,omitempty"`
}

// NewConfigureCreated creates ConfigureCreated with default headers values
func NewConfigureCreated() *ConfigureCreated {

	return &ConfigureCreated{}
}

// WithPayload adds the payload to the configure created response
func (o *ConfigureCreated) WithPayload(payload *ConfigureCreatedBody) *ConfigureCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the configure created response
func (o *ConfigureCreated) SetPayload(payload *ConfigureCreatedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConfigureCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ConfigureDefault error

swagger:response configureDefault
*/
type ConfigureDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *ConfigureDefaultBody `json:"body,omitempty"`
}

// NewConfigureDefault creates ConfigureDefault with default headers values
func NewConfigureDefault(code int) *ConfigureDefault {
	if code <= 0 {
		code = 500
	}

	return &ConfigureDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the configure default response
func (o *ConfigureDefault) WithStatusCode(code int) *ConfigureDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the configure default response
func (o *ConfigureDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the configure default response
func (o *ConfigureDefault) WithPayload(payload *ConfigureDefaultBody) *ConfigureDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the configure default response
func (o *ConfigureDefault) SetPayload(payload *ConfigureDefaultBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConfigureDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
