// Code generated by go-swagger; DO NOT EDIT.

package evaluation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/keptn/keptn/api/models"
)

// PostProjectProjectNameStageStageNameServiceServiceNameEvaluationOKCode is the HTTP code returned for type PostProjectProjectNameStageStageNameServiceServiceNameEvaluationOK
const PostProjectProjectNameStageStageNameServiceServiceNameEvaluationOKCode int = 200

/*PostProjectProjectNameStageStageNameServiceServiceNameEvaluationOK Evaluation has been triggered

swagger:response postProjectProjectNameStageStageNameServiceServiceNameEvaluationOK
*/
type PostProjectProjectNameStageStageNameServiceServiceNameEvaluationOK struct {

	/*
	  In: Body
	*/
	Payload *models.EventContext `json:"body,omitempty"`
}

// NewPostProjectProjectNameStageStageNameServiceServiceNameEvaluationOK creates PostProjectProjectNameStageStageNameServiceServiceNameEvaluationOK with default headers values
func NewPostProjectProjectNameStageStageNameServiceServiceNameEvaluationOK() *PostProjectProjectNameStageStageNameServiceServiceNameEvaluationOK {

	return &PostProjectProjectNameStageStageNameServiceServiceNameEvaluationOK{}
}

// WithPayload adds the payload to the post project project name stage stage name service service name evaluation o k response
func (o *PostProjectProjectNameStageStageNameServiceServiceNameEvaluationOK) WithPayload(payload *models.EventContext) *PostProjectProjectNameStageStageNameServiceServiceNameEvaluationOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post project project name stage stage name service service name evaluation o k response
func (o *PostProjectProjectNameStageStageNameServiceServiceNameEvaluationOK) SetPayload(payload *models.EventContext) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostProjectProjectNameStageStageNameServiceServiceNameEvaluationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostProjectProjectNameStageStageNameServiceServiceNameEvaluationBadRequestCode is the HTTP code returned for type PostProjectProjectNameStageStageNameServiceServiceNameEvaluationBadRequest
const PostProjectProjectNameStageStageNameServiceServiceNameEvaluationBadRequestCode int = 400

/*PostProjectProjectNameStageStageNameServiceServiceNameEvaluationBadRequest Evaluation could not be triggered

swagger:response postProjectProjectNameStageStageNameServiceServiceNameEvaluationBadRequest
*/
type PostProjectProjectNameStageStageNameServiceServiceNameEvaluationBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostProjectProjectNameStageStageNameServiceServiceNameEvaluationBadRequest creates PostProjectProjectNameStageStageNameServiceServiceNameEvaluationBadRequest with default headers values
func NewPostProjectProjectNameStageStageNameServiceServiceNameEvaluationBadRequest() *PostProjectProjectNameStageStageNameServiceServiceNameEvaluationBadRequest {

	return &PostProjectProjectNameStageStageNameServiceServiceNameEvaluationBadRequest{}
}

// WithPayload adds the payload to the post project project name stage stage name service service name evaluation bad request response
func (o *PostProjectProjectNameStageStageNameServiceServiceNameEvaluationBadRequest) WithPayload(payload *models.Error) *PostProjectProjectNameStageStageNameServiceServiceNameEvaluationBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post project project name stage stage name service service name evaluation bad request response
func (o *PostProjectProjectNameStageStageNameServiceServiceNameEvaluationBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostProjectProjectNameStageStageNameServiceServiceNameEvaluationBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostProjectProjectNameStageStageNameServiceServiceNameEvaluationDefault Error

swagger:response postProjectProjectNameStageStageNameServiceServiceNameEvaluationDefault
*/
type PostProjectProjectNameStageStageNameServiceServiceNameEvaluationDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostProjectProjectNameStageStageNameServiceServiceNameEvaluationDefault creates PostProjectProjectNameStageStageNameServiceServiceNameEvaluationDefault with default headers values
func NewPostProjectProjectNameStageStageNameServiceServiceNameEvaluationDefault(code int) *PostProjectProjectNameStageStageNameServiceServiceNameEvaluationDefault {
	if code <= 0 {
		code = 500
	}

	return &PostProjectProjectNameStageStageNameServiceServiceNameEvaluationDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post project project name stage stage name service service name evaluation default response
func (o *PostProjectProjectNameStageStageNameServiceServiceNameEvaluationDefault) WithStatusCode(code int) *PostProjectProjectNameStageStageNameServiceServiceNameEvaluationDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post project project name stage stage name service service name evaluation default response
func (o *PostProjectProjectNameStageStageNameServiceServiceNameEvaluationDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post project project name stage stage name service service name evaluation default response
func (o *PostProjectProjectNameStageStageNameServiceServiceNameEvaluationDefault) WithPayload(payload *models.Error) *PostProjectProjectNameStageStageNameServiceServiceNameEvaluationDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post project project name stage stage name service service name evaluation default response
func (o *PostProjectProjectNameStageStageNameServiceServiceNameEvaluationDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostProjectProjectNameStageStageNameServiceServiceNameEvaluationDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
