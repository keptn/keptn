// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package fake

import (
	"sync"
)

// MockStageRetriever is a mock implementation of importer.ProjectStageRetriever.
//
// 	func TestSomethingThatUsesProjectStageRetriever(t *testing.T) {
//
// 		// make and configure a mocked importer.ProjectStageRetriever
// 		mockedProjectStageRetriever := &MockStageRetriever{
// 			GetStagesFunc: func(project string) ([]string, error) {
// 				panic("mock out the GetStages method")
// 			},
// 		}
//
// 		// use mockedProjectStageRetriever in code that requires importer.ProjectStageRetriever
// 		// and then make assertions.
//
// 	}
type MockStageRetriever struct {
	// GetStagesFunc mocks the GetStages method.
	GetStagesFunc func(project string) ([]string, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetStages holds details about calls to the GetStages method.
		GetStages []struct {
			// Project is the project argument value.
			Project string
		}
	}
	lockGetStages sync.RWMutex
}

// GetStages calls GetStagesFunc.
func (mock *MockStageRetriever) GetStages(project string) ([]string, error) {
	if mock.GetStagesFunc == nil {
		panic("MockStageRetriever.GetStagesFunc: method is nil but ProjectStageRetriever.GetStages was just called")
	}
	callInfo := struct {
		Project string
	}{
		Project: project,
	}
	mock.lockGetStages.Lock()
	mock.calls.GetStages = append(mock.calls.GetStages, callInfo)
	mock.lockGetStages.Unlock()
	return mock.GetStagesFunc(project)
}

// GetStagesCalls gets all the calls that were made to GetStages.
// Check the length with:
//     len(mockedProjectStageRetriever.GetStagesCalls())
func (mock *MockStageRetriever) GetStagesCalls() []struct {
	Project string
} {
	var calls []struct {
		Project string
	}
	mock.lockGetStages.RLock()
	calls = mock.calls.GetStages
	mock.lockGetStages.RUnlock()
	return calls
}
