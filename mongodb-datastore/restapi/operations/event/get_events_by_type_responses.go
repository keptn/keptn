// Code generated by go-swagger; DO NOT EDIT.

package event

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/keptn/keptn/mongodb-datastore/models"
)

// GetEventsByTypeOKCode is the HTTP code returned for type GetEventsByTypeOK
const GetEventsByTypeOKCode int = 200

/*GetEventsByTypeOK ok

swagger:response getEventsByTypeOK
*/
type GetEventsByTypeOK struct {

	/*
	  In: Body
	*/
	Payload *GetEventsByTypeOKBody `json:"body,omitempty"`
}

// NewGetEventsByTypeOK creates GetEventsByTypeOK with default headers values
func NewGetEventsByTypeOK() *GetEventsByTypeOK {

	return &GetEventsByTypeOK{}
}

// WithPayload adds the payload to the get events by type o k response
func (o *GetEventsByTypeOK) WithPayload(payload *GetEventsByTypeOKBody) *GetEventsByTypeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get events by type o k response
func (o *GetEventsByTypeOK) SetPayload(payload *GetEventsByTypeOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEventsByTypeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetEventsByTypeDefault error

swagger:response getEventsByTypeDefault
*/
type GetEventsByTypeDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetEventsByTypeDefault creates GetEventsByTypeDefault with default headers values
func NewGetEventsByTypeDefault(code int) *GetEventsByTypeDefault {
	if code <= 0 {
		code = 500
	}

	return &GetEventsByTypeDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get events by type default response
func (o *GetEventsByTypeDefault) WithStatusCode(code int) *GetEventsByTypeDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get events by type default response
func (o *GetEventsByTypeDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get events by type default response
func (o *GetEventsByTypeDefault) WithPayload(payload *models.Error) *GetEventsByTypeDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get events by type default response
func (o *GetEventsByTypeDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEventsByTypeDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
