basePath: /v1
definitions:
  model.Data:
    additionalProperties:
      type: string
    type: object
  model.Error:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  model.GetSecretsResponse:
    properties:
      secrets:
        items:
          $ref: '#/definitions/model.SecretMetadata'
        type: array
    type: object
  model.Secret:
    properties:
      data:
        $ref: '#/definitions/model.Data'
      name:
        type: string
      scope:
        type: string
    required:
    - name
    - scope
    type: object
  model.SecretMetadata:
    properties:
      name:
        type: string
      scope:
        type: string
    required:
    - name
    - scope
    type: object
info:
  contact:
    name: Keptn Team
    url: http://www.keptn.sh
  description: This is the API documentation of the Secret Service.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Secret Service API
  version: "1.0"
paths:
  /secret:
    delete:
      description: Delete an existing Secret
      parameters:
      - description: The name of the secret
        in: query
        name: name
        required: true
        type: string
      - description: The scope of the secret
        in: query
        name: scope
        required: true
        type: string
      responses:
        "200":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete a Secret
      tags:
      - Secrets
    get:
      description: Get secrets
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GetSecretsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - ApiKeyAuth: []
      summary: Get secrets
      tags:
      - Secrets
    post:
      consumes:
      - application/json
      description: Create a new Secret
      parameters:
      - description: The new secret to be created
        in: body
        name: secret
        required: true
        schema:
          $ref: '#/definitions/model.Secret'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Secret'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - ApiKeyAuth: []
      summary: Create a Secret
      tags:
      - Secrets
    put:
      consumes:
      - application/json
      description: Update an existing Secret
      parameters:
      - description: The updated Secret
        in: body
        name: secret
        required: true
        schema:
          $ref: '#/definitions/model.Secret'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Secret'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - ApiKeyAuth: []
      summary: Update a Secret
      tags:
      - Secrets
securityDefinitions:
  key:
    in: header
    name: x-token
    type: apiKey
swagger: "2.0"
