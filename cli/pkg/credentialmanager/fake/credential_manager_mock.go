// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package credentialmanager_mock

import (
	"net/url"
	"sync"
)

// CredentialManagerInterfaceMock is a mock implementation of credentialmanager.CredentialManagerInterface.
//
// 	func TestSomethingThatUsesCredentialManagerInterface(t *testing.T) {
//
// 		// make and configure a mocked credentialmanager.CredentialManagerInterface
// 		mockedCredentialManagerInterface := &CredentialManagerInterfaceMock{
// 			GetCredsFunc: func(namespace string) (url.URL, string, error) {
// 				panic("mock out the GetCreds method")
// 			},
// 			GetInstallCredsFunc: func() (string, error) {
// 				panic("mock out the GetInstallCreds method")
// 			},
// 			SetCredsFunc: func(endPoint url.URL, apiToken string, namespace string) error {
// 				panic("mock out the SetCreds method")
// 			},
// 			SetInstallCredsFunc: func(creds string) error {
// 				panic("mock out the SetInstallCreds method")
// 			},
// 		}
//
// 		// use mockedCredentialManagerInterface in code that requires credentialmanager.CredentialManagerInterface
// 		// and then make assertions.
//
// 	}
type CredentialManagerInterfaceMock struct {
	// GetCredsFunc mocks the GetCreds method.
	GetCredsFunc func(namespace string) (url.URL, string, error)

	// GetInstallCredsFunc mocks the GetInstallCreds method.
	GetInstallCredsFunc func() (string, error)

	// SetCredsFunc mocks the SetCreds method.
	SetCredsFunc func(endPoint url.URL, apiToken string, namespace string) error

	// SetInstallCredsFunc mocks the SetInstallCreds method.
	SetInstallCredsFunc func(creds string) error

	// calls tracks calls to the methods.
	calls struct {
		// GetCreds holds details about calls to the GetCreds method.
		GetCreds []struct {
			// Namespace is the namespace argument value.
			Namespace string
		}
		// GetInstallCreds holds details about calls to the GetInstallCreds method.
		GetInstallCreds []struct {
		}
		// SetCreds holds details about calls to the SetCreds method.
		SetCreds []struct {
			// EndPoint is the endPoint argument value.
			EndPoint url.URL
			// ApiToken is the apiToken argument value.
			ApiToken string
			// Namespace is the namespace argument value.
			Namespace string
		}
		// SetInstallCreds holds details about calls to the SetInstallCreds method.
		SetInstallCreds []struct {
			// Creds is the creds argument value.
			Creds string
		}
	}
	lockGetCreds        sync.RWMutex
	lockGetInstallCreds sync.RWMutex
	lockSetCreds        sync.RWMutex
	lockSetInstallCreds sync.RWMutex
}

// GetCreds calls GetCredsFunc.
func (mock *CredentialManagerInterfaceMock) GetCreds(namespace string) (url.URL, string, error) {
	if mock.GetCredsFunc == nil {
		panic("CredentialManagerInterfaceMock.GetCredsFunc: method is nil but CredentialManagerInterface.GetCreds was just called")
	}
	callInfo := struct {
		Namespace string
	}{
		Namespace: namespace,
	}
	mock.lockGetCreds.Lock()
	mock.calls.GetCreds = append(mock.calls.GetCreds, callInfo)
	mock.lockGetCreds.Unlock()
	return mock.GetCredsFunc(namespace)
}

// GetCredsCalls gets all the calls that were made to GetCreds.
// Check the length with:
//     len(mockedCredentialManagerInterface.GetCredsCalls())
func (mock *CredentialManagerInterfaceMock) GetCredsCalls() []struct {
	Namespace string
} {
	var calls []struct {
		Namespace string
	}
	mock.lockGetCreds.RLock()
	calls = mock.calls.GetCreds
	mock.lockGetCreds.RUnlock()
	return calls
}

// GetInstallCreds calls GetInstallCredsFunc.
func (mock *CredentialManagerInterfaceMock) GetInstallCreds() (string, error) {
	if mock.GetInstallCredsFunc == nil {
		panic("CredentialManagerInterfaceMock.GetInstallCredsFunc: method is nil but CredentialManagerInterface.GetInstallCreds was just called")
	}
	callInfo := struct {
	}{}
	mock.lockGetInstallCreds.Lock()
	mock.calls.GetInstallCreds = append(mock.calls.GetInstallCreds, callInfo)
	mock.lockGetInstallCreds.Unlock()
	return mock.GetInstallCredsFunc()
}

// GetInstallCredsCalls gets all the calls that were made to GetInstallCreds.
// Check the length with:
//     len(mockedCredentialManagerInterface.GetInstallCredsCalls())
func (mock *CredentialManagerInterfaceMock) GetInstallCredsCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockGetInstallCreds.RLock()
	calls = mock.calls.GetInstallCreds
	mock.lockGetInstallCreds.RUnlock()
	return calls
}

// SetCreds calls SetCredsFunc.
func (mock *CredentialManagerInterfaceMock) SetCreds(endPoint url.URL, apiToken string, namespace string) error {
	if mock.SetCredsFunc == nil {
		panic("CredentialManagerInterfaceMock.SetCredsFunc: method is nil but CredentialManagerInterface.SetCreds was just called")
	}
	callInfo := struct {
		EndPoint  url.URL
		ApiToken  string
		Namespace string
	}{
		EndPoint:  endPoint,
		ApiToken:  apiToken,
		Namespace: namespace,
	}
	mock.lockSetCreds.Lock()
	mock.calls.SetCreds = append(mock.calls.SetCreds, callInfo)
	mock.lockSetCreds.Unlock()
	return mock.SetCredsFunc(endPoint, apiToken, namespace)
}

// SetCredsCalls gets all the calls that were made to SetCreds.
// Check the length with:
//     len(mockedCredentialManagerInterface.SetCredsCalls())
func (mock *CredentialManagerInterfaceMock) SetCredsCalls() []struct {
	EndPoint  url.URL
	ApiToken  string
	Namespace string
} {
	var calls []struct {
		EndPoint  url.URL
		ApiToken  string
		Namespace string
	}
	mock.lockSetCreds.RLock()
	calls = mock.calls.SetCreds
	mock.lockSetCreds.RUnlock()
	return calls
}

// SetInstallCreds calls SetInstallCredsFunc.
func (mock *CredentialManagerInterfaceMock) SetInstallCreds(creds string) error {
	if mock.SetInstallCredsFunc == nil {
		panic("CredentialManagerInterfaceMock.SetInstallCredsFunc: method is nil but CredentialManagerInterface.SetInstallCreds was just called")
	}
	callInfo := struct {
		Creds string
	}{
		Creds: creds,
	}
	mock.lockSetInstallCreds.Lock()
	mock.calls.SetInstallCreds = append(mock.calls.SetInstallCreds, callInfo)
	mock.lockSetInstallCreds.Unlock()
	return mock.SetInstallCredsFunc(creds)
}

// SetInstallCredsCalls gets all the calls that were made to SetInstallCreds.
// Check the length with:
//     len(mockedCredentialManagerInterface.SetInstallCredsCalls())
func (mock *CredentialManagerInterfaceMock) SetInstallCredsCalls() []struct {
	Creds string
} {
	var calls []struct {
		Creds string
	}
	mock.lockSetInstallCreds.RLock()
	calls = mock.calls.SetInstallCreds
	mock.lockSetInstallCreds.RUnlock()
	return calls
}
