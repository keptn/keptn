// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package fake

import (
	"github.com/keptn/go-utils/pkg/api/models"
	api "github.com/keptn/go-utils/pkg/api/utils"
	"sync"
)

// ShipyardEventAPIMock is a mock implementation of httpeventsource.shipyardEventAPI.
//
// 	func TestSomethingThatUsesshipyardEventAPI(t *testing.T) {
//
// 		// make and configure a mocked httpeventsource.shipyardEventAPI
// 		mockedshipyardEventAPI := &ShipyardEventAPIMock{
// 			GetOpenTriggeredEventsFunc: func(filter api.EventFilter) ([]*models.KeptnContextExtendedCE, error) {
// 				panic("mock out the GetOpenTriggeredEvents method")
// 			},
// 		}
//
// 		// use mockedshipyardEventAPI in code that requires httpeventsource.shipyardEventAPI
// 		// and then make assertions.
//
// 	}
type ShipyardEventAPIMock struct {
	// GetOpenTriggeredEventsFunc mocks the GetOpenTriggeredEvents method.
	GetOpenTriggeredEventsFunc func(filter api.EventFilter) ([]*models.KeptnContextExtendedCE, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetOpenTriggeredEvents holds details about calls to the GetOpenTriggeredEvents method.
		GetOpenTriggeredEvents []struct {
			// Filter is the filter argument value.
			Filter api.EventFilter
		}
	}
	lockGetOpenTriggeredEvents sync.RWMutex
}

// GetOpenTriggeredEvents calls GetOpenTriggeredEventsFunc.
func (mock *ShipyardEventAPIMock) GetOpenTriggeredEvents(filter api.EventFilter) ([]*models.KeptnContextExtendedCE, error) {
	if mock.GetOpenTriggeredEventsFunc == nil {
		panic("ShipyardEventAPIMock.GetOpenTriggeredEventsFunc: method is nil but shipyardEventAPI.GetOpenTriggeredEvents was just called")
	}
	callInfo := struct {
		Filter api.EventFilter
	}{
		Filter: filter,
	}
	mock.lockGetOpenTriggeredEvents.Lock()
	mock.calls.GetOpenTriggeredEvents = append(mock.calls.GetOpenTriggeredEvents, callInfo)
	mock.lockGetOpenTriggeredEvents.Unlock()
	return mock.GetOpenTriggeredEventsFunc(filter)
}

// GetOpenTriggeredEventsCalls gets all the calls that were made to GetOpenTriggeredEvents.
// Check the length with:
//     len(mockedshipyardEventAPI.GetOpenTriggeredEventsCalls())
func (mock *ShipyardEventAPIMock) GetOpenTriggeredEventsCalls() []struct {
	Filter api.EventFilter
} {
	var calls []struct {
		Filter api.EventFilter
	}
	mock.lockGetOpenTriggeredEvents.RLock()
	calls = mock.calls.GetOpenTriggeredEvents
	mock.lockGetOpenTriggeredEvents.RUnlock()
	return calls
}
