// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package fake

import (
	keptnmodels "github.com/keptn/go-utils/pkg/api/models"
	"sync"
)

// ISequenceTriggeredHookMock is a mock implementation of sequencehooks.ISequenceTriggeredHook.
//
// 	func TestSomethingThatUsesISequenceTriggeredHook(t *testing.T) {
//
// 		// make and configure a mocked sequencehooks.ISequenceTriggeredHook
// 		mockedISequenceTriggeredHook := &ISequenceTriggeredHookMock{
// 			OnSequenceTriggeredFunc: func(event keptnmodels.KeptnContextExtendedCE)  {
// 				panic("mock out the OnSequenceTriggered method")
// 			},
// 		}
//
// 		// use mockedISequenceTriggeredHook in code that requires sequencehooks.ISequenceTriggeredHook
// 		// and then make assertions.
//
// 	}
type ISequenceTriggeredHookMock struct {
	// OnSequenceTriggeredFunc mocks the OnSequenceTriggered method.
	OnSequenceTriggeredFunc func(event keptnmodels.KeptnContextExtendedCE)

	// calls tracks calls to the methods.
	calls struct {
		// OnSequenceTriggered holds details about calls to the OnSequenceTriggered method.
		OnSequenceTriggered []struct {
			//models.KeptnContextExtendedCEis the event argument value.
			Event keptnmodels.KeptnContextExtendedCE
		}
	}
	lockOnSequenceTriggered sync.RWMutex
}

// OnSequenceTriggered calls OnSequenceTriggeredFunc.
func (mock *ISequenceTriggeredHookMock) OnSequenceTriggered(event keptnmodels.KeptnContextExtendedCE) {
	if mock.OnSequenceTriggeredFunc == nil {
		panic("ISequenceTriggeredHookMock.OnSequenceTriggeredFunc: method is nil but ISequenceTriggeredHook.OnSequenceTriggered was just called")
	}
	callInfo := struct {
		Event keptnmodels.KeptnContextExtendedCE
	}{
		Event: event,
	}
	mock.lockOnSequenceTriggered.Lock()
	mock.calls.OnSequenceTriggered = append(mock.calls.OnSequenceTriggered, callInfo)
	mock.lockOnSequenceTriggered.Unlock()
	mock.OnSequenceTriggeredFunc(event)
}

// OnSequenceTriggeredCalls gets all the calls that were made to OnSequenceTriggered.
// Check the length with:
//     len(mockedISequenceTriggeredHook.OnSequenceTriggeredCalls())
func (mock *ISequenceTriggeredHookMock) OnSequenceTriggeredCalls() []struct {
	Event keptnmodels.KeptnContextExtendedCE
} {
	var calls []struct {
		Event keptnmodels.KeptnContextExtendedCE
	}
	mock.lockOnSequenceTriggered.RLock()
	calls = mock.calls.OnSequenceTriggered
	mock.lockOnSequenceTriggered.RUnlock()
	return calls
}
