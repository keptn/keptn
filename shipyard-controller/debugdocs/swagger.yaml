basePath: /
definitions:
  api.GetSequenceExecutionResponse:
    properties:
      nextPageKey:
        description: NextPageKey is the offset to the next page
        type: integer
      pageSize:
        description: PageSize is the actual size of returned page
        type: integer
      sequenceExecutions:
        description: SequenceExecutions array containing the result
        items:
          $ref: '#/definitions/models.SequenceExecution'
        type: array
      totalCount:
        description: Total number of matching entries
        type: integer
    type: object
  models.Error:
    properties:
      code:
        description: Error code
        type: integer
      message:
        description: |-
          Error message
          Required: true
        type: string
    type: object
  models.EventScope:
    properties:
      eventType:
        type: string
      gitcommitid:
        type: string
      keptnContext:
        type: string
      labels:
        additionalProperties:
          type: string
        type: object
      message:
        type: string
      project:
        type: string
      result:
        type: string
      service:
        type: string
      stage:
        type: string
      status:
        type: string
      triggeredId:
        type: string
    type: object
  models.KeptnContextExtendedCE:
    properties:
      contenttype:
        description: contenttype
        type: string
      data:
        description: |-
          data
          Required: true
      extensions:
        description: extensions
      gitcommitid:
        description: gitcommitid
        type: string
      id:
        description: id
        type: string
      shkeptncontext:
        description: shkeptncontext
        type: string
      shkeptnspecversion:
        description: shkeptnspecversion
        type: string
      source:
        description: |-
          source
          Required: true
        type: string
      specversion:
        description: specversion
        type: string
      time:
        description: |-
          time
          Format: date-time
        type: string
      triggeredid:
        description: triggeredid
        type: string
      type:
        description: |-
          type
          Required: true
        type: string
    type: object
  models.SequenceExecution:
    properties:
      _id:
        type: string
      inputProperties:
        additionalProperties: true
        description: InputProperties contains properties of the event which triggered
          the task sequence
        type: object
      schemaVersion:
        description: SchemaVersion indicates the scheme that is used for the internal
          representation of the sequence execution
        type: string
      scope:
        $ref: '#/definitions/models.EventScope'
      sequence:
        $ref: '#/definitions/v0_2_0.Sequence'
        description: Sequence contains the complete sequence definition
      status:
        $ref: '#/definitions/models.SequenceExecutionStatus'
      triggeredAt:
        type: string
    type: object
  models.SequenceExecutionStatus:
    properties:
      currentTask:
        $ref: '#/definitions/models.TaskExecutionState'
        description: CurrentTask represents the state of the currently active task
      previousTasks:
        description: PreviousTasks contains the results of all completed tasks of
          the sequence
        items:
          $ref: '#/definitions/models.TaskExecutionResult'
        type: array
      state:
        description: triggered, waiting, suspended (approval in progress), paused,
          finished, cancelled, timedOut
        type: string
      stateBeforePause:
        description: 'StateBeforePause is needed to keep track of the state before
          a sequence has been paused. Example: when a sequence has been paused while
          being queued, and then resumed, it should not be set to started immediately,
          but to the state it had before'
        type: string
    type: object
  models.SequenceState:
    properties:
      name:
        type: string
      problemTitle:
        type: string
      project:
        type: string
      service:
        type: string
      shkeptncontext:
        type: string
      stages:
        items:
          $ref: '#/definitions/models.SequenceStateStage'
        type: array
      state:
        type: string
      time:
        type: string
    type: object
  models.SequenceStateEvaluation:
    properties:
      result:
        type: string
      score:
        type: number
    type: object
  models.SequenceStateEvent:
    properties:
      id:
        type: string
      time:
        type: string
      type:
        type: string
    type: object
  models.SequenceStateStage:
    properties:
      image:
        type: string
      latestEvaluation:
        $ref: '#/definitions/models.SequenceStateEvaluation'
      latestEvent:
        $ref: '#/definitions/models.SequenceStateEvent'
      latestFailedEvent:
        $ref: '#/definitions/models.SequenceStateEvent'
      name:
        type: string
      state:
        type: string
    type: object
  models.TaskEvent:
    properties:
      eventType:
        type: string
      properties:
        additionalProperties: true
        type: object
      result:
        type: string
      source:
        type: string
      status:
        type: string
      time:
        type: string
    type: object
  models.TaskExecutionResult:
    properties:
      name:
        type: string
      properties:
        additionalProperties: true
        description: Properties contains the aggregated results of the task's executors
        type: object
      result:
        type: string
      status:
        type: string
      triggeredID:
        type: string
    type: object
  models.TaskExecutionState:
    properties:
      events:
        items:
          $ref: '#/definitions/models.TaskEvent'
        type: array
      name:
        type: string
      triggeredID:
        type: string
    type: object
  v0_2_0.Selector:
    properties:
      match:
        additionalProperties:
          type: string
        type: object
    type: object
  v0_2_0.Sequence:
    properties:
      name:
        type: string
      tasks:
        items:
          $ref: '#/definitions/v0_2_0.Task'
        type: array
      triggeredOn:
        items:
          $ref: '#/definitions/v0_2_0.Trigger'
        type: array
    type: object
  v0_2_0.Task:
    properties:
      name:
        type: string
      properties: {}
      triggeredAfter:
        type: string
    type: object
  v0_2_0.Trigger:
    properties:
      event:
        type: string
      selector:
        $ref: '#/definitions/v0_2_0.Selector'
    type: object
info:
  contact:
    name: Keptn Team
    url: http://www.keptn.sh
  description: This is the API documentation of the DebugUI of the Shipyard Controller.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: DebugUI API
  version: develop
paths:
  /sequence/project/{project}:
    get:
      description: Get all the sequences which are present in a project
      parameters:
      - description: The name of the project
        in: path
        name: project
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/api.GetSequenceExecutionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Get all sequences for specific project
      tags:
      - Sequence
  /sequence/project/{project}/shkeptncontext/{shkeptncontext}:
    get:
      description: Get a specific sequence of a project which is identified by the
        shkeptncontext
      parameters:
      - description: The name of the project
        in: path
        name: project
        required: true
        type: string
      - description: The shkeptncontext
        in: path
        name: shkeptncontext
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.SequenceState'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Get a sequence with the shkeptncontext
      tags:
      - Sequence
  /sequence/project/{project}/shkeptncontext/{shkeptncontext}/event:
    get:
      description: Gets all the events of a project with the given shkeptncontext
      parameters:
      - description: The name of the project
        in: path
        name: project
        required: true
        type: string
      - description: The shkeptncontext
        in: path
        name: shkeptncontext
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/models.KeptnContextExtendedCE'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Get all the Events
      tags:
      - Sequence
  /sequence/project/{project}/shkeptncontext/{shkeptncontext}/event/{eventId}:
    get:
      description: Gets a single event of a project with the given shkeptncontext
        and eventId
      parameters:
      - description: The name of the project
        in: path
        name: project
        required: true
        type: string
      - description: The shkeptncontext
        in: path
        name: shkeptncontext
        required: true
        type: string
      - description: The Id of the event
        in: path
        name: eventId
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.KeptnContextExtendedCE'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Get a single Event
      tags:
      - Sequence
  /sequence/project/{project}/shkeptncontext/{shkeptncontext}/stage/{stage}/blocking:
    get:
      description: Get all the sequences that are blocking a sequence from being run
      parameters:
      - description: The name of the project
        in: path
        name: project
        required: true
        type: string
      - description: The Context of the sequence
        in: path
        name: shkeptncontext
        required: true
        type: string
      - description: The Stage of the sequences
        in: path
        name: stage
        required: true
        type: string
      responses:
        "200":
          description: ok
          schema:
            items:
              $ref: '#/definitions/models.SequenceExecution'
            type: array
        "404":
          description: not found
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Get all blocking sequences for specific sequence
      tags:
      - Sequence
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: x-token
    type: apiKey
swagger: "2.0"
