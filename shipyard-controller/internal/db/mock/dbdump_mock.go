// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package db_mock

import (
	"go.mongodb.org/mongo-driver/bson/primitive"
	"sync"
)

// DBDumpRepoMock is a mock implementation of db.DBDumpRepo.
//
// 	func TestSomethingThatUsesDBDumpRepo(t *testing.T) {
//
// 		// make and configure a mocked db.DBDumpRepo
// 		mockedDBDumpRepo := &DBDumpRepoMock{
// 			GetDumpFunc: func(collectionName string) ([]primitive.M, error) {
// 				panic("mock out the GetDump method")
// 			},
// 			ListAllCollectionsFunc: func() ([]string, error) {
// 				panic("mock out the ListAllCollections method")
// 			},
// 		}
//
// 		// use mockedDBDumpRepo in code that requires db.DBDumpRepo
// 		// and then make assertions.
//
// 	}
type DBDumpRepoMock struct {
	// GetDumpFunc mocks the GetDump method.
	GetDumpFunc func(collectionName string) ([]primitive.M, error)

	// ListAllCollectionsFunc mocks the ListAllCollections method.
	ListAllCollectionsFunc func() ([]string, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetDump holds details about calls to the GetDump method.
		GetDump []struct {
			// CollectionName is the collectionName argument value.
			CollectionName string
		}
		// ListAllCollections holds details about calls to the ListAllCollections method.
		ListAllCollections []struct {
		}
	}
	lockGetDump            sync.RWMutex
	lockListAllCollections sync.RWMutex
}

// GetDump calls GetDumpFunc.
func (mock *DBDumpRepoMock) GetDump(collectionName string) ([]primitive.M, error) {
	if mock.GetDumpFunc == nil {
		panic("DBDumpRepoMock.GetDumpFunc: method is nil but DBDumpRepo.GetDump was just called")
	}
	callInfo := struct {
		CollectionName string
	}{
		CollectionName: collectionName,
	}
	mock.lockGetDump.Lock()
	mock.calls.GetDump = append(mock.calls.GetDump, callInfo)
	mock.lockGetDump.Unlock()
	return mock.GetDumpFunc(collectionName)
}

// GetDumpCalls gets all the calls that were made to GetDump.
// Check the length with:
//     len(mockedDBDumpRepo.GetDumpCalls())
func (mock *DBDumpRepoMock) GetDumpCalls() []struct {
	CollectionName string
} {
	var calls []struct {
		CollectionName string
	}
	mock.lockGetDump.RLock()
	calls = mock.calls.GetDump
	mock.lockGetDump.RUnlock()
	return calls
}

// ListAllCollections calls ListAllCollectionsFunc.
func (mock *DBDumpRepoMock) ListAllCollections() ([]string, error) {
	if mock.ListAllCollectionsFunc == nil {
		panic("DBDumpRepoMock.ListAllCollectionsFunc: method is nil but DBDumpRepo.ListAllCollections was just called")
	}
	callInfo := struct {
	}{}
	mock.lockListAllCollections.Lock()
	mock.calls.ListAllCollections = append(mock.calls.ListAllCollections, callInfo)
	mock.lockListAllCollections.Unlock()
	return mock.ListAllCollectionsFunc()
}

// ListAllCollectionsCalls gets all the calls that were made to ListAllCollections.
// Check the length with:
//     len(mockedDBDumpRepo.ListAllCollectionsCalls())
func (mock *DBDumpRepoMock) ListAllCollectionsCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockListAllCollections.RLock()
	calls = mock.calls.ListAllCollections
	mock.lockListAllCollections.RUnlock()
	return calls
}
