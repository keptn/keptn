basePath: /v1
definitions:
  models.Error:
    properties:
      code:
        description: Error code
        type: integer
      message:
        description: |-
          Error message
          Required: true
        type: string
    type: object
  models.Event:
    properties:
      contenttype:
        description: contenttype
        type: string
      data:
        description: |-
          data
          Required: true
        type: object
      extensions:
        description: extensions
        type: object
      id:
        description: id
        type: string
      shkeptncontext:
        description: shkeptncontext
        type: string
      source:
        description: |-
          source
          Required: true
        type: string
      specversion:
        description: specversion
        type: string
      time:
        description: time
        type: string
      triggeredid:
        description: triggeredid
        type: string
      type:
        description: |-
          type
          Required: true
        type: string
    type: object
  models.EventContext:
    properties:
      eventId:
        description: ID of the event
        type: string
      keptnContext:
        description: Keptn Context ID of the event
        type: string
      time:
        description: Time of the event
        type: string
    type: object
  models.Events:
    properties:
      events:
        description: events
        items:
          $ref: '#/definitions/models.Event'
        type: array
      nextPageKey:
        description: Pointer to next page, base64 encoded
        type: string
      pageSize:
        description: Size of returned page
        type: number
      totalCount:
        description: Total number of events
        type: number
    type: object
  models.ExpandedProject:
    properties:
      creationDate:
        description: Creation date of the project
        type: string
      gitRemoteURI:
        description: Git remote URI
        type: string
      gitUser:
        description: Git User
        type: string
      lastEventContext:
        $ref: '#/definitions/models.EventContext'
        description: last event context
      projectName:
        description: Project name
        type: string
      shipyard:
        description: Shipyard file content
        type: string
      shipyardVersion:
        description: Version of the shipyard file
        type: string
      stages:
        description: stages
        items:
          $ref: '#/definitions/models.ExpandedStage'
        type: array
    type: object
  models.ExpandedProjects:
    properties:
      nextPageKey:
        description: Pointer to next page, base64 encoded
        type: string
      pageSize:
        description: Size of returned page
        type: number
      projects:
        description: projects
        items:
          $ref: '#/definitions/models.ExpandedProject'
        type: array
      totalCount:
        description: Total number of projects
        type: number
    type: object
  models.ExpandedService:
    properties:
      creationDate:
        description: Creation date of the service
        type: string
      deployedImage:
        description: Currently deployed image
        type: string
      lastEventTypes:
        additionalProperties:
          $ref: '#/definitions/models.EventContext'
        description: last event types
        type: object
      openRemediations:
        description: open remediations
        items:
          $ref: '#/definitions/models.Remediation'
        type: array
      serviceName:
        description: Service name
        type: string
    type: object
  models.ExpandedServices:
    properties:
      nextPageKey:
        description: Pointer to next page, base64 encoded
        type: string
      pageSize:
        description: Size of returned page
        type: number
      services:
        description: projects
        items:
          $ref: '#/definitions/models.ExpandedService'
        type: array
      totalCount:
        description: Total number of projects
        type: number
    type: object
  models.ExpandedStage:
    properties:
      lastEventContext:
        $ref: '#/definitions/models.EventContext'
        description: last event context
      services:
        description: services
        items:
          $ref: '#/definitions/models.ExpandedService'
        type: array
      stageName:
        description: Stage name
        type: string
    type: object
  models.Remediation:
    properties:
      action:
        description: Executed action
        type: string
      eventId:
        description: ID of the event
        type: string
      keptnContext:
        description: Keptn Context ID of the event
        type: string
      time:
        description: Time of the event
        type: string
      type:
        description: Type of the event
        type: string
    type: object
  models.Stages:
    properties:
      nextPageKey:
        description: Pointer to next page, base64 encoded
        type: string
      pageSize:
        description: Size of returned page
        type: number
      stages:
        description: stages
        items:
          $ref: '#/definitions/models.ExpandedStage'
        type: array
      totalCount:
        description: Total number of stages
        type: number
    type: object
  operations.CreateEvaluationParams:
    properties:
      end:
        description: end
        example: 2021-01-02T15:10:00
        type: string
      labels:
        additionalProperties:
          type: string
        description: labels
        type: object
      start:
        description: start
        example: 2021-01-02T15:00:00
        type: string
      timeframe:
        description: timeframe
        example: 5m
        type: string
    type: object
  operations.CreateEvaluationResponse:
    properties:
      keptnContext:
        description: keptnContext
        type: string
    type: object
  operations.CreateProjectParams:
    properties:
      gitRemoteURL:
        description: git remote URL
        type: string
      gitToken:
        description: git token
        type: string
      gitUser:
        description: git user
        type: string
      name:
        description: name
        type: string
      shipyard:
        description: shipyard
        type: string
    type: object
  operations.CreateProjectResponse:
    type: object
  operations.CreateServiceParams:
    properties:
      serviceName:
        description: name
        type: string
    type: object
  operations.CreateServiceResponse:
    type: object
  operations.DeleteProjectResponse:
    properties:
      message:
        type: string
    type: object
  operations.DeleteServiceResponse:
    properties:
      message:
        type: string
    type: object
  operations.UpdateProjectParams:
    properties:
      gitRemoteURL:
        description: git remote URL
        type: string
      gitToken:
        description: git token
        type: string
      gitUser:
        description: git user
        type: string
      name:
        description: name
        type: string
      shipyard:
        description: shipyard
        type: string
    type: object
  operations.UpdateProjectResponse:
    type: object
info:
  contact:
    name: Keptn Team
    url: http://www.keptn.sh
  description: This is the API documentation of the Shipyard Controller.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Control Plane API
  version: "1.0"
paths:
  /event:
    post:
      consumes:
      - application/json
      description: Handle incoming cloud event
      parameters:
      - description: Event type
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/models.Event'
      produces:
      - application/json
      responses:
        "200":
          description: ok
        "400":
          description: Invalid payload
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Handle event
      tags:
      - Events
  /event/triggered/{eventType}:
    get:
      consumes:
      - application/json
      description: get triggered events by their type
      parameters:
      - description: Event type
        in: path
        name: eventType
        required: true
        type: string
      - description: Event ID
        in: query
        name: eventID
        type: string
      - description: Project
        in: query
        name: project
        type: string
      - description: Stage
        in: query
        name: stage
        type: string
      - description: Service
        in: query
        name: service
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.Events'
        "400":
          description: Invalid payload
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Get triggered events
      tags:
      - Events
  /project:
    get:
      consumes:
      - application/json
      description: Get the list of all projects
      parameters:
      - description: The number of items to return
        in: query
        name: pageSize
        type: integer
      - description: Pointer to the next set of items
        in: query
        name: nextPageKey
        type: string
      - description: Disable sync of upstream repo before reading content
        in: query
        name: disableUpstreamSync
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.ExpandedProjects'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Get all projects
      tags:
      - Projects
    post:
      consumes:
      - application/json
      description: Create a new project
      parameters:
      - description: Project
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/operations.CreateProjectParams'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/operations.CreateProjectResponse'
        "400":
          description: Invalid payload
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Create a new project
      tags:
      - Projects
    put:
      consumes:
      - application/json
      description: Updates project
      parameters:
      - description: Project
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/operations.UpdateProjectParams'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/operations.UpdateProjectResponse'
        "400":
          description: Invalid payload
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Updates a project
      tags:
      - Projects
  /project/{project}:
    delete:
      consumes:
      - application/json
      description: Delete a project
      parameters:
      - description: Project name
        in: path
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/operations.DeleteProjectResponse'
        "400":
          description: Invalid payload
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete a project
      tags:
      - Projects
    get:
      consumes:
      - application/json
      description: Get a project by its name
      parameters:
      - description: The name of the project
        in: path
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.ExpandedProject'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Error)
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Get a project by name
      tags:
      - Projects
  /project/{project}/service:
    post:
      consumes:
      - application/json
      description: Create a new service
      parameters:
      - description: Project
        in: path
        name: project
        required: true
        type: string
      - description: Project
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/operations.CreateServiceParams'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/operations.CreateServiceResponse'
        "400":
          description: Invalid payload
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Create a new service
      tags:
      - Services
  /project/{project}/service/{service}:
    delete:
      consumes:
      - application/json
      description: Delete a service
      parameters:
      - description: Project
        in: path
        name: project
        required: true
        type: string
      - description: Service
        in: path
        name: service
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/operations.DeleteServiceResponse'
        "400":
          description: Invalid payload
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete a service
      tags:
      - Services
  /project/{project}/stage:
    get:
      consumes:
      - application/json
      description: Get the list of stages of a project
      parameters:
      - description: The name of the project
        in: path
        name: project
        required: true
        type: string
      - description: The number of items to return
        in: query
        name: pageSize
        type: integer
      - description: Pointer to the next set of items
        in: query
        name: nextPageKey
        type: string
      - description: Disable sync of upstream repo before reading content
        in: query
        name: disableUpstreamSync
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.Stages'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Get all stages of a project
      tags:
      - Stage
  /project/{project}/stage/{stage}:
    get:
      consumes:
      - application/json
      description: Get a stage of a project
      parameters:
      - description: The name of the project
        in: path
        name: project
        required: true
        type: string
      - description: The name of the stage
        in: path
        name: stage
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.ExpandedStage'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Error)
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Get a stage
      tags:
      - Projects
  /project/{project}/stage/{stage}/service:
    get:
      consumes:
      - application/json
      description: Gets all services of a stage in a project
      parameters:
      - description: Project
        in: path
        name: project
        required: true
        type: string
      - description: Stage
        in: path
        name: stage
        required: true
        type: string
      - description: The number of items to return
        in: query
        name: pageSize
        type: integer
      - description: Pointer to the next set of items
        in: query
        name: nextPageKey
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.ExpandedServices'
        "400":
          description: Invalid payload
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Gets all services of a stage in a project
      tags:
      - Services
  /project/{project}/stage/{stage}/service/{service}:
    get:
      consumes:
      - application/json
      description: Gets a service by its name
      parameters:
      - description: Project
        in: path
        name: project
        required: true
        type: string
      - description: Stage
        in: path
        name: stage
        required: true
        type: string
      - description: Service
        in: path
        name: service
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/models.ExpandedService'
        "400":
          description: Invalid payload
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Gets a service by its name
      tags:
      - Services
  /project/{project}/stage/{stage}/service/{service}/evaluation:
    post:
      consumes:
      - application/json
      description: Trigger a new evaluation for a service within a project
      parameters:
      - description: Project
        in: path
        name: project
        required: true
        type: string
      - description: Stage
        in: path
        name: stage
        required: true
        type: string
      - description: Service
        in: path
        name: service
        required: true
        type: string
      - description: Evaluation
        in: body
        name: evaluation
        required: true
        schema:
          $ref: '#/definitions/operations.CreateEvaluationParams'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/operations.CreateEvaluationResponse'
        "400":
          description: Invalid payload
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Trigger a new evaluation
      tags:
      - Evaluation
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: x-token
    type: apiKey
swagger: "2.0"
