---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shipyard-controller
  namespace: keptn
  labels:
    app.kubernetes.io/name: shipyard-controller
    app.kubernetes.io/instance: keptn
    app.kubernetes.io/part-of: keptn-keptn
    app.kubernetes.io/component: control-plane
    app.kubernetes.io/version: develop
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: shipyard-controller
      app.kubernetes.io/instance: keptn
  replicas: 1
  # recreate the deployment if anything changes (we can not do a rolling upgrade of this deployment as we use a volume)
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: shipyard-controller
        app.kubernetes.io/instance: keptn
        app.kubernetes.io/part-of: keptn-keptn
        app.kubernetes.io/component: control-plane
        app.kubernetes.io/version: develop
    spec:
      serviceAccountName: keptn-shipyard-controller
      containers:
      - name: shipyard-controller
        image: keptndev/shipyard-controller:latest
        env:
          - name: CONFIGURATION_SERVICE
            value: "http://configuration-service:8080"
          - name: EVENTBROKER
            value: http://localhost:8081/event
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MONGODB_HOST
            value: 'keptn-mongo:27017'
          - name: MONGODB_USER
            valueFrom:
              secretKeyRef:
                name: mongodb-credentials
                key: mongodb-user
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mongodb-credentials
                key: mongodb-password
          - name: MONGODB_DATABASE
            value: "keptn"
          - name: MONGODB_EXTERNAL_CONNECTION_STRING
            valueFrom:
              secretKeyRef:
                name: mongodb-credentials
                key: external_connection_string
                optional: true
          - name: UNIFORM_INTEGRATION_TTL
            value: "48h"
          - name: LOG_LEVEL
            value: "debug"
          - name: KEPTN_SPEC_VERSION
            value: "0.2.3"
          - name: TASK_STARTED_WAIT_DURATION
            value: "10m"
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "32Mi"
            cpu: "50m"
          limits:
            # limits is high on purpose to enable Debugging using skaffold
            # you can monitor memory usage using "kubectl -n keptn top pods"
            memory: "256Mi"
            cpu: "100m"
      - name: distributor
        image: docker.io/keptn/distributor:0.13.0-dev
        ports:
          - containerPort: 8080
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sleep", "30" ]
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "16Mi"
            cpu: "25m"
          limits:
            memory: "32Mi"
            cpu: "100m"
        env:
          - name: PUBSUB_URL
            value: 'nats://keptn-nats-cluster'
          - name: PUBSUB_TOPIC
            value: 'sh.keptn.>'
          - name: PUBSUB_RECIPIENT
            value: '127.0.0.1'
          - name: PUBSUB_RECIPIENT_PATH
            value: '/v1/event'
          - name: DISABLE_REGISTRATION
            value: "true"
      terminationGracePeriodSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  name: shipyard-controller
  namespace: keptn
  labels:
    app.kubernetes.io/name: shipyard-controller
    app.kubernetes.io/instance: keptn
    app.kubernetes.io/part-of: keptn-keptn
    app.kubernetes.io/component: control-plane
spec:
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app.kubernetes.io/name: shipyard-controller
    app.kubernetes.io/instance: keptn
