// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package handler_mock

import (
	"github.com/keptn/keptn/resource-service/common_models"
	"sync"
)

// IConfigurationContextMock is a mock implementation of handler.IConfigurationContext.
//
// 	func TestSomethingThatUsesIConfigurationContext(t *testing.T) {
//
// 		// make and configure a mocked handler.IConfigurationContext
// 		mockedIConfigurationContext := &IConfigurationContextMock{
// 			EstablishFunc: func(params handler.ConfigurationContextParams) (string, error) {
// 				panic("mock out the Establish method")
// 			},
// 		}
//
// 		// use mockedIConfigurationContext in code that requires handler.IConfigurationContext
// 		// and then make assertions.
//
// 	}
type IConfigurationContextMock struct {
	// EstablishFunc mocks the Establish method.
	EstablishFunc func(params common_models.ConfigurationContextParams) (string, error)

	// calls tracks calls to the methods.
	calls struct {
		// Establish holds details about calls to the Establish method.
		Establish []struct {
			// Params is the params argument value.
			Params common_models.ConfigurationContextParams
		}
	}
	lockEstablish sync.RWMutex
}

// Establish calls EstablishFunc.
func (mock *IConfigurationContextMock) Establish(params common_models.ConfigurationContextParams) (string, error) {
	if mock.EstablishFunc == nil {
		panic("IConfigurationContextMock.EstablishFunc: method is nil but IConfigurationContext.Establish was just called")
	}
	callInfo := struct {
		Params common_models.ConfigurationContextParams
	}{
		Params: params,
	}
	mock.lockEstablish.Lock()
	mock.calls.Establish = append(mock.calls.Establish, callInfo)
	mock.lockEstablish.Unlock()
	return mock.EstablishFunc(params)
}

// EstablishCalls gets all the calls that were made to Establish.
// Check the length with:
//     len(mockedIConfigurationContext.EstablishCalls())
func (mock *IConfigurationContextMock) EstablishCalls() []struct {
	Params common_models.ConfigurationContextParams
} {
	var calls []struct {
		Params common_models.ConfigurationContextParams
	}
	mock.lockEstablish.RLock()
	calls = mock.calls.Establish
	mock.lockEstablish.RUnlock()
	return calls
}
