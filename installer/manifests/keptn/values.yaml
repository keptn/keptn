## @section Global values
global:
  keptn:
    ## @param global.keptn.registry Global Docker image registry
    registry: docker.io/keptn
    ## @param global.keptn.tag The tag of Keptn that should be used for all images
    tag: ""

## @section MongoDB
mongo:
  ## @param mongo.enabled
  enabled: true
  ## @param mongo.host
  host: mongodb:27017
  ## @param mongo.architecture
  architecture: standalone
  service:
    ## @param mongo.service.nameOverride
    nameOverride: 'mongo'
    ## @param mongo.service.port
    port: 27017
  auth:
    ## @param mongo.auth.enabled
    enabled: true
    ## @param mongo.auth.databases
    databases:
      - 'keptn'
    ## @param mongo.auth.existingSecret
    existingSecret: 'mongodb-credentials' # If the password and rootPassword values below are used, remove this field.
    ## @param mongo.auth.usernames
    usernames:
      - 'keptn'
    ## @param mongo.auth.password
    password: null
    ## @param mongo.auth.rootUser
    rootUser: 'admin'
    ## @param mongo.auth.rootPassword
    rootPassword: null
    ## @param mongo.auth.bridgeAuthDatabase
    bridgeAuthDatabase: 'keptn'
  external:
    ## @param mongo.external.connectionString
    connectionString:
  ## @extra mongo.containerSecurityContext Container Security Context that should be used for all MongoDB pods
  ## @skip mongo.containerSecurityContext.allowPrivilegeEscalation
  ## @skip mongo.containerSecurityContext.capabilities
  ## @skip mongo.containerSecurityContext.capabilities.drop
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
  serviceAccount:
    ## @param mongo.serviceAccount.automountServiceAccountToken
    automountServiceAccountToken: false
  ## @extra mongo.resources Define resources for MongoDB
  ## @skip mongo.resources.requests
  ## @skip mongo.resources.limits
  resources:
    requests:
      cpu: 200m
      memory: 100Mi
    limits:
      cpu: 1000m
      memory: 500Mi

## @param prefixPath
prefixPath: ""

## @param keptnSpecVersion
keptnSpecVersion: latest

## @section Keptn Features
features:
  automaticProvisioning:
    ## @param features.automaticProvisioning.serviceURL
    serviceURL: ""
    ## @param features.automaticProvisioning.message
    message: ""
  swagger:
    ## @param features.swagger.hideDeprecated
    hideDeprecated: false
  oauth:
    ## @param features.oauth.enabled Enable OAuth for Keptn
    enabled: false
    ## @param features.oauth.prefix
    prefix: "keptn:"
  git:
    ## @param features.git.remoteURLDenyList
    remoteURLDenyList: ""

## @section NATS
nats:
  ## @param nats.nameOverride
  nameOverride: keptn-nats
  ## @param nats.fullnameOverride
  fullnameOverride: keptn-nats
  cluster:
    ## @param nats.cluster.enabled Enable NATS clustering
    enabled: false
    ## @param nats.cluster.replicas Define the NATS cluster size
    replicas: 3
    ## @param nats.cluster.name Define the NATS cluster name
    name: nats
  ## @extra nats.securityContext Define security context settings for NATS
  ## @skip nats.securityContext.runAsNonRoot
  ## @skip nats.securityContext.runAsUser
  ## @skip nats.securityContext.fsGroup
  securityContext:
    runAsNonRoot: true
    runAsUser: 10001
    fsGroup: 10001
  nats:
    ## @param nats.nats.automountServiceAccountToken
    automountServiceAccountToken: false
    ## @extra nats.nats.resources Define resources for NATS
    ## @skip nats.nats.resources.requests
    ## @skip nats.nats.resources.limits
    resources:
      requests:
        cpu: 200m
        memory: 500Mi
      limits:
        cpu: 500m
        memory: 1Gi
    healthcheck:
      startup:
        ## @param nats.nats.healthcheck.startup.enabled Enable NATS startup probe
        ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-startup-probes
        enabled: false
    jetstream:
      ## @param nats.nats.jetstream.enabled
      enabled: true

      ## @param nats.nats.jetstream.memStorage.enabled Enable memory storage for NATS Jetstream
      ## @param nats.nats.jetstream.memStorage.size Define the memory storage size for NATS Jetstream
      memStorage:
        enabled: true
        size: 500Mi

      ## @param nats.nats.jetstream.fileStorage.enabled
      ## @param nats.nats.jetstream.fileStorage.size
      ## @param nats.nats.jetstream.fileStorage.storageDirectory
      ## @param nats.nats.jetstream.fileStorage.storageClassName
      fileStorage:
        enabled: true
        size: 5Gi
        storageDirectory: /data/
        storageClassName: ""
    ## @extra nats.nats.securityContext Define the container security context for NATS
    ## @skip nats.nats.securityContext.readOnlyRootFilesystem
    ## @skip nats.nats.securityContext.allowPrivilegeEscalation
    ## @skip nats.nats.securityContext.privileged
    ## @skip nats.nats.securityContext.runAsNonRoot
    ## @skip nats.nats.securityContext.runAsUser
    ## @skip nats.nats.securityContext.capabilities
    ## @skip nats.nats.securityContext.capabilities.drop
    securityContext:
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      privileged: false
      runAsNonRoot: true
      runAsUser: 65532
      capabilities:
        drop:
          - ALL

  natsbox:
    ## @param nats.natsbox.enabled Enable NATS Box utility container
    enabled: false
  reloader:
    ## @param nats.reloader.enabled Enable NATS Config Reloader sidecar to reload configuration during runtime
    enabled: false
  exporter:
    ## @param nats.exporter.enabled Enable NATS Prometheus Exporter sidecar to emit prometheus metrics
    enabled: false

## @section API Gateway NginX
apiGatewayNginx:
  ## @param apiGatewayNginx.type
  type: ClusterIP
  ## @param apiGatewayNginx.port
  port: 80
  ## @param apiGatewayNginx.targetPort
  targetPort: 8080
  ## @param apiGatewayNginx.nodePort
  nodePort: 31090
  podSecurityContext:
    ## @param apiGatewayNginx.podSecurityContext.enabled Enable the pod security context for the API Gateway
    enabled: true
    ## @param apiGatewayNginx.podSecurityContext.defaultSeccompProfile Use the default seccomp profile for the API Gateway
    defaultSeccompProfile: true
    ## @param apiGatewayNginx.podSecurityContext.fsGroup Filesystem group to be used by the API Gateway
    fsGroup: 101
  ## @extra apiGatewayNginx.containerSecurityContext Define a container security context for the API Gateway
  ## @skip apiGatewayNginx.containerSecurityContext.enabled
  ## @skip apiGatewayNginx.containerSecurityContext.runAsNonRoot
  ## @skip apiGatewayNginx.containerSecurityContext.runAsUser
  ## @skip apiGatewayNginx.containerSecurityContext.readOnlyRootFilesystem
  ## @skip apiGatewayNginx.containerSecurityContext.allowPrivilegeEscalation
  ## @skip apiGatewayNginx.containerSecurityContext.privileged
  ## @skip apiGatewayNginx.containerSecurityContext.capabilities
  ## @skip apiGatewayNginx.containerSecurityContext.capabilities.drop
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 101
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
    privileged: false
    capabilities:
      drop:
        - ALL
  image:
    ## @param apiGatewayNginx.image.registry API Gateway image registry
    registry: "docker.io/nginxinc"
    ## @param apiGatewayNginx.image.repository API Gateway image repository
    repository: "nginx-unprivileged"
    ## @param apiGatewayNginx.image.tag API Gateway image tag
    tag: "1.22.0-alpine"
  ## @param apiGatewayNginx.nodeSelector
  nodeSelector: {}
  ## @param apiGatewayNginx.gracePeriod
  gracePeriod: 60
  ## @param apiGatewayNginx.preStopHookTime
  preStopHookTime: 20
  ## @param apiGatewayNginx.clientMaxBodySize
  clientMaxBodySize: "5m"
  ## @param apiGatewayNginx.sidecars Add additional sidecar containers to the API Gateway
  sidecars: []
  ## @param apiGatewayNginx.extraVolumeMounts Add additional volume mounts to the API Gateway
  extraVolumeMounts: []
  ## @param apiGatewayNginx.extraVolumes Add additional volumes to the API Gateway
  extraVolumes: []
  ## @extra apiGatewayNginx.resources Define resources for the API Gateway
  ## @skip apiGatewayNginx.resources.requests
  ## @skip apiGatewayNginx.resources.limits
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "128Mi"
      cpu: "100m"

remediationService:
  enabled: true
  image:
    registry: ""                             # Container Registry
    repository: "remediation-service"        # Container Image Name
    tag: ""                                  # Container Tag
  nodeSelector: {}
  gracePeriod: 60
  preStopHookTime: 5
  sidecars: []
  extraVolumeMounts: []
  extraVolumes: []
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "1Gi"
      cpu: "200m"

apiService:
  tokenSecretName:
  image:
    registry: ""                             # Container Registry
    repository: "api"                        # Container Image Name
    tag: ""                                  # Container Tag
  maxAuth:
    enabled: true
    requestsPerSecond: "1.0"
    requestBurst: "2"
  nodeSelector: {}
  gracePeriod: 60
  preStopHookTime: 5
  sidecars: []
  extraVolumeMounts: []
  extraVolumes: []
  resources:
    requests:
      memory: "32Mi"
      cpu: "50m"
    limits:
      memory: "64Mi"
      cpu: "100m"

bridge:
  image:
    registry: ""                             # Container Registry
    repository: "bridge2"                    # Container Image Name
    tag: ""                                  # Container Tag
  cliDownloadLink: null
  secret:
    enabled: true
  versionCheck:
    enabled: true
  showApiToken:
    enabled: true
  installationType: null
  lookAndFeelUrl: null
  podSecurityContext:
    enabled: true
    defaultSeccompProfile: true
    fsGroup: 65532
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 65532
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    privileged: false
    capabilities:
      drop:
        - ALL
  oauth:
    discovery: ""
    secureCookie: false
    trustProxy: ""
    sessionTimeoutMin: ""
    sessionValidatingTimeoutMin: ""
    baseUrl: ""
    clientID: ""
    clientSecret: ""
    IDTokenAlg: ""
    scope: ""
    userIdentifier: ""
    mongoConnectionString: ""
  authMsg: ""
  d3:
    enabled: true
  nodeSelector: {}
  sidecars: []
  extraVolumeMounts: []
  extraVolumes: []
  resources:
    requests:
      memory: "64Mi"
      cpu: "25m"
    limits:
      memory: "256Mi"
      cpu: "200m"

distributor:
  metadata:
    hostname:
    namespace:
  image:
    registry: ""                             # Container Registry
    repository: "distributor"                # Container Image Name
    tag: ""                                  # Container Tag
  config:
    proxy:
      httpTimeout: "30"
      maxPayloadBytesKB: "64"
    queueGroup:
      enabled: true
    oauth:
      clientID: ""
      clientSecret: ""
      discovery: ""
      tokenURL: ""
      scopes: ""
  resources:
    requests:
      memory: "16Mi"
      cpu: "25m"
    limits:
      memory: "32Mi"
      cpu: "100m"

shipyardController:
  image:
    registry: ""                             # Container Registry
    repository: "shipyard-controller"        # Container Image Name
    tag: ""                                  # Container Tag
  config:
    taskStartedWaitDuration: "10m"
    uniformIntegrationTTL: "48h"
    leaderElection:
      enabled: false
    replicas: 1
    validation:
      # On Database level, Keptn creates collections that are named like <PROJECTNAME>-<suffix>
      # Keep in mind that "suffix" can occupy up to 20 characters so that you will eventually
      # hit the database limit for max collection name size when your project name is too long.
      # projectNameMaxSize can be used to forbid project names longer than a certain size in Keptn
      projectNameMaxSize: 200
      # The limit of 43 characters for a service's name is currently imposed by the helm-service,
      # which, if being used for the CD use case with blue/green deployments generates a helm release called <serviceName>-generated,
      # and helm releases have a maximum length of 53 characters. Therefore, we use this value as a default.
      # If the helm chart generation for blue/green deployments is not needed, and this value is too small, it can be adapted here
      serviceNameMaxSize: 43
  nodeSelector: {}
  gracePeriod: 60
  preStopHookTime: 15
  sidecars: []
  extraVolumeMounts: []
  extraVolumes: []
  resources:
    requests:
      memory: "32Mi"
      cpu: "50m"
    limits:
      memory: "128Mi"
      cpu: "100m"

secretService:
  image:
    registry: ""                             # Container Registry
    repository: "secret-service"             # Container Image Name
    tag: ""                                  # Container Tag
  nodeSelector: {}
  gracePeriod: 60
  preStopHookTime: 20
  sidecars: []
  extraVolumeMounts: []
  extraVolumes: []
  resources:
    requests:
      memory: "32Mi"
      cpu: "25m"
    limits:
      memory: "64Mi"
      cpu: "200m"

resourceService:
  replicas: 1
  image:
    registry: ""                             # Container Registry
    repository: "resource-service"           # Container Image Name
    tag: ""                                  # Container Tag
  env:
    GIT_KEPTN_USER: "keptn"
    GIT_KEPTN_EMAIL: "keptn@keptn.sh"
    DIRECTORY_STAGE_STRUCTURE: "false"
  nodeSelector: {}
  gracePeriod: 60
  fsGroup: 1001
  preStopHookTime: 20
  sidecars: []
  extraVolumeMounts: []
  extraVolumes: []
  resources:
    requests:
      memory: "32Mi"
      cpu: "25m"
    limits:
      memory: "64Mi"
      cpu: "100m"

mongodbDatastore:
  image:
    registry: ""                             # Container Registry
    repository: "mongodb-datastore"          # Container Image Name
    tag: ""                                  # Container Tag
  nodeSelector: {}
  gracePeriod: 60
  preStopHookTime: 20
  sidecars: []
  extraVolumeMounts: []
  extraVolumes: []
  resources:
    requests:
      memory: "32Mi"
      cpu: "50m"
    limits:
      memory: "512Mi"
      cpu: "300m"

lighthouseService:
  enabled: true
  image:
    registry: ""                             # Container Registry
    repository: "lighthouse-service"         # Container Image Name
    tag: ""                                  # Container Tag
  nodeSelector: {}
  gracePeriod: 60
  preStopHookTime: 20
  sidecars: []
  extraVolumeMounts: []
  extraVolumes: []
  resources:
    requests:
      memory: "128Mi"
      cpu: "50m"
    limits:
      memory: "1Gi"
      cpu: "200m"

statisticsService:
  enabled: true
  image:
    registry: ""                             # Container Registry
    repository: "statistics-service"         # Container Image Name
    tag: ""                                  # Container Tag
  nodeSelector: {}
  gracePeriod: 60
  preStopHookTime: 20
  sidecars: []
  extraVolumeMounts: []
  extraVolumes: []
  resources:
    requests:
      memory: "32Mi"
      cpu: "25m"
    limits:
      memory: "64Mi"
      cpu: "100m"

approvalService:
  enabled: true
  image:
    registry: ""                             # Container Registry
    repository: "approval-service"           # Container Image Name
    tag: ""                                  # Container Tag
  nodeSelector: {}
  gracePeriod: 60
  preStopHookTime: 5
  sidecars: []
  extraVolumeMounts: []
  extraVolumes: []
  resources:
    requests:
      memory: "32Mi"
      cpu: "25m"
    limits:
      memory: "128Mi"
      cpu: "100m"

webhookService:
  enabled: true
  image:
    registry: ""                             # Container Registry
    repository: "webhook-service"            # Container Image Name
    tag: ""                                  # Container Tag
  nodeSelector: {}
  gracePeriod: 60
  preStopHookTime: 20
  sidecars: []
  extraVolumeMounts: []
  extraVolumes: []
  resources:
    requests:
      memory: "32Mi"
      cpu: "25m"
    limits:
      memory: "64Mi"
      cpu: "100m"

ingress:
  enabled: false
  annotations: {}
  host: {}
  path: /
  pathType: Prefix
  className: ""
  tls:
    []

logLevel: "info"

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0
podSecurityContext:
  enabled: true
  defaultSeccompProfile: true
  fsGroup: 65532
containerSecurityContext:
  enabled: true
  runAsNonRoot: true
  runAsUser: 65532
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  privileged: false
  capabilities:
    drop:
      - ALL
nodeSelector: {}
