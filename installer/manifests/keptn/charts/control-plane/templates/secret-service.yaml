apiVersion: v1
kind: ConfigMap
metadata:
  name: secret-service-config
  labels:
    app.kubernetes.io/name: secret-service-config-cm
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    helm.sh/chart: {{ include "control-plane.chart" . }}
data:
  scopes.yaml: |
    Scopes:
      keptn-default:
        Capabilities:
          keptn-secrets-default-read:
            Permissions:
              - get
      keptn-webhook-service:
        Capabilities:
          keptn-webhook-svc-read:
            Permissions:
              - get
      dynatrace-service:
        Capabilities:
          keptn-dynatrace-svc-read:
            Permissions:
              - get
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: secret-service
  labels:
    app.kubernetes.io/name: secret-service
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    app.kubernetes.io/version: {{ .Values.secretService.image.tag | default .Chart.AppVersion }}
    helm.sh/chart: {{ include "control-plane.chart" . }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: secret-service
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: 1
  # recreate the deployment if anything changes (we can not do a rolling upgrade of this deployment as we use a volume)
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: secret-service
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
        app.kubernetes.io/component: {{ include "control-plane.name" . }}
        app.kubernetes.io/version: {{ .Values.secretService.image.tag | default .Chart.AppVersion }}
        helm.sh/chart: {{ include "control-plane.chart" . }}
    spec:
      {{ include "control-plane.common.pod-security-context" . | nindent 6 }}
      serviceAccountName: keptn-secret-service
      containers:
        - name: secret-service
          image: {{ .Values.secretService.image.repository }}:{{ .Values.secretService.image.tag | default .Chart.AppVersion }}
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /v1/secret
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LOG_LEVEL
              value: {{ .Values.logLevel | default "info" }}
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "32Mi"
              cpu: "25m"
            limits:
              memory: "64Mi"
              cpu: "200m"
          volumeMounts:
            - mountPath: /data
              name: secret-service-configmap-volume
        {{ include "control-plane.common.container-security-context" . | nindent 10 }}
      volumes:
        - name: secret-service-configmap-volume
          configMap:
            name: secret-service-config
---
apiVersion: v1
kind: Service
metadata:
  name: secret-service
  labels:
    app.kubernetes.io/name: secret-service
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    helm.sh/chart: {{ include "control-plane.chart" . }}
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: secret-service
    app.kubernetes.io/instance: {{ .Release.Name }}
