{{- $apiToken := (randAlphaNum 20) | b64enc | quote }}
{{- $apisecret := (lookup "v1" "Secret" .Release.Namespace "keptn-api-token") }}
{{- if $apisecret }}
{{- $apiToken = index $apisecret.data "keptn-api-token" }}
{{- end -}}

{{- $bridgePassword := (randAlphaNum 16) | b64enc | quote }}
{{- $bridgesecret := (lookup "v1" "Secret" .Release.Namespace "bridge-credentials") }}
{{- if $bridgesecret }}
{{- $bridgePassword = index $bridgesecret.data "BASIC_AUTH_PASSWORD" }}
{{- end -}}

---
apiVersion: v1
kind: Secret
metadata:
  name: keptn-api-token
  labels:
    app.kubernetes.io/name: keptn-api-token
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    helm.sh/chart: {{ include "control-plane.chart" . }}
type: Opaque
data:
  keptn-api-token: {{ $apiToken }}
---
apiVersion: v1
kind: Secret
metadata:
  name: bridge-credentials
  labels:
    app.kubernetes.io/name: bridge-credentials
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    helm.sh/chart: {{ include "control-plane.chart" . }}  
type: Opaque
data:
  BASIC_AUTH_USERNAME: 'a2VwdG4='
  BASIC_AUTH_PASSWORD: {{ $bridgePassword }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-service
  labels:
    app.kubernetes.io/name: api-service
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    app.kubernetes.io/version: {{ .Values.apiService.image.tag | default .Chart.AppVersion }}
    helm.sh/chart: {{ include "control-plane.chart" . }}    
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: api-service
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: api-service
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
        app.kubernetes.io/component: {{ include "control-plane.name" . }}
        app.kubernetes.io/version: {{ .Values.apiService.image.tag | default .Chart.AppVersion }}
        helm.sh/chart: {{ include "control-plane.chart" . }}    
    spec:
      containers:
        - name: api-service
          image: {{ .Values.apiService.image.repository }}:{{ .Values.apiService.image.tag | default .Chart.AppVersion }}
          {{- include "control-plane.livenessProbe" . | nindent 10 }}
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          env:
            - name: EVENTBROKER_URI
              value: event-broker
            - name: DATASTORE_URI
              value: mongodb-datastore:8080
            - name: CONFIGURATION_URI
              value: configuration-service:8080
            - name: SECRET_TOKEN
              valueFrom:
                secretKeyRef:
                  name: keptn-api-token
                  key: keptn-api-token
      serviceAccountName: keptn-api-service
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  labels:
    app.kubernetes.io/name: api-service
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    helm.sh/chart: {{ include "control-plane.chart" . }}  
spec:
  ports:
    - port: 8080
      name: http
      targetPort: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: api-service
    app.kubernetes.io/instance: {{ .Release.Name }}
---
# bridge
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bridge
  labels:
    app.kubernetes.io/name: bridge
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    app.kubernetes.io/version: {{ .Values.bridge.image.tag | default .Chart.AppVersion }}
    helm.sh/chart: {{ include "control-plane.chart" . }}      
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: bridge
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bridge
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
        app.kubernetes.io/component: {{ include "control-plane.name" . }}
        app.kubernetes.io/version: {{ .Values.bridge.image.tag | default .Chart.AppVersion }}
        helm.sh/chart: {{ include "control-plane.chart" . }}      
    spec:
      containers:
        - name: bridge
          image: {{ .Values.bridge.image.repository }}:{{ .Values.bridge.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: Always
          env:
            - name: API_URL
              value: "http://api-gateway-nginx/api"
            - name: API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: keptn-api-token
                  key: keptn-api-token
          envFrom:
            - secretRef:
                name: bridge-credentials
                optional: true
          ports:
            - containerPort: 3000
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "500m"
      serviceAccountName: keptn-default

---
apiVersion: v1
kind: Service
metadata:
  name: bridge
  labels:
    app.kubernetes.io/name: bridge
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    helm.sh/chart: {{ include "control-plane.chart" . }}      
spec:
  ports:
    - port: 8080
      targetPort: 3000
      protocol: TCP
  selector:
    app.kubernetes.io/name: bridge
    app.kubernetes.io/instance: {{ .Release.Name }}
---
# eventbroker-go
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eventbroker-go
  labels:
    app.kubernetes.io/name: eventbroker-go
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    app.kubernetes.io/version: {{ .Values.eventbroker.image.tag | default .Chart.AppVersion }}
    helm.sh/chart: {{ include "control-plane.chart" . }}      
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: eventbroker-go
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: eventbroker-go
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
        app.kubernetes.io/component: {{ include "control-plane.name" . }}
        app.kubernetes.io/version: {{ .Values.eventbroker.image.tag | default .Chart.AppVersion }}
        helm.sh/chart: {{ include "control-plane.chart" . }}      
    spec:
      containers:
        - name: eventbroker-go
          image: {{ .Values.eventbroker.image.repository }}:{{ .Values.eventbroker.image.tag | default .Chart.AppVersion }}
          {{- include "control-plane.livenessProbe" . | nindent 10 }}
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "32Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: PUBSUB_URL
              value: 'nats://keptn-nats-cluster'
            - name: PUBSUB_IMPL
              value: 'nats'
      serviceAccountName: keptn-default
---
apiVersion: v1
kind: Service
metadata:
  name: event-broker
  labels:
    app.kubernetes.io/name: eventbroker-go
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    helm.sh/chart: {{ include "control-plane.chart" . }}      
spec:
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: eventbroker-go
    app.kubernetes.io/instance: {{ .Release.Name }}

---
# helm-service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: helm-service
  labels:
    app.kubernetes.io/name: helm-service
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    app.kubernetes.io/version: {{ .Values.helmService.image.tag | default .Chart.AppVersion }}
    helm.sh/chart: {{ include "control-plane.chart" . }}    
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: helm-service
      app.kubernetes.io/instance: {{ .Release.Name }}      
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: helm-service
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
        app.kubernetes.io/component: {{ include "control-plane.name" . }}
        app.kubernetes.io/version: {{ .Values.helmService.image.tag | default .Chart.AppVersion }}
        helm.sh/chart: {{ include "control-plane.chart" . }}    
    spec:
      containers:
        - name: helm-service
          image: {{ .Values.helmService.image.repository }}:{{ .Values.helmService.image.tag | default .Chart.AppVersion }}
          {{- include "control-plane.livenessProbe" . | nindent 10 }}
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "128Mi"
              cpu: "50m"
            limits:
              memory: "512Mi"
              cpu: "1000m"
          env:
            - name: CONFIGURATION_SERVICE
              value: 'http://configuration-service:8080'
            - name: EVENTBROKER
              value: 'http://event-broker/keptn'
            - name: API
              value: 'ws://api-service:8080/websocket'
            - name: ENVIRONMENT
              value: 'production'
            - name: PRE_WORKFLOW_ENGINE
              value: 'true'
            - name: CANARY
              value: 'deployment'
            - name: INGRESS_HOSTNAME_SUFFIX
              valueFrom:
                configMapKeyRef:
                  name: ingress-config
                  key: ingress_hostname_suffix
                  optional: true
            - name: INGRESS_PROTOCOL
              valueFrom:
                configMapKeyRef:
                  name: ingress-config
                  key: ingress_protocol
                  optional: true
            - name: INGRESS_PORT
              valueFrom:
                configMapKeyRef:
                  name: ingress-config
                  key: ingress_port
                  optional: true
            - name: ISTIO_GATEWAY
              valueFrom:
                configMapKeyRef:
                  name: ingress-config
                  key: istio_gateway
                  optional: true
        - name: distributor
          image: {{ .Values.distributor.image.repository }}:{{ .Values.distributor.image.tag | default .Chart.AppVersion }}
          {{- include "control-plane.livenessProbe" . | nindent 10 }}
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "32Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: PUBSUB_URL
              value: 'nats://keptn-nats-cluster'
            - name: PUBSUB_TOPIC
              value: 'sh.keptn.internal.event.service.create'
            - name: PUBSUB_RECIPIENT
              value: '127.0.0.1'
      serviceAccountName: keptn-helm-service
---
apiVersion: v1
kind: Service
metadata:
  name: helm-service
  labels:
    app.kubernetes.io/name: helm-service
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    helm.sh/chart: {{ include "control-plane.chart" . }}    
spec:
  ports:
    - port: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: helm-service
    app.kubernetes.io/instance: {{ .Release.Name }}
---
# shipyard-service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shipyard-service
  labels:
    app.kubernetes.io/name: shipyard-service
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    app.kubernetes.io/version: {{ .Values.shipyardService.image.tag | default .Chart.AppVersion }}
    helm.sh/chart: {{ include "control-plane.chart" . }}      
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: shipyard-service
      app.kubernetes.io/instance: {{ .Release.Name }}      
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: shipyard-service
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
        app.kubernetes.io/component: {{ include "control-plane.name" . }}
        app.kubernetes.io/version: {{ .Values.shipyardService.image.tag | default .Chart.AppVersion }}
        helm.sh/chart: {{ include "control-plane.chart" . }}   
    spec:
      containers:
        - name: shipyard-service
          image: {{ .Values.shipyardService.image.repository }}:{{ .Values.shipyardService.image.tag | default .Chart.AppVersion }}
          {{- include "control-plane.livenessProbe" . | nindent 10 }}
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "32Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: CONFIGURATION_SERVICE
              value: 'http://configuration-service:8080'
            - name: EVENTBROKER
              value: 'http://event-broker/keptn'
            - name: API
              value: 'ws://api-service:8080/websocket'
        - name: distributor
          image: {{ .Values.distributor.image.repository }}:{{ .Values.distributor.image.tag | default .Chart.AppVersion }}
          {{- include "control-plane.livenessProbe" . | nindent 10 }}
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "32Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: PUBSUB_URL
              value: 'nats://keptn-nats-cluster'
            - name: PUBSUB_TOPIC
              value: 'sh.keptn.internal.event.project.create,sh.keptn.internal.event.project.delete'
            - name: PUBSUB_RECIPIENT
              value: '127.0.0.1'
      serviceAccountName: keptn-default
---
apiVersion: v1
kind: Service
metadata:
  name: shipyard-service
  labels:
    app.kubernetes.io/name: shipyard-service
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    helm.sh/chart: {{ include "control-plane.chart" . }}   
spec:
  ports:
    - port: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: shipyard-service
    app.kubernetes.io/instance: {{ .Release.Name }}
---
# configuration-service
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  name: configuration-volume
  labels:
    app.kubernetes.io/name: configuration-volume
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    helm.sh/chart: {{ include "control-plane.chart" . }}     
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: configuration-service
  labels:
    app.kubernetes.io/name: configuration-service
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    app.kubernetes.io/version: {{ .Values.configurationService.image.tag | default .Chart.AppVersion }}
    helm.sh/chart: {{ include "control-plane.chart" . }}     
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: configuration-service
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: 1
  # recreate the deployment if anything changes (we can not do a rolling upgrade of this deployment as we use a volume)
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: configuration-service
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
        app.kubernetes.io/component: {{ include "control-plane.name" . }}
        app.kubernetes.io/version: {{ .Values.configurationService.image.tag | default .Chart.AppVersion }}
        helm.sh/chart: {{ include "control-plane.chart" . }}   
    spec:
      containers:
        - name: configuration-service
          image: {{ .Values.configurationService.image.repository }}:{{ .Values.configurationService.image.tag | default .Chart.AppVersion }}
          {{- include "control-plane.livenessProbe" . | nindent 10 }}
          imagePullPolicy: Always
          env:
            - name: MONGODB_HOST
              value: 'mongodb:27017'
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: user
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: password
            - name: MONGO_DB_NAME
              value: 'keptn'
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          volumeMounts:
            - mountPath: /data/config
              name: configuration-volume
        - name: distributor
          image: {{ .Values.distributor.image.repository }}:{{ .Values.distributor.image.tag | default .Chart.AppVersion }}
          {{- include "control-plane.livenessProbe" . | nindent 10 }}
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "32Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: PUBSUB_URL
              value: 'nats://keptn-nats-cluster'
            - name: PUBSUB_TOPIC
              value: 'sh.keptn.>'
            - name: PUBSUB_RECIPIENT
              value: '127.0.0.1'
            - name: PUBSUB_RECIPIENT_PATH
              value: '/v1/event'
      volumes:
        - name: configuration-volume
          persistentVolumeClaim:
            claimName: configuration-volume
      serviceAccountName: keptn-configuration-service
---
apiVersion: v1
kind: Service
metadata:
  name: configuration-service
  labels:
    app.kubernetes.io/name: configuration-service
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    helm.sh/chart: {{ include "control-plane.chart" . }}   
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: configuration-service
    app.kubernetes.io/instance: {{ .Release.Name }}

