{{- $prefixPathTrimmed := trimPrefix "/" .Values.prefixPath  }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-nginx-config
  labels:
    app.kubernetes.io/name: api-nginx-config-cm
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    helm.sh/chart: {{ include "control-plane.chart" . }}         
data:
  nginx.conf: |
    worker_processes  3;
    pid /tmp/nginx.pid;
    error_log /dev/stdout info;
    events {
      worker_connections  10240;
    }

    http {
      log_format  main
              'remote_addr:$remote_addr\t'
              'time_local:$time_local\t'
              'method:$request_method\t'
              'uri:$request_uri\t'
              'host:$host\t'
              'status:$status\t'
              'bytes_sent:$body_bytes_sent\t'
              'referer:$http_referer\t'
              'useragent:$http_user_agent\t'
              'forwardedfor:$http_x_forwarded_for\t'
              'request_time:$request_time';
      access_log /dev/stdout;
      # rewrite_log on;
      absolute_redirect off;

      # https://www.nginx.com/blog/websocket-nginx/
      map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
      }

      server {
          listen       8080;
          server_name  _;

          include /etc/nginx/keptn-endpoints-pre-0-7.conf;
          include /etc/nginx/keptn-endpoints.conf;
      }
    }
  keptn-endpoints.conf: |
    rewrite ^/{{ $prefixPathTrimmed }}$ {{ .Values.prefixPath }}/bridge/ permanent;
    rewrite ^{{ .Values.prefixPath }}/api$ {{ .Values.prefixPath }}/api/swagger-ui/ permanent;

    # special configuration for /v1/auth to always use POST requests
    location {{ .Values.prefixPath }}/api/v1/auth {
      rewrite {{ .Values.prefixPath }}/api/v1/auth /v1/auth break;

      proxy_method POST;
      proxy_pass_request_body off;
      proxy_pass http://api-service:8080;
      proxy_http_version 1.1;
      proxy_pass_request_headers on; # only pass request headers to this service
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location {{ .Values.prefixPath }}/bridge {
      rewrite {{ .Values.prefixPath }}/bridge(/.*) $1 break;
      proxy_pass http://bridge:8080;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
    }

    # health check
    location /nginx-health {
        access_log off;
        return 200 "OK\n";
    }

    location {{ .Values.prefixPath }}/api/mongodb-datastore/swagger-ui/swagger.yaml {
     # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
     # the access is denied) before we store the file
     # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
      rewrite {{ .Values.prefixPath }}/api/mongodb-datastore/(.*) /$1  break;
      proxy_pass         http://mongodb-datastore:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location  {{ .Values.prefixPath }}/api/mongodb-datastore {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
      auth_request               {{ .Values.prefixPath }}/api/v1/auth;

      rewrite {{ .Values.prefixPath }}/api/mongodb-datastore/(.*) /$1  break;
      proxy_pass         http://mongodb-datastore:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location {{ .Values.prefixPath }}/api/controlPlane/swagger-ui/swagger.yaml {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.

      rewrite {{ .Values.prefixPath }}/api/controlPlane/(.*) /$1  break;
      proxy_pass         http://shipyard-controller:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location  {{ .Values.prefixPath }}/api/controlPlane {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
      auth_request               {{ .Values.prefixPath }}/api/v1/auth;

      rewrite {{ .Values.prefixPath }}/api/controlPlane/(.*) /$1  break;
      proxy_pass         http://shipyard-controller:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location {{ .Values.prefixPath }}/api/secrets/swagger-ui/docs/swagger.yaml {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.

      rewrite {{ .Values.prefixPath }}/api/secrets/(.*) /$1  break;
      proxy_pass         http://secret-service:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location  {{ .Values.prefixPath }}/api/secrets/ {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
      auth_request               {{ .Values.prefixPath }}/api/v1/auth;

      rewrite {{ .Values.prefixPath }}/api/secrets/(.*) /$1  break;
      proxy_pass         http://secret-service:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location {{ .Values.prefixPath }}/api/statistics/swagger-ui/swagger.yaml {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.

      rewrite {{ .Values.prefixPath }}/api/statistics/(.*) /$1  break;
      proxy_pass         http://statistics-service:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location  {{ .Values.prefixPath }}/api/statistics {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
      auth_request               {{ .Values.prefixPath }}/api/v1/auth;

      rewrite {{ .Values.prefixPath }}/api/statistics/(.*) /$1  break;
      proxy_pass         http://statistics-service:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location {{ .Values.prefixPath }}/api/configuration-service/swagger-ui/swagger.yaml {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.

      rewrite {{ .Values.prefixPath }}/api/configuration-service/(.*) /$1  break;
      proxy_pass         http://configuration-service:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location  {{ .Values.prefixPath }}/api/configuration-service {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
      auth_request               {{ .Values.prefixPath }}/api/v1/auth;

      rewrite {{ .Values.prefixPath }}/api/configuration-service/(.*) /$1  break;
      proxy_pass         http://configuration-service:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location {{ .Values.prefixPath }}/api {
      rewrite {{ .Values.prefixPath }}/api/(.*) /$1 break;
      rewrite {{ .Values.prefixPath }}/api / break;
      proxy_pass http://api-service:8080;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
    }

  keptn-endpoints-pre-0-7.conf: |
    rewrite ^/project/(.*) /bridge/project/$1 permanent;
    rewrite ^/trace/(.*) /bridge/trace/$1 permanent;
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway-nginx
  labels:
    app.kubernetes.io/name: api-gateway-nginx
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    app.kubernetes.io/version: {{ .Values.apiGatewayNginx.image.tag }}
    helm.sh/chart: {{ include "control-plane.chart" . }}   
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: api-gateway-nginx
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: api-gateway-nginx
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
        app.kubernetes.io/component: {{ include "control-plane.name" . }}
        app.kubernetes.io/version: {{ .Values.apiGatewayNginx.image.tag }}
        helm.sh/chart: {{ include "control-plane.chart" . }}
      annotations: # add randomizer to restart the deployment if anything changes - see https://github.com/keptn/keptn/issues/3320
        rollme: {{ randAlphaNum 5 | quote }}
    spec:
      containers:
        - name: api-gateway-nginx
          image: {{ .Values.apiGatewayNginx.image.repository }}:{{ .Values.apiGatewayNginx.image.tag }}
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /nginx-health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          volumeMounts:
            - mountPath: /etc/nginx/nginx.conf # mount api-nginx-config volume to /etc/nginx
              subPath: nginx.conf
              readOnly: true
              name: api-nginx-config
            - mountPath: /etc/nginx/keptn-endpoints.conf # mount api-nginx-config volume to /etc/nginx
              subPath: keptn-endpoints.conf
              readOnly: true
              name: api-nginx-config
            - mountPath: /etc/nginx/keptn-endpoints-pre-0-7.conf # mount api-nginx-config volume to /etc/nginx
              subPath: keptn-endpoints-pre-0-7.conf
              readOnly: true
              name: api-nginx-config
            - mountPath: /etc/nginx/keptn-endpoints-pre-1-0.conf # mount api-nginx-config volume to /etc/nginx
              subPath: keptn-endpoints-pre-1-0.conf
              readOnly: true
              name: api-nginx-config
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "250m"
      volumes:
        - name: api-nginx-config
          configMap:
            name: api-nginx-config # place ConfigMap `api-nginx-config` on /etc/nginx
      serviceAccountName: keptn-default

---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-nginx
  labels:
    app.kubernetes.io/name: api-gateway-nginx
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    helm.sh/chart: {{ include "control-plane.chart" . }}       
spec:
  type: {{ .Values.apiGatewayNginx.type }}
  ports:
    - port: {{ .Values.apiGatewayNginx.port }}
      name: http
      targetPort: 8080
      {{ if eq .Values.apiGatewayNginx.type "NodePort" }}nodePort: {{ .Values.apiGatewayNginx.nodePort }}{{ end }}
      protocol: TCP
  selector:
    app.kubernetes.io/name: api-gateway-nginx
    app.kubernetes.io/instance: {{ .Release.Name }}
