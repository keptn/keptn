---
# remediation-service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: remediation-service
  labels:
    app.kubernetes.io/name: remediation-service
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    app.kubernetes.io/version: {{ .Values.remediationService.image.tag | default .Chart.AppVersion }}
    helm.sh/chart: {{ include "control-plane.chart" . }}           
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: remediation-service
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: remediation-service
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
        app.kubernetes.io/component: {{ include "control-plane.name" . }}
        app.kubernetes.io/version: {{ .Values.remediationService.image.tag | default .Chart.AppVersion }}
        helm.sh/chart: {{ include "control-plane.chart" . }}                   
    spec:
      securityContext:
        fsGroup: 65532
      containers:
      - name: remediation-service
        image: {{ .Values.remediationService.image.repository }}:{{ .Values.remediationService.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "1Gi"
            cpu: "200m"
        env:
          - name: EVENTBROKER
            value: 'http://localhost:8081/event'
          - name: CONFIGURATION_SERVICE
            value: 'http://configuration-service:8080'
          - name: ENVIRONMENT
            value: 'production'
        securityContext:
          runAsNonRoot: true
          runAsUser: 65532
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      - name: distributor
        image: {{ .Values.distributor.image.repository }}:{{ .Values.distributor.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        {{- include "control-plane.dist.livenessProbe" . | nindent 8 }}
        {{- include "control-plane.dist.readinessProbe" . | nindent 8 }}
        ports:
          - containerPort: 8080
        {{- include "keptn.distributor.resources" . | nindent 8 }}
        env:
          - name: PUBSUB_URL
            value: 'nats://keptn-nats-cluster'
          - name: PUBSUB_TOPIC
            value: 'sh.keptn.event.get-action.triggered'
          - name: PUBSUB_RECIPIENT
            value: '127.0.0.1'
        {{- include "control-plane.dist.common.env.vars" . | nindent 10 }}
        securityContext:
          runAsNonRoot: true
          runAsUser: 65532
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      serviceAccountName: keptn-default
---
apiVersion: v1
kind: Service
metadata:
  name: remediation-service
  labels:
    app.kubernetes.io/name: remediation-service
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    helm.sh/chart: {{ include "control-plane.chart" . }}               
spec:
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app.kubernetes.io/name: remediation-service
    app.kubernetes.io/instance: {{ .Release.Name }}

