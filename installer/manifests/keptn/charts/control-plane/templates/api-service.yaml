apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-service
  labels:
    {{ include "control-plane.baseLabels" . | indent 4 }}
    app.kubernetes.io/name: api-service
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    app.kubernetes.io/version: {{ .Values.apiService.image.tag | default .Chart.AppVersion }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: api-service
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: 1
  {{- include "control-plane.common.update-strategy" . | nindent 2 }}
  template:
    metadata:
      labels:
        {{ include "control-plane.baseLabels" . | indent 8 }}
        app.kubernetes.io/name: api-service
        app.kubernetes.io/component: {{ include "control-plane.name" . }}
        app.kubernetes.io/version: {{ .Values.apiService.image.tag | default .Chart.AppVersion }}
    spec:
      {{- include "control-plane.common.pod-security-context" . | nindent 6 }}
      terminationGracePeriodSeconds: {{ .Values.apiService.gracePeriod | default 120 }}
      containers:
        - name: api-service
          image: {{ .Values.apiService.image.repository }}:{{ .Values.apiService.image.tag | default .Chart.AppVersion }}
          {{- $prestop := .Values.apiService.preStopHookTime | default 90 | quote -}}
          {{- include "control-plane.prestop" $prestop | nindent 10 }}
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "32Mi"
              cpu: "50m"
            limits:
              memory: "64Mi"
              cpu: "100m"
          env:
            - name: PREFIX_PATH
              value: "{{ .Values.prefixPath }}"
            - name: EVENTBROKER_URI
              value: http://localhost:8081/event
            - name: DATASTORE_URI
              value: mongodb-datastore:8080
            - name: CONFIGURATION_URI
              value: configuration-service:8080
            - name: SECRET_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ default "keptn-api-token" .Values.apiService.tokenSecretName }}
                  key: keptn-api-token
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: AUTOMATIC_PROVISIONING_URL
              value: {{ (.Values.features).automaticProvisioningURL | default "" }}
            - name: MAX_AUTH_ENABLED
              value: {{ (.Values.apiService.maxAuth).enabled | default true | quote }}
            - name: MAX_AUTH_REQUESTS_PER_SECOND
              value: '{{ (.Values.apiService.maxAuth).requestsPerSecond | default "1.0"}}'
            - name: MAX_AUTH_REQUESTS_BURST
              value: '{{ (.Values.apiService.maxAuth).requestBurst | default "2"}}'
            - name: LOG_LEVEL
              value: {{ .Values.logLevel | default "info" }}
          {{- include "control-plane.common.container-security-context" . | nindent 10 }}
        - name: distributor
          image: {{ .Values.distributor.image.repository }}:{{ .Values.distributor.image.tag | default .Chart.AppVersion }}
          {{- include "control-plane.dist.livenessProbe" . | nindent 10 }}
          {{- include "control-plane.dist.readinessProbe" . | nindent 10 }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          {{- include "keptn.distributor.resources" . | nindent 10 }}
          env:
          {{- include "control-plane.dist.common.env.vars" . | nindent 12 }}
          {{- include "control-plane.common.container-security-context" . | nindent 10 }}
      serviceAccountName: keptn-api-service
      {{- include "keptn.nodeSelector" (dict "value" .Values.apiService.nodeSelector "default" .Values.common.nodeSelector "indent" 6 "context" . )}}
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  labels:
    {{ include "control-plane.baseLabels" . | indent 4 }}
    app.kubernetes.io/name: api-service
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    app.kubernetes.io/version: {{ .Values.apiService.image.tag | default .Chart.AppVersion }}
spec:
  ports:
    - port: 8080
      name: http
      targetPort: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: api-service
    app.kubernetes.io/instance: {{ .Release.Name }}
