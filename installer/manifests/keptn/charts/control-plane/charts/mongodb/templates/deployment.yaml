apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "mongodb.name" . }}
    app.kubernetes.io/version: "{{ .Values.image.tag }}"
    helm.sh/chart: {{ include "mongodb.chart" . }}
spec:
  replicas: 1
  selector:
    matchLabels:      
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/instance: {{ .Release.Name }}      
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
        app.kubernetes.io/component: {{ include "mongodb.name" . }}
        app.kubernetes.io/version: "{{ .Values.image.tag }}"
        helm.sh/chart: {{ include "mongodb.chart" . }}
    spec:
      serviceAccountName: keptn-default
      securityContext:
        fsGroup: 184
      containers:
        - image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          name: mongodb
          env:
            - name: MONGODB_DATABASE
              value: "keptn"
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: user
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                    name: mongodb-credentials
                    key: password
            - name: MONGODB_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                    name: mongodb-credentials
                    key: admin_password
          ports:
            - containerPort: 27017
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "300Mi"
              cpu: "100m"
          volumeMounts:
            - mountPath: /var/lib/mongodb/data
              name: mongodata
      restartPolicy: Always
      volumes:
        - name: mongodata
          persistentVolumeClaim:
            claimName: mongodata
