{{- $prefixPathTrimmed := trimPrefix "/" .Values.prefixPath  }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-nginx-config
  labels: {{- include "keptn.common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/name: api-gateway-nginx
data:
  nginx.conf: |
    worker_processes  3;
    pid /tmp/nginx.pid;
    error_log /dev/stdout info;
    events {
      worker_connections  10240;
    }

    http {
      log_format  main
              'remote_addr:$remote_addr\t'
              'time_local:$time_local\t'
              'method:$request_method\t'
              'uri:$request_uri\t'
              'host:$host\t'
              'status:$status\t'
              'bytes_sent:$body_bytes_sent\t'
              'referer:$http_referer\t'
              'useragent:$http_user_agent\t'
              'forwardedfor:$http_x_forwarded_for\t'
              'request_time:$request_time';
      access_log /dev/stdout;
      # rewrite_log on;
      absolute_redirect off;

      # remove nginx version
      server_tokens off;

      # https://www.nginx.com/blog/websocket-nginx/
      map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
      }

      map $http_x_forwarded_proto $forward_proto {
        default $scheme;
        https https;
      }

      server {
          listen       8080;
          server_name  _;

          {{- if .Values.apiGatewayNginx.clientMaxBodySize }}
            client_max_body_size {{ .Values.apiGatewayNginx.clientMaxBodySize }};
          {{- end }}

          include /etc/nginx/keptn-endpoints-pre-0-7.conf;
          include /etc/nginx/keptn-endpoints.conf;
      }
    }
  keptn-endpoints.conf: |
    rewrite ^/{{ $prefixPathTrimmed }}$ {{ .Values.prefixPath }}/bridge/ permanent;
    rewrite ^{{ .Values.prefixPath }}/api$ {{ .Values.prefixPath }}/api/swagger-ui/ permanent;

    # special configuration for /v1/auth to always use POST requests
    location {{ .Values.prefixPath }}/api/v1/auth {
      rewrite {{ .Values.prefixPath }}/api/v1/auth /v1/auth break;

      proxy_method POST;
      proxy_pass_request_body off;
      proxy_pass http://api-service:8080;
      proxy_http_version 1.1;
      proxy_pass_request_headers on; # only pass request headers to this service
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location {{ .Values.prefixPath }}/bridge {
      rewrite {{ .Values.prefixPath }}/bridge(/.*) $1 break;
      proxy_pass http://bridge:8080;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $forward_proto;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
      proxy_buffer_size 128k;
      proxy_buffers 4 256k;
      proxy_busy_buffers_size 256k;
    }

    location @error401 {
      return 302 /api/v1/auth;
    }

    # health check
    location /nginx-health {
        access_log off;
        return 200 "OK\n";
    }

    location {{ .Values.prefixPath }}/api/mongodb-datastore/swagger-ui/swagger.yaml {
     # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
     # the access is denied) before we store the file
     # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
      rewrite {{ .Values.prefixPath }}/api/mongodb-datastore/(.*) /$1  break;
      proxy_pass         http://mongodb-datastore:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # block writing calls to /api/mongodb-datastore/event
    location = {{ .Values.prefixPath }}/api/mongodb-datastore/event {
      limit_except GET HEAD OPTIONS {
        deny all;
      }
      auth_request               /api/v1/auth;
      rewrite {{ .Values.prefixPath }}/api/mongodb-datastore/(.*) /$1  break;
      proxy_pass         http://mongodb-datastore:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # block all calls to /api/mongodb-datastore/health
    location = {{ .Values.prefixPath }}/api/mongodb-datastore/health {
      deny all;
    }

    location {{ .Values.prefixPath }}/api/mongodb-datastore {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
      auth_request               /api/v1/auth;
      error_page 401 = @error401;

      rewrite {{ .Values.prefixPath }}/api/mongodb-datastore/(.*) /$1  break;
      proxy_pass         http://mongodb-datastore:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location {{ .Values.prefixPath }}/api/controlPlane/swagger-ui/swagger.yaml {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.

      rewrite {{ .Values.prefixPath }}/api/controlPlane/(.*) /$1  break;
      proxy_pass         http://shipyard-controller:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # block DELETE calls to /api/controlplane/v1/log
    location {{ .Values.prefixPath }}/api/controlPlane/v1/log {
      limit_except GET POST PUT PATCH OPTIONS HEAD {
        deny all;
      }
      auth_request               /api/v1/auth;

      rewrite {{ .Values.prefixPath }}/api/controlPlane/(.*) /$1  break;
      proxy_pass         http://shipyard-controller:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location  {{ .Values.prefixPath }}/api/controlPlane {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
      auth_request               /api/v1/auth;

      rewrite {{ .Values.prefixPath }}/api/controlPlane/(.*) /$1  break;
      proxy_pass         http://shipyard-controller:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      error_page 401 = @error401;
    }

    location {{ .Values.prefixPath }}/api/secrets/swagger-ui/swagger.yaml {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.

      rewrite {{ .Values.prefixPath }}/api/secrets/(.*) /$1  break;
      proxy_pass         http://secret-service:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location  {{ .Values.prefixPath }}/api/secrets/ {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
      auth_request               /api/v1/auth;

      rewrite {{ .Values.prefixPath }}/api/secrets/(.*) /$1  break;
      proxy_pass         http://secret-service:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      error_page 401 = @error401;
    }
{{- if .Values.statisticsService.enabled }}
    location {{ .Values.prefixPath }}/api/statistics/swagger-ui/swagger.yaml {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.

      rewrite {{ .Values.prefixPath }}/api/statistics/(.*) /$1  break;
      proxy_pass         http://statistics-service:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # block all calls to /api/statistics/v1/event
    location ~* {{ .Values.prefixPath }}/api/statistics/v1/event {
      deny all;
    }

    location  {{ .Values.prefixPath }}/api/statistics {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
      auth_request               /api/v1/auth;

      rewrite {{ .Values.prefixPath }}/api/statistics/(.*) /$1  break;
      proxy_pass         http://statistics-service:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      error_page 401 = @error401;
    }
{{- end }}

    location {{ .Values.prefixPath }}/api/resource-service/swagger-ui/swagger.yaml {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.

      rewrite {{ .Values.prefixPath }}/api/resource-service/(.*) /$1  break;
      proxy_pass         http://resource-service:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # block /api/resource-service/v1/project/*
    location ~* {{ .Values.prefixPath }}/api/resource-service/v1/project/([^/]*)/service/([^/]*)/resource/([^/]*)$ {
      deny all;
    }

    # block /api/resource-service/v1/project/*
    location ~* {{ .Values.prefixPath }}/api/resource-service/v1/project/([^/]*)/service/([^/]*)/resource$ {
      deny all;
    }

    # block all calls to /project/*/stage/*/service/*
    location ~* {{ .Values.prefixPath }}/api/resource-service/v1/project/([^/]*)/stage/([^/]*)/service/([^/]*)$ {
      deny all;
    }

    # block all calls to /project/*/stage/*/service
    location ~* {{ .Values.prefixPath }}/api/resource-service/v1/project/([^/]*)/stage/([^/]*)/service$ {
      deny all;
    }

    # block all calls to /project/*/stage/*
    location ~* {{ .Values.prefixPath }}/api/resource-service/v1/project/([^/]*)/stage/([^/]*)$ {
      deny all;
    }

    # block all calls to /project/*/stage
    location ~* {{ .Values.prefixPath }}/api/resource-service/v1/project/([^/]*)/stage$ {
      deny all;
    }

    # block all calls to /project/*
    location ~* {{ .Values.prefixPath }}/api/resource-service/v1/project/([^/]*)$ {
      deny all;
    }

    # block all calls to /project
    location = {{ .Values.prefixPath }}/api/resource-service/v1/project {
      deny all;
    }

    location {{ .Values.prefixPath }}/api/resource-service/  {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
      auth_request               /api/v1/auth;

      rewrite {{ .Values.prefixPath }}/api/resource-service/(.*) /$1  break;
      proxy_pass         http://resource-service:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      error_page 401 = @error401;
    }

    location {{ .Values.prefixPath }}/api {
      rewrite {{ .Values.prefixPath }}/api/(.*) /$1 break;
      rewrite {{ .Values.prefixPath }}/api / break;
      proxy_pass http://api-service:8080;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
    }

  keptn-endpoints-pre-0-7.conf: |
    rewrite ^/project/(.*) /bridge/project/$1 permanent;
    rewrite ^/trace/(.*) /bridge/trace/$1 permanent;
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway-nginx
  labels: {{- include "keptn.common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/name: api-gateway-nginx
spec:
  selector:
    matchLabels: {{- include "keptn.common.labels.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/name: api-gateway-nginx
  replicas: 1
  {{- include "keptn.common.update-strategy" . | nindent 2 }}
  template:
    metadata:
      labels: {{- include "keptn.common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/name: api-gateway-nginx
      annotations: # add randomizer to restart the deployment if anything changes - see https://github.com/keptn/keptn/issues/3320
        rollme: {{ randAlphaNum 5 | quote }}
    spec:
      {{- include "keptn.apiGatewayNginx.pod-security-context" . | nindent 6 }}
      terminationGracePeriodSeconds: {{ .Values.apiGatewayNginx.gracePeriod | default 60 }}
      containers:
        - name: api-gateway-nginx
          image: {{ include "keptn.common.images.image" ( dict "imageRoot" .Values.apiGatewayNginx.image "global" .Values.apiGatewayNginx "defaultTag" .Values.apiGatewayNginx.image.tag) | quote }}
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 20; /usr/local/openresty/nginx/sbin/nginx -c /etc/nginx/nginx.conf -s quit; while pgrep -x nginx; do sleep 1; done"]
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /nginx-health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /nginx-health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          volumeMounts:
            - mountPath: /etc/nginx/nginx.conf # mount api-nginx-config volume to /etc/nginx
              subPath: nginx.conf
              readOnly: true
              name: api-nginx-config
            - mountPath: /etc/nginx/keptn-endpoints.conf # mount api-nginx-config volume to /etc/nginx
              subPath: keptn-endpoints.conf
              readOnly: true
              name: api-nginx-config
            - mountPath: /etc/nginx/keptn-endpoints-pre-0-7.conf # mount api-nginx-config volume to /etc/nginx
              subPath: keptn-endpoints-pre-0-7.conf
              readOnly: true
              name: api-nginx-config
            - mountPath: /etc/nginx/keptn-endpoints-pre-1-0.conf # mount api-nginx-config volume to /etc/nginx
              subPath: keptn-endpoints-pre-1-0.conf
              readOnly: true
              name: api-nginx-config
            {{- if .Values.apiGatewayNginx.extraVolumeMounts }}
            {{- include "keptn.common.tplvalues.render" ( dict "value" .Values.apiGatewayNginx.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.apiGatewayNginx.resources | nindent 12 }}
          {{- include "keptn.apiGatewayNginx.container-security-context" . | nindent 10 }}
        {{- with .Values.apiGatewayNginx.sidecars }}
        {{- include "keptn.common.tplvalues.render" ( dict "value" . "context" $ ) | nindent 8 }}
        {{- end }}
      volumes:
        - name: api-nginx-config
          configMap:
            name: api-nginx-config # place ConfigMap `api-nginx-config` on /etc/nginx
        {{- if .Values.apiGatewayNginx.extraVolumes }}
        {{- include "keptn.common.tplvalues.render" ( dict "value" .Values.apiGatewayNginx.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
      serviceAccountName: keptn-default
      {{- include "keptn.nodeSelector" (dict "value" .Values.apiGatewayNginx.nodeSelector "default" .Values.nodeSelector "indent" 6 "context" . )}}
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-nginx
  labels: {{- include "keptn.common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/name: api-gateway-nginx
spec:
  type: {{ .Values.apiGatewayNginx.type }}
  ports:
    - port: {{ .Values.apiGatewayNginx.port }}
      name: http
      targetPort: {{ .Values.apiGatewayNginx.targetPort | default 8080 }}
      {{- if eq .Values.apiGatewayNginx.type "NodePort" }}
      nodePort: {{ .Values.apiGatewayNginx.nodePort }}
      {{- end }}
      protocol: TCP
  selector: {{- include "keptn.common.labels.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/name: api-gateway-nginx
