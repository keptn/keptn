apiVersion: v1
kind: ConfigMap
metadata:
  name: secret-service-config
  labels: {{- include "keptn.common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/name: secret-service
data:
  scopes.yaml: |
    Scopes:
      keptn-default:
        Capabilities:
          keptn-secrets-default-read:
            Permissions:
              - get
      keptn-webhook-service:
        Capabilities:
          keptn-webhook-svc-read:
            Permissions:
              - get
      dynatrace-service:
        Capabilities:
          keptn-dynatrace-svc-read:
            Permissions:
              - get
      keptn-prometheus-service:
        Capabilities:
          keptn-prometheus-svc-read:
            Permissions:
              - get
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: secret-service
  labels: {{- include "keptn.common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/name: secret-service
spec:
  selector:
    matchLabels: {{- include "keptn.common.labels.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/name: secret-service
  replicas: 1
  {{- include "keptn.common.update-strategy" . | nindent 2 }}
  template:
    metadata:
      labels: {{- include "keptn.common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/name: secret-service
    spec:
      {{- include "keptn.common.pod-security-context" . | nindent 6 }}
      serviceAccountName: keptn-secret-service
      terminationGracePeriodSeconds: {{ .Values.secretService.gracePeriod | default 60 }}
      initContainers:
        - name: wait-for-nats
          image: busybox:1.35.0
          env:
          - name: "ENDPOINT"
            value: "keptn-nats"
          command: ['sh', '-c', 'until nslookup $ENDPOINT; do echo waiting for $ENDPOINT; sleep 2; done;']
        - name: wait-for-keptn-mongo
          image: busybox:1.35.0
          env:
          - name: "ENDPOINT"
            value: "keptn-mongo"
          command: ['sh', '-c', 'until nslookup $ENDPOINT; do echo waiting for $ENDPOINT; sleep 2; done;']
        - name: wait-for-mongodb-datastore
          image: busybox:1.35.0
          env:
          - name: "ENDPOINT"
            value: "mongodb-datastore"
          command: ['sh', '-c', 'until nslookup $ENDPOINT; do echo waiting for $ENDPOINT; sleep 2; done;']
        - name: wait-for-shipyard-controller
          image: busybox:1.35.0
          env:
          - name: "ENDPOINT"
            value: "shipyard-controller"
          command: ['sh', '-c', 'until nslookup $ENDPOINT; do echo waiting for $ENDPOINT; sleep 2; done;']
      containers:
        - name: secret-service
          image: {{ include "keptn.common.images.image" ( dict "imageRoot" .Values.secretService.image "global" .Values.global.keptn "defaultTag" .Chart.AppVersion) | quote }}
          {{- $prestop := .Values.secretService.preStopHookTime | default 20 | quote -}}
          {{- include "keptn.prestop" $prestop | nindent 10 }}
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /v1/secret
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LOG_LEVEL
              value: {{ .Values.logLevel | default "info" }}
          ports:
            - containerPort: 8080
          resources:
            {{- toYaml .Values.secretService.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /data
              name: secret-service-configmap-volume
            {{- if .Values.secretService.extraVolumeMounts }}
            {{- include "keptn.common.tplvalues.render" ( dict "value" .Values.secretService.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
          {{- include "keptn.common.container-security-context" . | nindent 10 }}
        {{- with .Values.secretService.sidecars }}
        {{- include "keptn.common.tplvalues.render" ( dict "value" . "context" $ ) | nindent 8 }}
        {{- end }}
      volumes:
        - name: secret-service-configmap-volume
          configMap:
            name: secret-service-config
        {{- if .Values.secretService.extraVolumes }}
        {{- include "keptn.common.tplvalues.render" ( dict "value" .Values.secretService.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
      {{- include "keptn.nodeSelector" (dict "value" .Values.secretService.nodeSelector "default" .Values.nodeSelector "indent" 6 "context" . )}}
      {{- include "keptn.tolerations" (dict "value" .Values.secretService.tolerations "default" .Values.tolerations "indent" 6 "context" . )}}
      {{- if or .Values.secretService.affinity .Values.affinity }}
      {{- include "keptn.affinity" (dict "value" .Values.secretService.affinity "default" .Values.affinity "indent" 6 "context" . )}}
      {{- else }}
      affinity:
        {{- include "keptn.affinities.pods" (dict "value" .Values.secretService.podAffinity "default" .Values.podAffinity "component" "secret-service" "context" . ) | indent 8 }}
        {{- include "keptn.affinities.nodes" (dict "value" .Values.secretService.nodeAffinityPreset "default" .Values.nodeAffinityPreset "component" "secret-service" "context" . ) | indent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: secret-service
  labels: {{- include "keptn.common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/name: secret-service
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector: {{- include "keptn.common.labels.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/name: secret-service
