{{- if .Values.statisticsService.enabled }}
# statistics-service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: statistics-service
  labels: {{- include "keptn.common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/name: statistics-service
spec:
  selector:
    matchLabels: {{- include "keptn.common.labels.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/name: statistics-service
  replicas: 1
  {{- include "keptn.common.update-strategy" . | nindent 2 }}
  template:
    metadata:
      labels: {{- include "keptn.common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/name: statistics-service
    spec:
      {{- include "keptn.common.pod-security-context" . | nindent 6 }}
      serviceAccountName: keptn-default
      initContainers:
        - name: wait-for-nats
          image: busybox:1.35.0
          env:
          - name: "ENDPOINT"
            value: "keptn-nats"
          command: ['sh', '-c', 'until nslookup $ENDPOINT; do echo waiting for $ENDPOINT; sleep 2; done;']
        - name: wait-for-keptn-mongo
          image: busybox:1.35.0
          env:
          - name: "ENDPOINT"
            value: "keptn-mongo"
          command: ['sh', '-c', 'until nslookup $ENDPOINT; do echo waiting for $ENDPOINT; sleep 2; done;']
        - name: wait-for-mongodb-datastore
          image: busybox:1.35.0
          env:
          - name: "ENDPOINT"
            value: "mongodb-datastore"
          command: ['sh', '-c', 'until nslookup $ENDPOINT; do echo waiting for $ENDPOINT; sleep 2; done;']
        - name: wait-for-shipyard-controller
          image: busybox:1.35.0
          env:
          - name: "ENDPOINT"
            value: "shipyard-controller"
          command: ['sh', '-c', 'until nslookup $ENDPOINT; do echo waiting for $ENDPOINT; sleep 2; done;']
      containers:
        - name: statistics-service
          image: {{ include "keptn.common.images.image" ( dict "imageRoot" .Values.statisticsService.image "global" .Values.global.keptn "defaultTag" .Chart.AppVersion) | quote }}
          {{- $prestop := .Values.statisticsService.preStopHookTime | default 20 | quote -}}
          {{- include "keptn.prestop" $prestop | nindent 10 }}
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
          imagePullPolicy: IfNotPresent
          env:
            - name: AGGREGATION_INTERVAL_SECONDS
              value: '1800'
            - name: NEXT_GEN_EVENTS
              value: 'true'
            - name: MONGODB_HOST
              value: '{{ .Release.Name }}-{{ .Values.mongo.service.nameOverride }}:{{ .Values.mongo.service.ports.mongodb }}'
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: mongodb-user
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: mongodb-passwords
            - name: MONGODB_DATABASE
              value: {{ .Values.mongo.auth.database | default "keptn" }}
            - name: MONGODB_EXTERNAL_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: external_connection_string
                  optional: true
            - name: LOG_LEVEL
              value: {{ .Values.logLevel | default "info" }}
          ports:
            - containerPort: 8080
          resources:
            {{- toYaml .Values.statisticsService.resources | nindent 12 }}
          {{- include "keptn.common.container-security-context" . | nindent 10 }}
          {{- if .Values.statisticsService.extraVolumeMounts }}
          volumeMounts:
          {{- include "keptn.common.tplvalues.render" ( dict "value" .Values.statisticsService.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
        - name: distributor
          image: {{ include "keptn.common.images.image" ( dict "imageRoot" .Values.distributor.image "global" .Values.global.keptn "defaultTag" .Chart.AppVersion) | quote }}
          {{- include "keptn.dist.livenessProbe" . | nindent 10 }}
          {{- include "keptn.dist.readinessProbe" . | nindent 10 }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          resources:
            {{- toYaml .Values.distributor.resources | nindent 12 }}
          env:
            - name: PUBSUB_TOPIC
              value: 'sh.keptn.>'
            - name: PUBSUB_RECIPIENT
              value: '127.0.0.1'
            - name: PUBSUB_RECIPIENT_PATH
              value: '/v1/event'
          {{- include "keptn.dist.common.env.vars" . | nindent 12 }}
          {{- include "keptn.common.container-security-context" . | nindent 10 }}
        {{- with .Values.statisticsService.sidecars }}
        {{- include "keptn.common.tplvalues.render" ( dict "value" . "context" $ ) | nindent 8 }}
        {{- end }}
      {{- if .Values.statisticsService.extraVolumes }}
      volumes:
      {{- include "keptn.common.tplvalues.render" ( dict "value" .Values.statisticsService.extraVolumes "context" $) | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.statisticsService.gracePeriod | default 60 }}
      {{- include "keptn.nodeSelector" (dict "value" .Values.statisticsService.nodeSelector "default" .Values.nodeSelector "indent" 6 "context" . )}}
      {{- include "keptn.tolerations" (dict "value" .Values.statisticsService.tolerations "default" .Values.tolerations "indent" 6 "context" . )}}
      {{- if or .Values.statisticsService.affinity .Values.affinity }}
      {{- include "keptn.affinity" (dict "value" .Values.statisticsService.affinity "default" .Values.affinity "indent" 6 "context" . )}}
      {{- else }}
      affinity:
        {{- include "keptn.affinities.pods" (dict "value" .Values.statisticsService.podAffinity "default" .Values.podAffinity "component" "statistics-service" "context" . ) | indent 8 }}
        {{- include "keptn.affinities.nodes" (dict "value" .Values.statisticsService.nodeAffinityPreset "default" .Values.nodeAffinityPreset "component" "statistics-service" "context" . ) | indent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: statistics-service
  labels: {{- include "keptn.common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/name: statistics-service
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector: {{- include "keptn.common.labels.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/name: statistics-service
{{- end }}
