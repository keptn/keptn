---
# remediation-service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: remediation-service
  labels:
    app.kubernetes.io/name: remediation-service
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "keptn.name" . }}
    app.kubernetes.io/version: {{ include "service.tag" ( dict "imageRoot" .Values.remediationService.image "global" .Values.global.keptn "defaultTag" .Chart.AppVersion) }}
    helm.sh/chart: {{ include "keptn.chart" . }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: remediation-service
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: 1
  {{- include "keptn.common.update-strategy" . | nindent 2 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: remediation-service
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
        app.kubernetes.io/component: {{ include "keptn.name" . }}
        app.kubernetes.io/version: {{ include "service.tag" ( dict "imageRoot" .Values.remediationService.image "global" .Values.global.keptn "defaultTag" .Chart.AppVersion) }}
        helm.sh/chart: {{ include "keptn.chart" . }}
    spec:
      {{- include "keptn.common.pod-security-context" . | nindent 6 }}
      containers:
        - name: remediation-service
          image: {{ include "service.image" ( dict "imageRoot" .Values.remediationService.image "global" .Values.global.keptn "defaultTag" .Chart.AppVersion) }}
          imagePullPolicy: {{ .Values.remediationService.imagePullPolicy | default "IfNotPresent" }}
          {{- $prestop := .Values.remediationService.preStopHookTime | default 90 | quote -}}
          {{- include "keptn.prestop" $prestop | nindent 10 }}
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          ports:
            - containerPort: 8080
          resources:
            {{- toYaml .Values.remediationService.resources | nindent 12 }}
          env:
            - name: EVENTBROKER
              value: 'http://localhost:8081/event'
            - name: CONFIGURATION_SERVICE
              value: 'http://configuration-service:8080'
            - name: ENVIRONMENT
              value: 'production'
          {{- include "keptn.common.container-security-context" . | nindent 10 }}
        - name: distributor
          image: {{ include "service.image" ( dict "imageRoot" .Values.distributor.image "global" .Values.global.keptn "defaultTag" .Chart.AppVersion) }}
          imagePullPolicy: {{ .Values.distributor.imagePullPolicy | default "IfNotPresent" }}
          {{- include "keptn.dist.livenessProbe" . | nindent 10 }}
          {{- include "keptn.dist.readinessProbe" . | nindent 10 }}
          ports:
            - containerPort: 8080
          resources:
            {{- toYaml .Values.distributor.resources | nindent 12 }}
          env:
            - name: PUBSUB_TOPIC
              value: 'sh.keptn.event.get-action.triggered'
            - name: PUBSUB_RECIPIENT
              value: '127.0.0.1'
          {{- include "keptn.dist.common.env.vars" . | nindent 12 }}
          {{- include "keptn.common.container-security-context" . | nindent 10 }}
      serviceAccountName: keptn-default
      terminationGracePeriodSeconds: {{ .Values.remediationService.gracePeriod | default 120 }}
      {{- include "keptn.nodeSelector" (dict "value" .Values.remediationService.nodeSelector "default" .Values.common.nodeSelector "indent" 6 "context" . )}}
---
apiVersion: v1
kind: Service
metadata:
  name: remediation-service
  labels:
    app.kubernetes.io/name: remediation-service
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "keptn.name" . }}
    helm.sh/chart: {{ include "keptn.chart" . }}
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: remediation-service
    app.kubernetes.io/instance: {{ .Release.Name }}

