apiVersion: v1
kind: Service
metadata:
  name: resource-service
  labels: {{- include "keptn.common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/name: resource-service
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector: {{- include "keptn.common.labels.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/name: resource-service

---
# resource-service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resource-service
  labels: {{- include "keptn.common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/name: resource-service
spec:
  selector:
    matchLabels: {{- include "keptn.common.labels.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/name: resource-service
  replicas: {{ .Values.resourceService.replicas }}
  {{- include "keptn.common.update-strategy" . | nindent 2 }}
  template:
    metadata:
      labels: {{- include "keptn.common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/name: resource-service
    spec:
      securityContext:
        fsGroup: {{ .Values.resourceService.fsGroup | default 65532 }}
        {{- if ge .Capabilities.KubeVersion.Minor "21" }}
        seccompProfile:
          type: RuntimeDefault
        {{- end }}
      terminationGracePeriodSeconds: {{ .Values.resourceService.gracePeriod | default 60 }}
      initContainers:
        {{- include "keptn.initContainers.wait-for-nats" . | nindent 8 }}
        {{- include "keptn.initContainers.wait-for-keptn-mongo" . | nindent 8 }}
        {{- include "keptn.initContainers.wait-for-mongodb-datastore" . | nindent 8 }}
        {{- include "keptn.initContainers.wait-for-shipyard-controller" . | nindent 8 }}
      containers:
        - name: resource-service
          image: {{ include "keptn.common.images.image" ( dict "imageRoot" .Values.resourceService.image "global" .Values.global.keptn "defaultTag" .Chart.AppVersion) | quote }}
          {{- $prestop := .Values.resourceService.preStopHookTime | default 20 | quote -}}
          {{- include "keptn.prestop" $prestop | nindent 10 }}
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
          imagePullPolicy: IfNotPresent
          env:
            - name: PREFIX_PATH
              value: "{{ .Values.prefixPath }}"
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LOG_LEVEL
              value: {{ .Values.logLevel | default "info" }}
            {{- range $key, $value := .Values.resourceService.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          ports:
            - containerPort: 8080
          resources:
            {{- toYaml .Values.resourceService.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /data/config
              name: resource-volume
          securityContext:
            runAsNonRoot: true
            runAsUser: {{ .Values.resourceService.fsGroup | default 65532 }}
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            privileged: false
            capabilities:
              drop:
                - ALL
          {{- if .Values.resourceService.extraVolumeMounts }}
          volumeMounts:
          {{- include "keptn.common.tplvalues.render" ( dict "value" .Values.resourceService.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
        {{- with .Values.resourceService.sidecars }}
        {{- include "keptn.common.tplvalues.render" ( dict "value" . "context" $ ) | nindent 8 }}
        {{- end }}
      volumes:
        - name: resource-volume
          emptyDir: {}
        {{- if .Values.resourceService.extraVolumes }}
        {{- include "keptn.common.tplvalues.render" ( dict "value" .Values.resourceService.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
      serviceAccountName: keptn-resource-service
      automountServiceAccountToken: true
      {{- include "keptn.nodeSelector" (dict "value" .Values.resourceService.nodeSelector "default" .Values.nodeSelector "indent" 6 "context" . )}}
      {{- include "keptn.tolerations" (dict "value" .Values.resourceService.tolerations "default" .Values.tolerations "indent" 6 "context" . )}}
      {{- if or .Values.resourceService.affinity .Values.affinity }}
      {{- include "keptn.affinity" (dict "value" .Values.resourceService.affinity "default" .Values.affinity "indent" 6 "context" . )}}
      {{- else }}
      affinity:
        {{- include "keptn.affinities.pods" (dict "value" .Values.resourceService.podAffinity "default" .Values.podAffinity "component" "resource-service" "context" . ) | indent 8 }}
        {{- include "keptn.affinities.nodes" (dict "value" .Values.resourceService.nodeAffinityPreset "default" .Values.nodeAffinityPreset "component" "resource-service" "context" . ) | indent 8 }}
      {{- end }}
