{{- $apiToken := (randAlphaNum 45) | b64enc | quote }}
{{- $apisecret := (lookup "v1" "Secret" .Release.Namespace "keptn-api-token") }}
{{- if $apisecret }}
{{- $apiToken = index $apisecret.data "keptn-api-token" }}
{{- end -}}

{{- $bridgePassword := (randAlphaNum 20) | b64enc | quote }}
{{- $bridgesecret := (lookup "v1" "Secret" .Release.Namespace "bridge-credentials") }}
{{- if $bridgesecret }}
  {{- $bridgePassword = index $bridgesecret.data "BASIC_AUTH_PASSWORD" }}
{{- end -}}

{{- $bridgeSessionSecret := (randAlphaNum 45) | b64enc | quote }}
{{- $bridgeDatabaseEncryptSecret := (randAlphaNum 32) | b64enc | quote }}
{{- $bridgeOAuth := (lookup "v1" "Secret" .Release.Namespace "bridge-oauth") }}
{{- if $bridgeOAuth }}
  {{- $bridgeSessionSecret = index $bridgeOAuth.data "session_secret" }}
  {{- $bridgeDatabaseEncryptSecret = index $bridgeOAuth.data "database_encrypt_secret" }}
{{- end -}}

{{- $bridgeOAuthMongo := (lookup "v1" "Secret" .Release.Namespace "bridge-oauth-mongodb-credentials") }}
{{- $bridgeMongoConnectionString := "" | b64enc | quote -}}
{{- if $bridgeOAuthMongo -}}
  {{- if index $bridgeOAuthMongo.data "external_connection_string" -}}
    {{- $bridgeMongoConnectionString = index $bridgeOAuthMongo.data "external_connection_string" -}}
  {{- end -}}
{{- end -}}

{{- if .Values.bridge.oauth.mongoConnectionString -}}
  {{- $bridgeMongoConnectionString = .Values.bridge.oauth.mongoConnectionString | b64enc | quote -}}
{{- end -}}

{{- if not .Values.apiService.tokenSecretName }}
---
apiVersion: v1
kind: Secret
metadata:
  name: keptn-api-token
  labels:
    app.kubernetes.io/name: keptn-api-token
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "keptn.name" . }}
    helm.sh/chart: {{ include "keptn.chart" . }}
type: Opaque
data:
  keptn-api-token: {{ $apiToken }}
{{- end }}
---
{{- if .Values.bridge.secret.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: bridge-credentials
  labels:
    app.kubernetes.io/name: bridge-credentials
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "keptn.name" . }}
    helm.sh/chart: {{ include "keptn.chart" . }}
type: Opaque
data:
  BASIC_AUTH_USERNAME: 'a2VwdG4='
  BASIC_AUTH_PASSWORD: {{ $bridgePassword }}
---
{{- end }}
apiVersion: v1
kind: Secret
metadata:
  name: bridge-oauth
  labels:
    app.kubernetes.io/name: bridge-oauth
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "keptn.name" . }}
    helm.sh/chart: {{ include "keptn.chart" . }}
type: Opaque
data:
  session_secret: {{ $bridgeSessionSecret }}
  database_encrypt_secret: {{ $bridgeDatabaseEncryptSecret }}
---
apiVersion: v1
kind: Secret
metadata:
  name: bridge-oauth-mongodb-credentials
  labels:
    app.kubernetes.io/name: bridge-oauth-mongodb-credentials
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "keptn.name" . }}
    helm.sh/chart: {{ include "keptn.chart" . }}
type: Opaque
data:
  external_connection_string: {{ $bridgeMongoConnectionString }}
---
# bridge
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bridge
  labels:
    app.kubernetes.io/name: bridge
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "keptn.name" . }}
    app.kubernetes.io/version: {{ .Values.bridge.image.tag | default .Chart.AppVersion }}
    helm.sh/chart: {{ include "keptn.chart" . }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: bridge
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bridge
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
        app.kubernetes.io/component: {{ include "keptn.name" . }}
        app.kubernetes.io/version: {{ .Values.bridge.image.tag | default .Chart.AppVersion }}
        helm.sh/chart: {{ include "keptn.chart" . }}
    spec:
      {{- include "keptn.bridge.pod-security-context" . | nindent 6 }}
      containers:
        - name: bridge
          image: {{ .Values.bridge.image.repository }}:{{ .Values.bridge.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: IfNotPresent
          env:
            - name: API_URL
              value: "http://api-gateway-nginx{{ .Values.prefixPath }}/api"
            - name: API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ default "keptn-api-token" .Values.apiService.tokenSecretName }}
                  key: keptn-api-token
            - name: CLI_DOWNLOAD_LINK
              value: "{{ .Values.bridge.cliDownloadLink | default (print "https://github.com/keptn/keptn/releases/tag/" .Chart.AppVersion) }}"
            - name: INTEGRATIONS_PAGE_LINK
              value: "{{ .Values.bridge.integrationsPageLink | default (print "https://get.keptn.sh/integrations.html") }}"
            - name: ENABLE_VERSION_CHECK
              value: "{{ .Values.bridge.versionCheck.enabled }}"
            - name: SHOW_API_TOKEN
              value: "{{ .Values.bridge.showApiToken.enabled }}"
            - name: KEPTN_INSTALLATION_TYPE
              value: "{{ .Values.bridge.installationType |default (print "QUALITY_GATES,CONTINUOUS_OPERATIONS") }}"
            - name: LOOK_AND_FEEL_URL
              value: "{{ .Values.bridge.lookAndFeelUrl |default (print "") }}"
            - name: PREFIX_PATH
              value: "{{ .Values.prefixPath }}"
            - name: OAUTH_ENABLED
              value: "{{ .Values.bridge.oauth.enabled }}"
            - name: OAUTH_DISCOVERY
              value: "{{ .Values.bridge.oauth.discovery }}"
            # Base URL e.g. https://example.com/
            - name: OAUTH_BASE_URL
              value: "{{ .Values.bridge.oauth.baseUrl }}"
            - name: OAUTH_CLIENT_ID
              value: "{{ .Values.bridge.oauth.clientID }}"
            - name: OAUTH_CLIENT_SECRET
              value: "{{ .Values.bridge.oauth.clientSecret }}"
            # Token algorithm which is used for the ID token e.g. "RS256"
            - name: OAUTH_ID_TOKEN_ALG
              value: "{{ .Values.bridge.oauth.IDTokenAlg }}"
            # Additional scopes that should be added to the authentication flow (e.g. "profile email"), separated by space.
            - name: OAUTH_SCOPE
              value: "{{ .Values.bridge.oauth.scope }}"
            # User identifier property inside the ID token e.g. "name" or "email"
            - name: OAUTH_NAME_PROPERTY
              value: "{{ .Values.bridge.oauth.userIdentifier }}"
            - name: SECURE_COOKIE
              value: "{{ .Values.bridge.oauth.secureCookie }}"
            # Session cookie timeout in minutes
            - name: SESSION_TIMEOUT_MIN
              value: "{{ .Values.bridge.oauth.sessionTimeoutMin}}"
            # Timeout of validation data (state, nonce, code verifier) during login
            - name: SESSION_VALIDATING_TIMEOUT_MIN
              value: "{{ .Values.bridge.oauth.sessionValidatingTimeoutMin}}"
            # Correlates to trust proxy number of hops as defined at http://expressjs.com/en/guide/behind-proxies.html
            - name: TRUST_PROXY
              value: "{{ .Values.bridge.oauth.trustProxy }}"
            - name: MONGODB_HOST
              value: '{{ .Release.Name }}-{{ .Values.mongo.service.nameOverride }}:{{ .Values.mongo.service.port }}'
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: mongodb-user
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: mongodb-passwords
            - name: MONGODB_DATABASE
              value: {{ .Values.mongo.auth.bridgeAuthDatabase | default "openid" }}
            - name: CONFIG_DIR
              value: "/config"
            - name: AUTOMATIC_PROVISIONING_MSG
              value: {{ .Values.bridge.automaticProvisioningMsg }}
            - name: AUTH_MSG
              value: {{ .Values.bridge.authMsg | default "" }}
            - name: RESOURCE_SERVICE_ENABLED
              value: {{ .Values.resourceService.enabled | quote }}
            - name: D3_HEATMAP_ENABLED
              value: {{ .Values.bridge.d3heatmap.enabled | default false | quote }}
            {{- range $key, $value := .Values.bridge.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          envFrom:
            - secretRef:
                name: bridge-credentials
                optional: true
          ports:
            - containerPort: 3000
          resources:
            {{- toYaml .Values.bridge.resources | nindent 12 }}
          volumeMounts:
            - name: assets
              mountPath: /usr/src/app/dist/assets/branding
            - name: bridge-oauth
              mountPath: /config/oauth
              readOnly: true
            - name: bridge-oauth-mongodb-credentials
              mountPath: /config/oauth_mongodb
        {{- include "keptn.bridge.container-security-context" . | nindent 10 }}
      serviceAccountName: keptn-default
      volumes:
        - emptyDir: {}
          name: assets
        - name: bridge-oauth
          secret:
            secretName: bridge-oauth
            defaultMode: 0400
        - name: bridge-oauth-mongodb-credentials
          secret:
            secretName: bridge-oauth-mongodb-credentials
            defaultMode: 0400
      {{- include "keptn.nodeSelector" (dict "value" .Values.bridge.nodeSelector "default" .Values.common.nodeSelector "indent" 6 "context" . )}}
