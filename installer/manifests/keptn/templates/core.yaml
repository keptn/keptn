{{- $apiToken := (randAlphaNum 45) | b64enc | quote }}
{{- $apisecret := (lookup "v1" "Secret" .Release.Namespace "keptn-api-token") }}
{{- if $apisecret }}
{{- $apiToken = index $apisecret.data "keptn-api-token" }}
{{- end -}}

{{- $bridgeUsername := default "keptn" .Values.bridge.basicAuthUsername | b64enc | quote }}
{{- $bridgePassword := (randAlphaNum 20) | b64enc | quote }}
{{- $bridgesecret := (lookup "v1" "Secret" .Release.Namespace "bridge-credentials") }}
{{- if $bridgesecret }}
  {{- $bridgeUsername = index $bridgesecret.data "BASIC_AUTH_USERNAME" }}
  {{- $bridgePassword = index $bridgesecret.data "BASIC_AUTH_PASSWORD" }}
{{- end -}}

{{- $bridgeSessionSecret := (randAlphaNum 45) | b64enc | quote }}
{{- $bridgeDatabaseEncryptSecret := (randAlphaNum 32) | b64enc | quote }}
{{- $bridgeOAuth := (lookup "v1" "Secret" .Release.Namespace "bridge-oauth") }}
{{- if $bridgeOAuth }}
  {{- $bridgeSessionSecret = index $bridgeOAuth.data "session_secret" }}
  {{- $bridgeDatabaseEncryptSecret = index $bridgeOAuth.data "database_encrypt_secret" }}
{{- end -}}

{{- $bridgeOAuthMongo := (lookup "v1" "Secret" .Release.Namespace "bridge-oauth-mongodb-credentials") }}
{{- $bridgeMongoConnectionString := "" | b64enc | quote -}}
{{- if $bridgeOAuthMongo -}}
  {{- if index $bridgeOAuthMongo.data "external_connection_string" -}}
    {{- $bridgeMongoConnectionString = index $bridgeOAuthMongo.data "external_connection_string" -}}
  {{- end -}}
{{- end -}}

{{- if .Values.bridge.oauth.mongoConnectionString -}}
  {{- $bridgeMongoConnectionString = .Values.bridge.oauth.mongoConnectionString | b64enc | quote -}}
{{- end -}}

{{- if not .Values.apiService.tokenSecretName }}
---
apiVersion: v1
kind: Secret
metadata:
  name: keptn-api-token
  labels: {{- include "keptn.common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/name: {{ include "keptn.name" . }}
type: Opaque
data:
  keptn-api-token: {{ $apiToken }}
{{- end }}
---
{{- if .Values.bridge.secret.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: bridge-credentials
  labels: {{- include "keptn.common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/name: bridge
type: Opaque
data:
  BASIC_AUTH_USERNAME: {{ $bridgeUsername }}
  BASIC_AUTH_PASSWORD: {{ $bridgePassword }}
---
{{- end }}
apiVersion: v1
kind: Secret
metadata:
  name: bridge-oauth
  labels: {{- include "keptn.common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/name: bridge
type: Opaque
data:
  session_secret: {{ $bridgeSessionSecret }}
  database_encrypt_secret: {{ $bridgeDatabaseEncryptSecret }}
  client_secret: {{ .Values.bridge.oauth.clientSecret | default "" | b64enc | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: bridge-oauth-mongodb-credentials
  labels: {{- include "keptn.common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/name: bridge
type: Opaque
data:
  external_connection_string: {{ $bridgeMongoConnectionString }}
---
# bridge
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bridge
  labels: {{- include "keptn.common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/name: bridge
spec:
  selector:
    matchLabels: {{- include "keptn.common.labels.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/name: bridge
  replicas: 1
  template:
    metadata:
      labels: {{- include "keptn.common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/name: bridge
    spec:
      {{- include "keptn.bridge.pod-security-context" . | nindent 6 }}
      {{- include "keptn.imagePullSecrets" . | nindent 6 }}
      initContainers:
        {{- include "keptn.initContainers.wait-for-resource-service" . | nindent 8 }}
        {{- include "keptn.initContainers.wait-for-mongodb-datastore" . | nindent 8 }}
        {{- include "keptn.initContainers.wait-for-shipyard-controller" . | nindent 8 }}
      containers:
        - name: bridge
          image: {{ include "keptn.common.images.image" ( dict "imageRoot" .Values.bridge.image "global" .Values.global.keptn "defaultTag" .Chart.AppVersion) | quote }}
          imagePullPolicy: IfNotPresent
          env:
            - name: API_URL
              value: "http://api-gateway-nginx{{ .Values.prefixPath }}/api"
            - name: CLI_DOWNLOAD_LINK
              value: "{{ .Values.bridge.cliDownloadLink | default (print "https://github.com/keptn/keptn/releases/tag/" .Chart.AppVersion) }}"
            - name: ENABLE_VERSION_CHECK
              value: "{{ .Values.bridge.versionCheck.enabled }}"
            - name: SHOW_API_TOKEN
              value: "{{ .Values.bridge.showApiToken.enabled }}"
            - name: KEPTN_INSTALLATION_TYPE
              value: "{{ .Values.bridge.installationType | default (print "QUALITY_GATES,CONTINUOUS_OPERATIONS,CONTINUOUS_DELIVERY") }}"
            - name: LOOK_AND_FEEL_URL
              value: "{{ .Values.bridge.lookAndFeelUrl |default (print "") }}"
            - name: PREFIX_PATH
              value: "{{ .Values.prefixPath }}"
            - name: OAUTH_ENABLED
              value: "{{ or (.Values.bridge.oauth).enabled ((.Values.features).oauth).enabled | default false }}"
            - name: OAUTH_DISCOVERY
              value: "{{ .Values.bridge.oauth.discovery }}"
            # Base URL e.g. https://example.com/
            - name: OAUTH_BASE_URL
              value: "{{ .Values.bridge.oauth.baseUrl }}"
            - name: OAUTH_CLIENT_ID
              value: "{{ .Values.bridge.oauth.clientID }}"
            # Token algorithm which is used for the ID token e.g. "RS256"
            - name: OAUTH_ID_TOKEN_ALG
              value: "{{ .Values.bridge.oauth.IDTokenAlg }}"
            # Additional scopes that should be added to the authentication flow (e.g. "profile email"), separated by space.
            - name: OAUTH_SCOPE
              value: "{{ .Values.bridge.oauth.scope }}"
            # User identifier property inside the ID token e.g. "name" or "email"
            - name: OAUTH_NAME_PROPERTY
              value: "{{ .Values.bridge.oauth.userIdentifier }}"
            - name: SECURE_COOKIE
              value: "{{ .Values.bridge.oauth.secureCookie }}"
            # Session cookie timeout in minutes
            - name: SESSION_TIMEOUT_MIN
              value: "{{ .Values.bridge.oauth.sessionTimeoutMin}}"
            # Timeout of validation data (state, nonce, code verifier) during login
            - name: SESSION_VALIDATING_TIMEOUT_MIN
              value: "{{ .Values.bridge.oauth.sessionValidatingTimeoutMin}}"
            # Correlates to trust proxy number of hops as defined at http://expressjs.com/en/guide/behind-proxies.html
            - name: TRUST_PROXY
              value: "{{ .Values.bridge.oauth.trustProxy }}"
            - name: MONGODB_HOST
              value: '{{ .Release.Name }}-mongo:{{ .Values.mongo.service.ports.mongodb }}'
            - name: MONGODB_DATABASE
              value: {{ .Values.mongo.auth.bridgeAuthDatabase | default "openid" }}
            - name: CONFIG_DIR
              value: "/config"
            - name: AUTOMATIC_PROVISIONING_MSG
              value: {{ ((.Values.features).automaticProvisioning).message | default "" | quote }}
            - name: AUTH_MSG
              value: {{ .Values.bridge.authMsg | default "" | quote }}
            {{- range $key, $value := .Values.bridge.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          ports:
            - containerPort: 3000
          resources:
            {{- toYaml .Values.bridge.resources | nindent 12 }}
          volumeMounts:
            - name: cache
              mountPath: /tmp
            - name: assets
              mountPath: /usr/src/app/dist/assets/branding
            - name: bridge-oauth
              mountPath: /config/oauth
              readOnly: true
            - name: bridge-api-token
              mountPath: /config/api-token
              readOnly: true
            - name: bridge-basic-auth
              mountPath: /config/basic
              readOnly: true
            - name: bridge-oauth-mongodb-credentials
              mountPath: /config/oauth_mongodb_connection_string
              readOnly: true
            - name: bridge-mongodb-credentials
              mountPath: /config/oauth_mongodb
              readOnly: true
            {{- if .Values.bridge.extraVolumeMounts }}
            {{- include "keptn.common.tplvalues.render" ( dict "value" .Values.bridge.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
          {{- include "keptn.bridge.container-security-context" . | nindent 10 }}
          {{- with .Values.bridge.sidecars }}
          {{- include "keptn.common.tplvalues.render" ( dict "value" . "context" $ ) | nindent 8 }}
          {{- end }}
      serviceAccountName: keptn-default
      volumes:
        - name: cache
          emptyDir: {}
        - name: assets
          emptyDir: {}
        - name: bridge-oauth
          secret:
            secretName: bridge-oauth
            defaultMode: 0400
        - name: bridge-api-token
          secret:
            secretName: {{ default "keptn-api-token" .Values.apiService.tokenSecretName }}
            defaultMode: 0400
        - name: bridge-basic-auth
          secret:
            secretName: bridge-credentials
            defaultMode: 0400
            optional: true
        - name: bridge-oauth-mongodb-credentials
          secret:
            secretName: bridge-oauth-mongodb-credentials
            defaultMode: 0400
        - name: bridge-mongodb-credentials
          secret:
            secretName: mongodb-credentials
            defaultMode: 0400
            items:
              - key: mongodb-user
                path: mongodb-user
              - key: mongodb-passwords
                path: mongodb-passwords
        {{- if .Values.bridge.extraVolumes }}
        {{- include "keptn.common.tplvalues.render" ( dict "value" .Values.bridge.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
      {{- include "keptn.nodeSelector" (dict "value" .Values.bridge.nodeSelector "default" .Values.nodeSelector "indent" 6 "context" . )}}
      {{- include "keptn.tolerations" (dict "value" .Values.bridge.tolerations "default" .Values.tolerations "indent" 6 "context" . )}}
      {{- if or .Values.bridge.affinity .Values.affinity }}
      {{- include "keptn.affinity" (dict "value" .Values.bridge.affinity "default" .Values.affinity "indent" 6 "context" . )}}
      {{- else }}
      affinity:
        {{- include "keptn.affinities.pods" (dict "value" .Values.bridge.podAffinity "default" .Values.podAffinity "component" "bridge" "context" . ) | indent 8 }}
        {{- include "keptn.affinities.nodes" (dict "value" .Values.bridge.nodeAffinityPreset "default" .Values.nodeAffinityPreset "component" "bridge" "context" . ) | indent 8 }}
      {{- end }}
