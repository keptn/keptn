---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-service
  namespace: keptn
spec:
  selector:
    matchLabels:
      run: api-service
  replicas: 1
  template:
    metadata:
      labels:
        run: api-service
    spec:
      containers:
        - name: api-service
          image: keptn/api:latest
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          env:
            - name: EVENTBROKER_URI
              value: event-broker.keptn.svc.cluster.local
            - name: DATASTORE_URI
              value: mongodb-datastore.keptn-datastore.svc.cluster.local:8080
            - name: CONFIGURATION_URI
              value: configuration-service.keptn.svc.cluster.local:8080
            - name: SECRET_TOKEN
              valueFrom:
                secretKeyRef:
                  name: keptn-api-token
                  key: keptn-api-token
      serviceAccountName: keptn-api-service
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: keptn
  labels:
    run: api-service
spec:
  ports:
    - port: 8080
      name: http
      targetPort: 8080
      protocol: TCP
  selector:
    run: api-service
---
# bridge
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bridge
  namespace: keptn
spec:
  selector:
    matchLabels:
      run: bridge
  replicas: 1
  template:
    metadata:
      labels:
        run: bridge
    spec:
      containers:
        - name: bridge
          image: keptn/bridge2:latest
          env:
            - name: API_URL
              value: "http://api-gateway-nginx.keptn.svc.cluster.local/api"
            - name: API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: keptn-api-token
                  key: keptn-api-token
          envFrom:
            - secretRef:
                name: bridge-credentials
                optional: true
          ports:
            - containerPort: 3000
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "500m"
      serviceAccountName: keptn-default

---
apiVersion: v1
kind: Service
metadata:
  name: bridge
  namespace: keptn
  labels:
    run: bridge
spec:
  ports:
    - port: 8080
      targetPort: 3000
      protocol: TCP
  selector:
    run: bridge
---
# eventbroker-go
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eventbroker-go
  namespace: keptn
spec:
  selector:
    matchLabels:
      run: eventbroker-go
  replicas: 1
  template:
    metadata:
      labels:
        run: eventbroker-go
    spec:
      containers:
        - name: eventbroker-go
          image: keptn/eventbroker-go:latest
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "32Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: PUBSUB_URL
              value: 'nats://keptn-nats-cluster'
            - name: PUBSUB_IMPL
              value: 'nats'
      serviceAccountName: keptn-default
---
apiVersion: v1
kind: Service
metadata:
  name: event-broker
  namespace: keptn
  labels:
    run: eventbroker-go
spec:
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  selector:
    run: eventbroker-go

---
# helm-service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: helm-service
  namespace: keptn
spec:
  selector:
    matchLabels:
      run: helm-service
  replicas: 1
  template:
    metadata:
      labels:
        run: helm-service
    spec:
      containers:
        - name: helm-service
          image: keptn/helm-service:latest
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "128Mi"
              cpu: "50m"
            limits:
              memory: "512Mi"
              cpu: "1000m"
          env:
            - name: CONFIGURATION_SERVICE
              value: 'http://configuration-service.keptn.svc.cluster.local:8080'
            - name: EVENTBROKER
              value: 'http://event-broker.keptn.svc.cluster.local/keptn'
            - name: API
              value: 'ws://api-service.keptn.svc.cluster.local:8080'
            - name: ENVIRONMENT
              value: 'production'
            - name: PRE_WORKFLOW_ENGINE
              value: 'true'
            - name: CANARY
              value: 'deployment'
            - name: INGRESS_HOSTNAME_SUFFIX
              valueFrom:
                configMapKeyRef:
                  name: ingress-config
                  key: ingress_hostname_suffix
            - name: INGRESS_PROTOCOL
              valueFrom:
                configMapKeyRef:
                  name: ingress-config
                  key: ingress_protocol
            - name: INGRESS_PORT
              valueFrom:
                configMapKeyRef:
                  name: ingress-config
                  key: ingress_port
            - name: ISTIO_GATEWAY
              valueFrom:
                configMapKeyRef:
                  name: ingress-config
                  key: istio_gateway
      serviceAccountName: keptn-helm-service
---
apiVersion: v1
kind: Service
metadata:
  name: helm-service
  namespace: keptn
  labels:
    run: helm-service
spec:
  ports:
    - port: 8080
      protocol: TCP
  selector:
    run: helm-service
---
## helm-service: sh.keptn.event.service.create
apiVersion: apps/v1
kind: Deployment
metadata:
  name: helm-service-service-create-distributor
  namespace: keptn
spec:
  selector:
    matchLabels:
      run: distributor
  replicas: 1
  template:
    metadata:
      labels:
        run: distributor
    spec:
      containers:
        - name: distributor
          image: keptn/distributor:latest
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "32Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: PUBSUB_URL
              value: 'nats://keptn-nats-cluster'
            - name: PUBSUB_TOPIC
              value: 'sh.keptn.internal.event.service.create'
            - name: PUBSUB_RECIPIENT
              value: 'helm-service'
      serviceAccountName: keptn-default
---
# shipyard-service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shipyard-service
  namespace: keptn
spec:
  selector:
    matchLabels:
      run: shipyard-service
  replicas: 1
  template:
    metadata:
      labels:
        run: shipyard-service
    spec:
      containers:
        - name: shipyard-service
          image: keptn/shipyard-service:latest
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "32Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: CONFIGURATION_SERVICE
              value: 'http://configuration-service.keptn.svc.cluster.local:8080'
            - name: EVENTBROKER
              value: 'http://event-broker.keptn.svc.cluster.local/keptn'
            - name: API
              value: 'ws://api-service.keptn.svc.cluster.local:8080'
      serviceAccountName: keptn-default
---
apiVersion: v1
kind: Service
metadata:
  name: shipyard-service
  namespace: keptn
  labels:
    run: shipyard-service
spec:
  ports:
    - port: 8080
      protocol: TCP
  selector:
    run: shipyard-service
---
## shipyard-service: sh.keptn.internal.event.project.create
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shipyard-service-create-project-distributor
  namespace: keptn
spec:
  selector:
    matchLabels:
      run: distributor
  replicas: 1
  template:
    metadata:
      labels:
        run: distributor
    spec:
      containers:
        - name: distributor
          image: keptn/distributor:latest
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "32Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: PUBSUB_URL
              value: 'nats://keptn-nats-cluster'
            - name: PUBSUB_TOPIC
              value: 'sh.keptn.internal.event.project.create'
            - name: PUBSUB_RECIPIENT
              value: 'shipyard-service'
      serviceAccountName: keptn-default

---
## shipyard-service: sh.keptn.internal.event.project.delete
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shipyard-service-delete-project-distributor
  namespace: keptn
spec:
  selector:
    matchLabels:
      run: distributor
  replicas: 1
  template:
    metadata:
      labels:
        run: distributor
    spec:
      containers:
        - name: distributor
          image: keptn/distributor:latest
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "32Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: PUBSUB_URL
              value: 'nats://keptn-nats-cluster'
            - name: PUBSUB_TOPIC
              value: 'sh.keptn.internal.event.project.delete'
            - name: PUBSUB_RECIPIENT
              value: 'shipyard-service'
      serviceAccountName: keptn-default

---
# configuration-service
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  name: configuration-volume
  namespace: keptn
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: configuration-service
  namespace: keptn
spec:
  selector:
    matchLabels:
      run: configuration-service
  replicas: 1
  # recreate the deployment if anything changes (we can not do a rolling upgrade of this deployment as we use a volume)
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        run: configuration-service
    spec:
      containers:
        - name: configuration-service
          image: keptn/configuration-service:latest
          env:
            - name: MONGO_DB_CONNECTION_STRING
              value: 'mongodb://user:password@mongodb.keptn-datastore.svc.cluster.local:27017/keptn'
            - name: MONGO_DB_NAME
              value: 'keptn'
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          volumeMounts:
            - mountPath: /data/config
              name: configuration-volume
      volumes:
        - name: configuration-volume
          persistentVolumeClaim:
            claimName: configuration-volume
      serviceAccountName: keptn-configuration-service
---
apiVersion: v1
kind: Service
metadata:
  name: configuration-service
  namespace: keptn
  labels:
    run: configuration-service
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    run: configuration-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: configuration-service-distributor
  namespace: keptn
spec:
  selector:
    matchLabels:
      run: distributor
  replicas: 1
  template:
    metadata:
      labels:
        run: distributor
    spec:
      containers:
        - name: distributor
          image: keptn/distributor:latest
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "32Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: PUBSUB_URL
              value: 'nats://keptn-nats-cluster'
            - name: PUBSUB_TOPIC
              value: 'sh.keptn.>'
            - name: PUBSUB_RECIPIENT
              value: 'configuration-service'
            - name: PUBSUB_RECIPIENT_PATH
              value: '/v1/event'
      serviceAccountName: keptn-default
