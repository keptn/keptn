---
# Source: keptn/charts/mongo/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: RELEASE-NAME-mongo
  namespace: default
  labels:
    app.kubernetes.io/name: mongo
    helm.sh/chart: mongo-11.1.10
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
secrets:
  - name: RELEASE-NAME-mongo
---
# Source: keptn/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keptn-default
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: keptn
---
# Source: keptn/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keptn-configuration-service
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: resource-service
---
# Source: keptn/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keptn-shipyard-controller
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: shipyard-controller
---
# Source: keptn/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keptn-secret-service
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: secret-service
---
# Source: keptn/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keptn-lighthouse-service
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: lighthouse-service
---
# Source: keptn/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keptn-api-service
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: api-service
---
# Source: keptn/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keptn-webhook-service
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: webhook-service
---
# Source: keptn/templates/core.yaml
apiVersion: v1
kind: Secret
metadata:
  name: keptn-api-token
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: keptn
type: Opaque
data:
  keptn-api-token: "aXlSdGZ6SDBuZVJ1dDJidGk5ODBtSmpnMHZxd0l6d1FhWWlqQVFrOVNSQVdl"
---
# Source: keptn/templates/core.yaml
apiVersion: v1
kind: Secret
metadata:
  name: bridge-credentials
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: bridge
type: Opaque
data:
  BASIC_AUTH_USERNAME: "a2VwdG4="
  BASIC_AUTH_PASSWORD: "VjNSVzZxS1p4YWFoa29zT1RTVUU="
---
# Source: keptn/templates/core.yaml
apiVersion: v1
kind: Secret
metadata:
  name: bridge-oauth
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: bridge
type: Opaque
data:
  session_secret: "N2F6SjJsY2hKSnJneTdVOG82Q3lUTlJFS3Y1UUJLRjFQaVRscDU2RW1JMnpV"
  database_encrypt_secret: "V2dZeEt3endwRElTNTZaY2w0SHBEUFlOS3FSOGFMcDg="
  client_secret: ""
---
# Source: keptn/templates/core.yaml
apiVersion: v1
kind: Secret
metadata:
  name: bridge-oauth-mongodb-credentials
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: bridge
type: Opaque
data:
  external_connection_string: ""
---
# Source: keptn/templates/mongodb-credentials.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-credentials
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: keptn
type: Opaque
data:
  mongodb-user: "a2VwdG4="
  mongodb-passwords: "d2xlOHl6OTg0R0pYM2lpblVLaDg="
  mongodb-root-user: "YWRtaW4="
  mongodb-root-password: "Qm5BSU9jNWsxaEx1aFVCUUlNcXJEekdSb1ZtaDZYa2J0S3k2T3l2TmhGbFVU"
  external_connection_string: ""
---
# Source: keptn/charts/nats/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: keptn-nats-config
  namespace: default
  labels:
    helm.sh/chart: nats-0.13.2
    app.kubernetes.io/name: keptn-nats
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
data:
  nats.conf: |
    # NATS Clients Port
    port: 4222

    # PID file shared with configuration reloader.
    pid_file: "/var/run/nats/nats.pid"

    ###############
    #             #
    # Monitoring  #
    #             #
    ###############
    http: 8222
    server_name:$POD_NAME
    ###################################
    #                                 #
    # NATS JetStream                  #
    #                                 #
    ###################################
    jetstream {
      max_mem: 2Gi
      store_dir: /data/

      max_file:5Gi
    }
    lame_duck_duration: 120s
---
# Source: keptn/templates/api-gateway-nginx.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-nginx-config
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: api-gateway-nginx
data:
  nginx.conf: |
    worker_processes  3;
    pid /tmp/nginx.pid;
    error_log /dev/stdout info;
    events {
      worker_connections  10240;
    }

    http {
      log_format  main
              'remote_addr:$remote_addr\t'
              'time_local:$time_local\t'
              'method:$request_method\t'
              'uri:$request_uri\t'
              'host:$host\t'
              'status:$status\t'
              'bytes_sent:$body_bytes_sent\t'
              'referer:$http_referer\t'
              'useragent:$http_user_agent\t'
              'forwardedfor:$http_x_forwarded_for\t'
              'request_time:$request_time';
      access_log /dev/stdout;
      # rewrite_log on;
      absolute_redirect off;

      # remove nginx version
      server_tokens off;

      # https://www.nginx.com/blog/websocket-nginx/
      map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
      }

      map $http_x_forwarded_proto $forward_proto {
        default $scheme;
        https https;
      }

      server {
          listen       8080;
          server_name  _;
            client_max_body_size 5m;

          include /etc/nginx/keptn-endpoints-pre-0-7.conf;
          include /etc/nginx/keptn-endpoints.conf;
      }
    }
  keptn-endpoints.conf: |
    rewrite ^/$ /bridge/ permanent;
    rewrite ^/api$ /api/swagger-ui/ permanent;

    # special configuration for /v1/auth to always use POST requests
    location /api/v1/auth {
      rewrite /api/v1/auth /v1/auth break;

      proxy_method POST;
      proxy_pass_request_body off;
      proxy_pass http://api-service:8080;
      proxy_http_version 1.1;
      proxy_pass_request_headers on; # only pass request headers to this service
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /bridge {
      rewrite /bridge(/.*) $1 break;
      proxy_pass http://bridge:8080;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $forward_proto;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
      proxy_buffer_size 128k;
      proxy_buffers 4 256k;
      proxy_busy_buffers_size 256k;
    }

    # health check
    location /nginx-health {
        access_log off;
        return 200 "OK\n";
    }

    location /api/mongodb-datastore/swagger-ui/swagger.yaml {
     # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
     # the access is denied) before we store the file
     # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
      rewrite /api/mongodb-datastore/(.*) /$1  break;
      proxy_pass         http://mongodb-datastore:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # block writing calls to /api/mongodb-datastore/event
    location = /api/mongodb-datastore/event {
      limit_except GET HEAD OPTIONS {
        deny all;
      }
      auth_request               /api/v1/auth;
      rewrite /api/mongodb-datastore/(.*) /$1  break;
      proxy_pass         http://mongodb-datastore:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # block all calls to /api/mongodb-datastore/health
    location = /api/mongodb-datastore/health {
      deny all;
    }

    location /api/mongodb-datastore {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
      auth_request               /api/v1/auth;

      rewrite /api/mongodb-datastore/(.*) /$1  break;
      proxy_pass         http://mongodb-datastore:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/controlPlane/swagger-ui/swagger.yaml {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.

      rewrite /api/controlPlane/(.*) /$1  break;
      proxy_pass         http://shipyard-controller:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # block DELETE calls to /api/controlplane/v1/log
    location /api/controlPlane/v1/log {
      limit_except GET POST PUT PATCH OPTIONS HEAD {
        deny all;
      }
      auth_request               /api/v1/auth;

      rewrite /api/controlPlane/(.*) /$1  break;
      proxy_pass         http://shipyard-controller:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location  /api/controlPlane {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
      auth_request               /api/v1/auth;

      rewrite /api/controlPlane/(.*) /$1  break;
      proxy_pass         http://shipyard-controller:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/secrets/swagger-ui/swagger.yaml {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.

      rewrite /api/secrets/(.*) /$1  break;
      proxy_pass         http://secret-service:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location  /api/secrets/ {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
      auth_request               /api/v1/auth;

      rewrite /api/secrets/(.*) /$1  break;
      proxy_pass         http://secret-service:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/statistics/swagger-ui/swagger.yaml {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.

      rewrite /api/statistics/(.*) /$1  break;
      proxy_pass         http://statistics-service:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # block all calls to /api/statistics/v1/event
    location ~* /api/statistics/v1/event {
      deny all;
    }

    location  /api/statistics {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
      auth_request               /api/v1/auth;

      rewrite /api/statistics/(.*) /$1  break;
      proxy_pass         http://statistics-service:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/configuration-service/swagger-ui/swagger.yaml {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.

      rewrite /api/configuration-service/(.*) /$1  break;
      proxy_pass         http://configuration-service:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # block /api/configuration-service/v1/project/*
    location ~* /api/configuration-service/v1/project/([^/]*)/service/([^/]*)/resource/([^/]*)$ {
      deny all;
    }

    # block /api/configuration-service/v1/project/*
    location ~* /api/configuration-service/v1/project/([^/]*)/service/([^/]*)/resource$ {
      deny all;
    }

    # block all calls to /project/*/stage/*/service/*
    location ~* /api/configuration-service/v1/project/([^/]*)/stage/([^/]*)/service/([^/]*)$ {
      deny all;
    }

    # block all calls to /project/*/stage/*/service
    location ~* /api/configuration-service/v1/project/([^/]*)/stage/([^/]*)/service$ {
      deny all;
    }

    # block all calls to /project/*/stage/*
    location ~* /api/configuration-service/v1/project/([^/]*)/stage/([^/]*)$ {
      deny all;
    }

    # block all calls to /project/*/stage
    location ~* /api/configuration-service/v1/project/([^/]*)/stage$ {
      deny all;
    }

    # block all calls to /project/*
    location ~* /api/configuration-service/v1/project/([^/]*)$ {
      deny all;
    }

    # block all calls to /project
    location = /api/configuration-service/v1/project {
      deny all;
    }

    location /api/configuration-service/  {
      # auth via backend (if the subrequest returns a 2xx response code, the access is allowed. If it returns 401 or 403,
      # the access is denied) before we store the file
      # see http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
      auth_request               /api/v1/auth;

      rewrite /api/configuration-service/(.*) /$1  break;
      proxy_pass         http://configuration-service:8080;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api {
      rewrite /api/(.*) /$1 break;
      rewrite /api / break;
      proxy_pass http://api-service:8080;
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
    }

  keptn-endpoints-pre-0-7.conf: |
    rewrite ^/project/(.*) /bridge/project/$1 permanent;
    rewrite ^/trace/(.*) /bridge/trace/$1 permanent;
---
# Source: keptn/templates/secret-service.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: secret-service-config
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: secret-service
data:
  scopes.yaml: |
    Scopes:
      keptn-default:
        Capabilities:
          keptn-secrets-default-read:
            Permissions:
              - get
      keptn-webhook-service:
        Capabilities:
          keptn-webhook-svc-read:
            Permissions:
              - get
      dynatrace-service:
        Capabilities:
          keptn-dynatrace-svc-read:
            Permissions:
              - get
      keptn-prometheus-service:
        Capabilities:
          keptn-prometheus-svc-read:
            Permissions:
              - get
---
# Source: keptn/templates/webhook-service.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: keptn-webhook-config
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: webhook-service
data:
  denyList: |-
    kubernetes
    kubernetes.default
    kubernetes.default.svc
    kubernetes.default.svc.cluster.local
    svc.cluster.local
    cluster.local
    localhost
    127.0.0.1
    ::1
---
# Source: keptn/charts/mongo/templates/standalone/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: RELEASE-NAME-mongo
  namespace: default
  labels:
    app.kubernetes.io/name: mongo
    helm.sh/chart: mongo-11.1.10
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: keptn/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: keptn-manage-secrets
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: keptn
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - get
      - delete
      - update
      - list
---
# Source: keptn/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: keptn-get-secrets
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: resource-service
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
---
# Source: keptn/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: keptn-manage-roles
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: secret-service
rules:
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - roles
    verbs:
      - create
      - get
      - delete
      - update
      - deletecollection
---
# Source: keptn/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: keptn-manage-rolebindings
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: secret-service
rules:
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - rolebindings
    verbs:
      - create
      - get
      - delete
      - update
      - deletecollection
---
# Source: keptn/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: keptn-read-metadata
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: api-service
rules:
  - apiGroups:
      - extensions
      - apps
    resources:
      - deployments
    verbs:
      - get
      - list
---
# Source: keptn/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: keptn-manage-configmaps
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: lighthouse-service
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - update
      - get
---
# Source: keptn/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: keptn-get-webhook-config
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: webhook-service
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - "keptn-webhook-config"
    verbs:
      - get
---
# Source: keptn/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: keptn-acquire-lease
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: shipyard-controller
rules:
  - apiGroups:
      - "coordination.k8s.io"
    resources:
      - leases
    resourceNames:
      - "shipyard-controller-dispatcher"
    verbs:
      - get
      - update
      - create
---
# Source: keptn/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: keptn-lighthouse-service
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: lighthouse-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: keptn-manage-configmaps
subjects:
  - kind: ServiceAccount
    name: keptn-lighthouse-service
---
# Source: keptn/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: keptn-webhook-service
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: webhook-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: keptn-get-webhook-config
subjects:
  - kind: ServiceAccount
    name: keptn-webhook-service
---
# Source: keptn/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: keptn-api-service-metadata
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: api-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: keptn-read-metadata
subjects:
  - kind: ServiceAccount
    name: keptn-api-service
---
# Source: keptn/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: keptn-configuration-service-get-secrets
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: resource-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: keptn-get-secrets
subjects:
  - kind: ServiceAccount
    name: keptn-configuration-service
---
# Source: keptn/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: keptn-shipyard-controller-manage-secrets
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: shipyard-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: keptn-manage-secrets
subjects:
  - kind: ServiceAccount
    name: keptn-shipyard-controller
---
# Source: keptn/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: keptn-secret-service-manage-secrets
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: secret-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: keptn-manage-secrets
subjects:
  - kind: ServiceAccount
    name: keptn-secret-service
---
# Source: keptn/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: keptn-secret-service-manage-roles
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: secret-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: keptn-manage-roles
subjects:
  - kind: ServiceAccount
    name: keptn-secret-service
---
# Source: keptn/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: keptn-secret-service-manage-rolebindings
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: secret-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: keptn-manage-rolebindings
subjects:
  - kind: ServiceAccount
    name: keptn-secret-service
---
# Source: keptn/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: keptn-shipyard-controller-acquire-lease
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: shipyard-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: keptn-acquire-lease
subjects:
  - kind: ServiceAccount
    name: keptn-shipyard-controller
---
# Source: keptn/charts/mongo/templates/standalone/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-mongo
  namespace: default
  labels:
    app.kubernetes.io/name: mongo
    helm.sh/chart: mongo-11.1.10
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  type: ClusterIP
  ports:
    - name: mongodb
      port: 27017
      targetPort: mongodb
      nodePort: null
  selector:
    app.kubernetes.io/name: mongo
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/component: mongodb
---
# Source: keptn/charts/nats/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: keptn-nats
  namespace: default
  labels:
    helm.sh/chart: nats-0.13.2
    app.kubernetes.io/name: keptn-nats
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: keptn-nats
    app.kubernetes.io/instance: RELEASE-NAME
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
  - name: client
    port: 4222
  - name: cluster
    port: 6222
  - name: monitor
    port: 8222
  - name: metrics
    port: 7777
  - name: leafnodes
    port: 7422
  - name: gateways
    port: 7522
---
# Source: keptn/templates/api-gateway-nginx.yaml
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-nginx
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: api-gateway-nginx
spec:
  type: ClusterIP
  ports:
    - port: 80
      name: http
      targetPort: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/name: api-gateway-nginx
---
# Source: keptn/templates/api-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: api-service
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: api-service
spec:
  ports:
    - port: 8080
      name: http
      targetPort: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/name: api-service
---
# Source: keptn/templates/approval-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: approval-service
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: approval-service
spec:
  ports:
    - port: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/name: approval-service
---
# Source: keptn/templates/bridge.yaml
apiVersion: v1
kind: Service
metadata:
  name: bridge
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: bridge
spec:
  ports:
    - port: 8080
      targetPort: 3000
      protocol: TCP
  selector:
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/name: bridge
---
# Source: keptn/templates/configuration-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: configuration-service
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: resource-service
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/name: resource-service
---
# Source: keptn/templates/lighthouse-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: lighthouse-service
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: lighthouse-service
spec:
  ports:
    - port: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/name: lighthouse-service
---
# Source: keptn/templates/mongodb-datastore.yaml
apiVersion: v1
kind: Service
metadata:
  name: mongodb-datastore
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: mongodb-datastore
spec:
  ports:
    - port: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/name: mongodb-datastore
---
# Source: keptn/templates/remediation-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: remediation-service
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: remediation-service
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/name: remediation-service
---
# Source: keptn/templates/secret-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: secret-service
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: secret-service
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/name: secret-service
---
# Source: keptn/templates/shipyard-controller.yaml
apiVersion: v1
kind: Service
metadata:
  name: shipyard-controller
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: shipyard-controller
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/name: shipyard-controller
---
# Source: keptn/templates/statistics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: statistics-service
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: statistics-service
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/name: statistics-service
---
# Source: keptn/templates/webhook-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: webhook-service
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: webhook-service
spec:
  ports:
    - port: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/name: webhook-service
---
# Source: keptn/charts/mongo/templates/standalone/dep-sts.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: RELEASE-NAME-mongo
  namespace: default
  labels:
    app.kubernetes.io/name: mongo
    helm.sh/chart: mongo-11.1.10
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: mongo
      app.kubernetes.io/instance: RELEASE-NAME
      app.kubernetes.io/component: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongo
        helm.sh/chart: mongo-11.1.10
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: mongodb
    spec:
      
      serviceAccountName: RELEASE-NAME-mongo
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mongo
                    app.kubernetes.io/instance: RELEASE-NAME
                    app.kubernetes.io/component: mongodb
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        sysctls: []
      containers:
        - name: mongodb
          image: docker.io/bitnami/mongodb:4.4.13-debian-10-r52
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MONGODB_EXTRA_USERNAMES
              value: "keptn"
            - name: MONGODB_EXTRA_DATABASES
              value: "keptn"
            - name: MONGODB_EXTRA_PASSWORDS
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: mongodb-passwords
            - name: MONGODB_ROOT_USER
              value: "admin"
            - name: MONGODB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: mongodb-root-password
            - name: ALLOW_EMPTY_PASSWORD
              value: "no"
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: "0"
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: "no"
            - name: MONGODB_DISABLE_JAVASCRIPT
              value: "no"
            - name: MONGODB_ENABLE_JOURNAL
              value: "yes"
            - name: MONGODB_ENABLE_IPV6
              value: "no"
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: "no"
          ports:
            - name: mongodb
              containerPort: 27017
          livenessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - bash
                - -ec
                - |
                  # Run the proper check depending on the version
                  [[ $(mongo --version | grep "MongoDB shell") =~ ([0-9]+\.[0-9]+\.[0-9]+) ]] && VERSION=${BASH_REMATCH[1]}
                  . /opt/bitnami/scripts/libversion.sh
                  VERSION_MAJOR="$(get_sematic_version "$VERSION" 1)"
                  VERSION_MINOR="$(get_sematic_version "$VERSION" 2)"
                  VERSION_PATCH="$(get_sematic_version "$VERSION" 3)"
                  if [[ "$VERSION_MAJOR" -ge 4 ]] && [[ "$VERSION_MINOR" -ge 4 ]] && [[ "$VERSION_PATCH" -ge 2 ]]; then
                      mongo --disableImplicitSessions $TLS_OPTIONS --eval 'db.hello().isWritablePrimary || db.hello().secondary' | grep -q 'true'
                  else
                      mongo --disableImplicitSessions $TLS_OPTIONS --eval 'db.isMaster().ismaster || db.isMaster().secondary' | grep -q 'true'
                  fi
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: datadir
              mountPath: /bitnami/mongodb
              subPath: 
      volumes:
        - name: datadir
          persistentVolumeClaim:
            claimName: RELEASE-NAME-mongo
---
# Source: keptn/templates/api-gateway-nginx.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway-nginx
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: api-gateway-nginx
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: RELEASE-NAME
      app.kubernetes.io/name: api-gateway-nginx
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: keptn
        helm.sh/chart: keptn-0.1.0
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "latest"
        app.kubernetes.io/part-of: keptn
        app.kubernetes.io/name: api-gateway-nginx
      annotations: # add randomizer to restart the deployment if anything changes - see https://github.com/keptn/keptn/issues/3320
        rollme: "El6e3"
    spec:
      securityContext:
        fsGroup:
          101
      terminationGracePeriodSeconds: 60
      containers:
        - name: api-gateway-nginx
          image: "docker.io/nginxinc/nginx-unprivileged:1.22.0-alpine"
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 20; /usr/local/openresty/nginx/sbin/nginx -c /etc/nginx/nginx.conf -s quit; while pgrep -x nginx; do sleep 1; done"]
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /nginx-health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /nginx-health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          volumeMounts:
            - mountPath: /etc/nginx/nginx.conf # mount api-nginx-config volume to /etc/nginx
              subPath: nginx.conf
              readOnly: true
              name: api-nginx-config
            - mountPath: /etc/nginx/keptn-endpoints.conf # mount api-nginx-config volume to /etc/nginx
              subPath: keptn-endpoints.conf
              readOnly: true
              name: api-nginx-config
            - mountPath: /etc/nginx/keptn-endpoints-pre-0-7.conf # mount api-nginx-config volume to /etc/nginx
              subPath: keptn-endpoints-pre-0-7.conf
              readOnly: true
              name: api-nginx-config
            - mountPath: /etc/nginx/keptn-endpoints-pre-1-0.conf # mount api-nginx-config volume to /etc/nginx
              subPath: keptn-endpoints-pre-1-0.conf
              readOnly: true
              name: api-nginx-config
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation:
              false
            privileged:
              false
            readOnlyRootFilesystem:
              false
            runAsNonRoot:
              true
            runAsUser:
              101
      volumes:
        - name: api-nginx-config
          configMap:
            name: api-nginx-config # place ConfigMap `api-nginx-config` on /etc/nginx
      serviceAccountName: keptn-default
---
# Source: keptn/templates/api-service.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-service
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: api-service
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: RELEASE-NAME
      app.kubernetes.io/name: api-service
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: keptn
        helm.sh/chart: keptn-0.1.0
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "latest"
        app.kubernetes.io/part-of: keptn
        app.kubernetes.io/name: api-service
    spec:
      securityContext:
        fsGroup:
          65532
      terminationGracePeriodSeconds: 60
      containers:
        - name: api-service
          image: "docker.io/keptn/api:latest"
          lifecycle:
            preStop:
              exec:
                # using 90s of sleeping to be on the safe side before terminating the pod
                command: ["/bin/sleep", "5" ]
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 100m
              memory: 64Mi
            requests:
              cpu: 50m
              memory: 32Mi
          env:
            - name: PREFIX_PATH
              value: ""
            - name: EVENTBROKER_URI
              value: http://localhost:8081/event
            - name: DATASTORE_URI
              value: mongodb-datastore:8080
            - name: CONFIGURATION_URI
              value: configuration-service:8080
            - name: CONTROLPLANE_URI
              value: shipyard-controller:8080
            - name: IMPORT_BASE_PATH
              value: "/data/import-scratch"
            - name: SECRET_TOKEN
              valueFrom:
                secretKeyRef:
                  name: keptn-api-token
                  key: keptn-api-token
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: AUTOMATIC_PROVISIONING_URL
              value: ""
            - name: MAX_AUTH_ENABLED
              value: "true"
            - name: MAX_AUTH_REQUESTS_PER_SECOND
              value: '1.0'
            - name: MAX_AUTH_REQUESTS_BURST
              value: '2'
            - name: LOG_LEVEL
              value: info
            - name: OAUTH_ENABLED
              value: "false"
            - name: OAUTH_PREFIX
              value: "keptn:"
            - name: HIDE_DEPRECATED
              value: "false"
          securityContext:
            allowPrivilegeEscalation:
              false
            privileged:
              false
            readOnlyRootFilesystem:
              true
            runAsNonRoot:
              true
            runAsUser:
              65532
          volumeMounts:
            - mountPath: /data/import-scratch
              name: import-scratch
      volumes:
        - name: import-scratch
          emptyDir: {}
      serviceAccountName: keptn-api-service
---
# Source: keptn/templates/approval-service.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: approval-service
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: approval-service
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: RELEASE-NAME
      app.kubernetes.io/name: approval-service
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: keptn
        helm.sh/chart: keptn-0.1.0
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "latest"
        app.kubernetes.io/part-of: keptn
        app.kubernetes.io/name: approval-service
    spec:
      securityContext:
        fsGroup:
          65532
      terminationGracePeriodSeconds: 60
      serviceAccountName: keptn-default
      containers:
        - name: approval-service
          image: "docker.io/keptn/approval-service:latest"
          lifecycle:
            preStop:
              exec:
                # using 90s of sleeping to be on the safe side before terminating the pod
                command: ["/bin/sleep", "5" ]
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 25m
              memory: 32Mi
          env:
            - name: CONFIGURATION_SERVICE
              value: 'http://configuration-service:8080'
            - name: EVENTBROKER
              value: 'http://localhost:8081/event'
            - name: LOG_LEVEL
              value: info
            - name: K8S_DEPLOYMENT_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: 'metadata.labels[''app.kubernetes.io/name'']'
            - name: K8S_DEPLOYMENT_VERSION
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: 'metadata.labels[''app.kubernetes.io/version'']'
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          securityContext:
            allowPrivilegeEscalation:
              false
            privileged:
              false
            readOnlyRootFilesystem:
              true
            runAsNonRoot:
              true
            runAsUser:
              65532
---
# Source: keptn/templates/configuration-service.yaml
# resource-service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resource-service
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: resource-service
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: RELEASE-NAME
      app.kubernetes.io/name: resource-service
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: keptn
        helm.sh/chart: keptn-0.1.0
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "latest"
        app.kubernetes.io/part-of: keptn
        app.kubernetes.io/name: resource-service
    spec:
      securityContext:
        fsGroup: 1001
      terminationGracePeriodSeconds: 60
      containers:
        - name: resource-service
          image: "docker.io/keptn/resource-service:latest"
          lifecycle:
            preStop:
              exec:
                # using 90s of sleeping to be on the safe side before terminating the pod
                command: ["/bin/sleep", "20" ]
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
          imagePullPolicy: IfNotPresent
          env:
            - name: PREFIX_PATH
              value: ""
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LOG_LEVEL
              value: info
            - name: DIRECTORY_STAGE_STRUCTURE
              value: "false"
            - name: GIT_KEPTN_EMAIL
              value: "keptn@keptn.sh"
            - name: GIT_KEPTN_USER
              value: "keptn"
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 100m
              memory: 64Mi
            requests:
              cpu: 25m
              memory: 32Mi
          volumeMounts:
            - mountPath: /data/config
              name: resource-volume
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            privileged: false
      volumes:
        - name: resource-volume
          emptyDir: {}
      serviceAccountName: keptn-configuration-service
---
# Source: keptn/templates/core.yaml
# bridge
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bridge
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: bridge
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: RELEASE-NAME
      app.kubernetes.io/name: bridge
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/component: keptn
        helm.sh/chart: keptn-0.1.0
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "latest"
        app.kubernetes.io/part-of: keptn
        app.kubernetes.io/name: bridge
    spec:
      securityContext:
        fsGroup:
          65532
      containers:
        - name: bridge
          image: "docker.io/keptn/bridge2:latest"
          imagePullPolicy: IfNotPresent
          env:
            - name: API_URL
              value: "http://api-gateway-nginx/api"
            - name: API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: keptn-api-token
                  key: keptn-api-token
            - name: CLI_DOWNLOAD_LINK
              value: "https://github.com/keptn/keptn/releases/tag/latest"
            - name: INTEGRATIONS_PAGE_LINK
              value: "https://get.keptn.sh/integrations.html"
            - name: ENABLE_VERSION_CHECK
              value: "true"
            - name: SHOW_API_TOKEN
              value: "true"
            - name: KEPTN_INSTALLATION_TYPE
              value: "QUALITY_GATES,CONTINUOUS_OPERATIONS"
            - name: LOOK_AND_FEEL_URL
              value: ""
            - name: PREFIX_PATH
              value: ""
            - name: OAUTH_ENABLED
              value: "false"
            - name: OAUTH_DISCOVERY
              value: ""
            # Base URL e.g. https://example.com/
            - name: OAUTH_BASE_URL
              value: ""
            - name: OAUTH_CLIENT_ID
              value: ""
            # Token algorithm which is used for the ID token e.g. "RS256"
            - name: OAUTH_ID_TOKEN_ALG
              value: ""
            # Additional scopes that should be added to the authentication flow (e.g. "profile email"), separated by space.
            - name: OAUTH_SCOPE
              value: ""
            # User identifier property inside the ID token e.g. "name" or "email"
            - name: OAUTH_NAME_PROPERTY
              value: ""
            - name: SECURE_COOKIE
              value: "false"
            # Session cookie timeout in minutes
            - name: SESSION_TIMEOUT_MIN
              value: ""
            # Timeout of validation data (state, nonce, code verifier) during login
            - name: SESSION_VALIDATING_TIMEOUT_MIN
              value: ""
            # Correlates to trust proxy number of hops as defined at http://expressjs.com/en/guide/behind-proxies.html
            - name: TRUST_PROXY
              value: ""
            - name: MONGODB_HOST
              value: 'RELEASE-NAME-mongo:27017'
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: mongodb-user
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: mongodb-passwords
            - name: MONGODB_DATABASE
              value: keptn
            - name: CONFIG_DIR
              value: "/config"
            - name: AUTOMATIC_PROVISIONING_MSG
              value: ""
            - name: AUTH_MSG
              value: ""
            - name: RESOURCE_SERVICE_ENABLED
              value: "true"
            - name: D3_HEATMAP_ENABLED
              value: "false"
          envFrom:
            - secretRef:
                name: bridge-credentials
                optional: true
          ports:
            - containerPort: 3000
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 25m
              memory: 64Mi
          volumeMounts:
            - name: assets
              mountPath: /usr/src/app/dist/assets/branding
            - name: bridge-oauth
              mountPath: /config/oauth
              readOnly: true
            - name: bridge-oauth-mongodb-credentials
              mountPath: /config/oauth_mongodb
          securityContext:
            allowPrivilegeEscalation:
              false
            privileged:
              false
            readOnlyRootFilesystem:
              true
            runAsNonRoot:
              true
            runAsUser:
              65532
      serviceAccountName: keptn-default
      volumes:
        - emptyDir: {}
          name: assets
        - name: bridge-oauth
          secret:
            secretName: bridge-oauth
            defaultMode: 0400
        - name: bridge-oauth-mongodb-credentials
          secret:
            secretName: bridge-oauth-mongodb-credentials
            defaultMode: 0400
---
# Source: keptn/templates/lighthouse-service.yaml
# lighthouse-service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lighthouse-service
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: lighthouse-service
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: RELEASE-NAME
      app.kubernetes.io/name: lighthouse-service
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: keptn
        helm.sh/chart: keptn-0.1.0
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "latest"
        app.kubernetes.io/part-of: keptn
        app.kubernetes.io/name: lighthouse-service
    spec:
      securityContext:
        fsGroup:
          65532
      containers:
        - name: lighthouse-service
          image: "docker.io/keptn/lighthouse-service:latest"
          lifecycle:
            preStop:
              exec:
                # using 90s of sleeping to be on the safe side before terminating the pod
                command: ["/bin/sleep", "20" ]
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 200m
              memory: 1Gi
            requests:
              cpu: 50m
              memory: 128Mi
          env:
            - name: EVENTBROKER
              value: 'http://localhost:8081/event'
            - name: CONFIGURATION_SERVICE
              value: 'http://configuration-service:8080'
            - name: MONGODB_DATASTORE
              value: 'mongodb-datastore:8080'
            - name: ENVIRONMENT
              value: 'production'
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LOG_LEVEL
              value: info
            - name: K8S_DEPLOYMENT_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: 'metadata.labels[''app.kubernetes.io/name'']'
            - name: K8S_DEPLOYMENT_VERSION
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: 'metadata.labels[''app.kubernetes.io/version'']'
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          securityContext:
            allowPrivilegeEscalation:
              false
            privileged:
              false
            readOnlyRootFilesystem:
              true
            runAsNonRoot:
              true
            runAsUser:
              65532
      serviceAccountName: keptn-lighthouse-service
      terminationGracePeriodSeconds: 60
---
# Source: keptn/templates/mongodb-datastore.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-datastore
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: mongodb-datastore
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: RELEASE-NAME
      app.kubernetes.io/name: mongodb-datastore
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: keptn
        helm.sh/chart: keptn-0.1.0
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "latest"
        app.kubernetes.io/part-of: keptn
        app.kubernetes.io/name: mongodb-datastore
    spec:
      securityContext:
        fsGroup:
          65532
      serviceAccountName: keptn-default
      terminationGracePeriodSeconds: 60
      containers:
        - name: mongodb-datastore
          image: "docker.io/keptn/mongodb-datastore:latest"
          lifecycle:
            preStop:
              exec:
                # using 90s of sleeping to be on the safe side before terminating the pod
                command: ["/bin/sleep", "20" ]
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 300m
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 32Mi
          env:
            - name: PREFIX_PATH
              value: ""
            - name: MONGODB_HOST
              value: 'RELEASE-NAME-mongo:27017'
            - name: MONGODB_DATABASE
              value: keptn
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: mongodb-user
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: mongodb-passwords
            - name: MONGODB_EXTERNAL_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: external_connection_string
                  optional: true
            - name: LOG_LEVEL
              value: info
            - name: NATS_URL
              value: 'nats://keptn-nats'
            - name: K8S_DEPLOYMENT_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: 'metadata.labels[''app.kubernetes.io/name'']'
            - name: K8S_DEPLOYMENT_VERSION
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: 'metadata.labels[''app.kubernetes.io/version'']'
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          securityContext:
            allowPrivilegeEscalation:
              false
            privileged:
              false
            readOnlyRootFilesystem:
              true
            runAsNonRoot:
              true
            runAsUser:
              65532
---
# Source: keptn/templates/remediation-service.yaml
# remediation-service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: remediation-service
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: remediation-service
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: RELEASE-NAME
      app.kubernetes.io/name: remediation-service
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: keptn
        helm.sh/chart: keptn-0.1.0
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "latest"
        app.kubernetes.io/part-of: keptn
        app.kubernetes.io/name: remediation-service
    spec:
      securityContext:
        fsGroup:
          65532
      containers:
        - name: remediation-service
          image: "docker.io/keptn/remediation-service:latest"
          lifecycle:
            preStop:
              exec:
                # using 90s of sleeping to be on the safe side before terminating the pod
                command: ["/bin/sleep", "5" ]
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 200m
              memory: 1Gi
            requests:
              cpu: 50m
              memory: 64Mi
          env:
            - name: ENVIRONMENT
              value: 'production'
            - name: LOG_LEVEL
              value: info
            - name: PUBSUB_TOPIC
              value: 'sh.keptn.event.get-action.triggered'
            - name: K8S_DEPLOYMENT_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: 'metadata.labels[''app.kubernetes.io/name'']'
            - name: K8S_DEPLOYMENT_VERSION
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: 'metadata.labels[''app.kubernetes.io/version'']'
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          securityContext:
            allowPrivilegeEscalation:
              false
            privileged:
              false
            readOnlyRootFilesystem:
              true
            runAsNonRoot:
              true
            runAsUser:
              65532
      serviceAccountName: keptn-default
      terminationGracePeriodSeconds: 60
---
# Source: keptn/templates/secret-service.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: secret-service
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: secret-service
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: RELEASE-NAME
      app.kubernetes.io/name: secret-service
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: keptn
        helm.sh/chart: keptn-0.1.0
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "latest"
        app.kubernetes.io/part-of: keptn
        app.kubernetes.io/name: secret-service
    spec:
      securityContext:
        fsGroup:
          65532
      serviceAccountName: keptn-secret-service
      terminationGracePeriodSeconds: 60
      containers:
        - name: secret-service
          image: "docker.io/keptn/secret-service:latest"
          lifecycle:
            preStop:
              exec:
                # using 90s of sleeping to be on the safe side before terminating the pod
                command: ["/bin/sleep", "20" ]
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /v1/secret
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LOG_LEVEL
              value: info
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 200m
              memory: 64Mi
            requests:
              cpu: 25m
              memory: 32Mi
          volumeMounts:
            - mountPath: /data
              name: secret-service-configmap-volume
          securityContext:
            allowPrivilegeEscalation:
              false
            privileged:
              false
            readOnlyRootFilesystem:
              true
            runAsNonRoot:
              true
            runAsUser:
              65532
      volumes:
        - name: secret-service-configmap-volume
          configMap:
            name: secret-service-config
---
# Source: keptn/templates/shipyard-controller.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shipyard-controller
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: shipyard-controller
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: RELEASE-NAME
      app.kubernetes.io/name: shipyard-controller
  replicas : 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: keptn
        helm.sh/chart: keptn-0.1.0
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "latest"
        app.kubernetes.io/part-of: keptn
        app.kubernetes.io/name: shipyard-controller
    spec:
      securityContext:
        fsGroup:
          65532
      serviceAccountName: keptn-shipyard-controller
      containers:
        - name: shipyard-controller
          image: "docker.io/keptn/shipyard-controller:latest"
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - wget -O- http://localhost:8081/operations/v1/pre-stop
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
          imagePullPolicy: IfNotPresent
          env:
            - name: CONFIGURATION_SERVICE
              value: "http://configuration-service:8080"
            - name: EVENTBROKER
              value: http://localhost:8081/event
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MONGODB_HOST
              value: 'RELEASE-NAME-mongo:27017'
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: mongodb-user
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: mongodb-passwords
            - name: MONGODB_DATABASE
              value: keptn
            - name: MONGODB_EXTERNAL_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: external_connection_string
                  optional: true
            - name: KEPTN_SPEC_VERSION
              value: latest
            - name: TASK_STARTED_WAIT_DURATION
              value: 10m
            - name: UNIFORM_INTEGRATION_TTL
              value: 48h
            - name: PRE_STOP_HOOK_TIME
              value: "15"
            - name: LOG_LEVEL
              value: info
            - name: AUTOMATIC_PROVISIONING_URL
              value: ""
            - name: DISABLE_LEADER_ELECTION
              value: "true"
            - name: PROJECT_NAME_MAX_SIZE
              value: "200"
            - name: SERVICE_NAME_MAX_SIZE
              value: "43"
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 32Mi
          securityContext:
            allowPrivilegeEscalation:
              false
            privileged:
              false
            readOnlyRootFilesystem:
              true
            runAsNonRoot:
              true
            runAsUser:
              65532
      terminationGracePeriodSeconds: 60
---
# Source: keptn/templates/statistics-service.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: statistics-service
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: statistics-service
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: RELEASE-NAME
      app.kubernetes.io/name: statistics-service
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: keptn
        helm.sh/chart: keptn-0.1.0
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "latest"
        app.kubernetes.io/part-of: keptn
        app.kubernetes.io/name: statistics-service
    spec:
      securityContext:
        fsGroup:
          65532
      serviceAccountName: keptn-default
      containers:
        - name: statistics-service
          image: "docker.io/keptn/statistics-service:latest"
          lifecycle:
            preStop:
              exec:
                # using 90s of sleeping to be on the safe side before terminating the pod
                command: ["/bin/sleep", "20" ]
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
          imagePullPolicy: IfNotPresent
          env:
            - name: AGGREGATION_INTERVAL_SECONDS
              value: '1800'
            - name: NEXT_GEN_EVENTS
              value: 'true'
            - name: MONGODB_HOST
              value: 'RELEASE-NAME-mongo:27017'
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: mongodb-user
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: mongodb-passwords
            - name: MONGODB_DATABASE
              value: keptn
            - name: MONGODB_EXTERNAL_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: external_connection_string
                  optional: true
            - name: LOG_LEVEL
              value: info
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 100m
              memory: 64Mi
            requests:
              cpu: 25m
              memory: 32Mi
          securityContext:
            allowPrivilegeEscalation:
              false
            privileged:
              false
            readOnlyRootFilesystem:
              true
            runAsNonRoot:
              true
            runAsUser:
              65532
        - name: distributor
          image: "docker.io/keptn/distributor:latest"
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 100m
              memory: 32Mi
            requests:
              cpu: 25m
              memory: 16Mi
          env:
            - name: PUBSUB_TOPIC
              value: 'sh.keptn.>'
            - name: PUBSUB_RECIPIENT
              value: '127.0.0.1'
            - name: PUBSUB_RECIPIENT_PATH
              value: '/v1/event'
            - name: PUBSUB_URL
              value: 'nats://keptn-nats'
            - name: VERSION
              valueFrom:
                fieldRef:
                  fieldPath: 'metadata.labels[''app.kubernetes.io/version'']'
            - name: DISTRIBUTOR_VERSION
              value: "latest"
            - name: API_PROXY_HTTP_TIMEOUT
              value: "30"
            - name: API_PROXY_MAX_PAYLOAD_BYTES_KB
              value: "64"
            - name: K8S_DEPLOYMENT_NAME
              valueFrom:
                fieldRef:
                  fieldPath: 'metadata.labels[''app.kubernetes.io/name'']'
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                 fieldPath: metadata.name
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: PUBSUB_GROUP
              valueFrom:
                fieldRef:
                  fieldPath: 'metadata.labels[''app.kubernetes.io/name'']'
            - name: OAUTH_CLIENT_ID
              value: ""
            - name: OAUTH_CLIENT_SECRET
              value: ""
            - name: OAUTH_DISCOVERY
              value: ""
            - name: OAUTH_TOKEN_URL
              value: ""
            - name: OAUTH_SCOPES
              value: ""
          securityContext:
            allowPrivilegeEscalation:
              false
            privileged:
              false
            readOnlyRootFilesystem:
              true
            runAsNonRoot:
              true
            runAsUser:
              65532
      terminationGracePeriodSeconds: 60
---
# Source: keptn/templates/webhook-service.yaml
# webhook-service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhook-service
  labels:
    app.kubernetes.io/component: keptn
    helm.sh/chart: keptn-0.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/part-of: keptn
    app.kubernetes.io/name: webhook-service
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: RELEASE-NAME
      app.kubernetes.io/name: webhook-service
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: keptn
        helm.sh/chart: keptn-0.1.0
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "latest"
        app.kubernetes.io/part-of: keptn
        app.kubernetes.io/name: webhook-service
    spec:
      securityContext:
        fsGroup:
          65532
      serviceAccountName: keptn-webhook-service
      containers:
        - name: webhook-service
          image: "docker.io/keptn/webhook-service:latest"
          lifecycle:
            preStop:
              exec:
                # using 90s of sleeping to be on the safe side before terminating the pod
                command: ["/bin/sleep", "20" ]
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 100m
              memory: 64Mi
            requests:
              cpu: 25m
              memory: 32Mi
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LOG_LEVEL
              value: info
            - name: K8S_DEPLOYMENT_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: 'metadata.labels[''app.kubernetes.io/name'']'
            - name: K8S_DEPLOYMENT_VERSION
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: 'metadata.labels[''app.kubernetes.io/version'']'
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          securityContext:
            allowPrivilegeEscalation:
              false
            privileged:
              false
            readOnlyRootFilesystem:
              true
            runAsNonRoot:
              true
            runAsUser:
              65532
      terminationGracePeriodSeconds: 60
---
# Source: keptn/charts/nats/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keptn-nats
  namespace: default
  labels:
    helm.sh/chart: nats-0.13.2
    app.kubernetes.io/name: keptn-nats
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: keptn-nats
      app.kubernetes.io/instance: RELEASE-NAME
  replicas: 1
  serviceName: keptn-nats

  podManagementPolicy: Parallel

  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "7777"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: keptn-nats
        app.kubernetes.io/instance: RELEASE-NAME
    spec:
      # Common volumes for the containers.
      volumes:
      - name: config-volume
        configMap:
          name: keptn-nats-config

      # Local volume shared with the reloader.
      - name: pid
        emptyDir: {}

      #################
      #               #
      #  TLS Volumes  #
      #               #
      #################

      # Required to be able to HUP signal and apply config
      # reload to the server without restarting the pod.
      shareProcessNamespace: true

      #################
      #               #
      #  NATS Server  #
      #               #
      #################
      terminationGracePeriodSeconds: 120
      containers:
      - name: nats
        image: nats:2.7.3-alpine
        imagePullPolicy: IfNotPresent
        resources:
          {}
        ports:
        - containerPort: 4222
          name: client
        - containerPort: 7422
          name: leafnodes
        - containerPort: 7522
          name: gateways
        - containerPort: 6222
          name: cluster
        - containerPort: 8222
          name: monitor
        - containerPort: 7777
          name: metrics

        command:
        - "nats-server"
        - "--config"
        - "/etc/nats-config/nats.conf"

        # Required to be able to define an environment variable
        # that refers to other environment variables.  This env var
        # is later used as part of the configuration file.
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SERVER_NAME
          value: $(POD_NAME)
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CLUSTER_ADVERTISE
          value: $(POD_NAME).keptn-nats.$(POD_NAMESPACE).svc.cluster.local
        volumeMounts:
        - name: config-volume
          mountPath: /etc/nats-config
        - name: pid
          mountPath: /var/run/nats
        - name: keptn-nats-js-pvc
          mountPath: /data/

        #######################
        #                     #
        # Healthcheck Probes  #
        #                     #
        #######################
        livenessProbe:
          httpGet:
            path: /
            port: 8222
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 60
          successThreshold: 1
          failureThreshold: 3

        # Gracefully stop NATS Server on pod deletion or image upgrade.
        #
        lifecycle:
          preStop:
            exec:
              # Using the alpine based NATS image, we add an extra sleep that is
              # the same amount as the terminationGracePeriodSeconds to allow
              # the NATS Server to gracefully terminate the client connections.
              #
              command:
              - "/bin/sh"
              - "-c"
              - "nats-server -sl=ldm=/var/run/nats/nats.pid"

      #################################
      #                               #
      #  NATS Configuration Reloader  #
      #                               #
      #################################

      ##############################
      #                            #
      #  NATS Prometheus Exporter  #
      #                            #
      ##############################
      - name: metrics
        image: natsio/prometheus-nats-exporter:0.9.1
        imagePullPolicy: IfNotPresent
        resources:
          {}
        args:
        - -connz
        - -routez
        - -subz
        - -varz
        - -prefix=nats
        - -use_internal_server_id
        - -jsz=all
        - http://localhost:8222/
        ports:
        - containerPort: 7777
          name: metrics

  volumeClaimTemplates:
  #####################################
  #                                   #
  #  Jetstream New Persistent Volume  #
  #                                   #
  #####################################
    - metadata:
        name: keptn-nats-js-pvc
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
---
# Source: keptn/charts/nats/templates/tests/test-request-reply.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "keptn-nats-test-request-reply"
  labels:
    helm.sh/chart: nats-0.13.2
    app.kubernetes.io/name: keptn-nats
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "2.7.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
  - name: nats-box
    image: synadia/nats-box
    env:
    - name: NATS_HOST
      value: keptn-nats
    command:
    - /bin/sh
    - -ec
    - |
      nats reply -s nats://$NATS_HOST:4222 'name.>' --command "echo 1" &
    - |
      "&&"
    - |
      name=$(nats request -s nats://$NATS_HOST:4222 name.test '' 2>/dev/null)
    - |
      "&&"
    - |
      [ $name = test ]

  restartPolicy: Never
